<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="_ETcVnSvmKernelType" Id="{4e9ab9a8-9da4-47bc-981f-e1ee6e2a0198}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK _ETcVnSvmKernelType EXTENDS EnumDatatypeBase
VAR
	localData : ETcVnSvmKernelType;
	activeData : REFERENCE TO ETcVnSvmKernelType;
	enumBaseDatatype : _DINT(localData);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{66de9ae4-c812-4d78-8fcd-e0264adc83ac}" />
    <Folder Name="Private" Id="{33a33542-e74e-48ba-9871-39fa040b7c89}" />
    <Folder Name="Protected" Id="{8eff03b4-4548-4d7e-b8c3-bba6365127c0}" />
    <Method Name="AddLocalEnumeration" Id="{2a3dc51a-c247-474c-b99e-9c1cc9dbc595}" FolderPath="Private\">
      <Declaration><![CDATA[METHOD PRIVATE AddLocalEnumeration
VAR_INPUT
	Enumeration : T_MAXSTRING;
	Value : ETcVnSvmKernelType;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddEnumeration(Enumeration, Value);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Address" Id="{2354c166-22b9-45e3-8ddf-43e811b5be57}">
      <Declaration><![CDATA[PROPERTY PUBLIC Address : PVOID]]></Declaration>
      <Get Name="Get" Id="{6aceda59-d176-407d-ab9d-9766f121136b}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Address := ADR(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ClearReference" Id="{dcf4f34e-98c6-48ed-9366-9d0bada03146}">
      <Declaration><![CDATA[METHOD PUBLIC ClearReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= localData;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clone" Id="{f8ce7a70-84a1-4912-a797-ff74aedb58ea}">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Datatype
VAR
    pClone : POINTER TO _ETcVnSvmKernelType;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pClone := __NEW(_ETcVnSvmKernelType(InitialValue := Value));
Clone := pClone^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{ac393e90-d547-4f79-9599-fe64592086aa}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	InitialValue : ETcVnSvmKernelType;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[localData := InitialValue;
AddBaseDatatype(enumBaseDatatype);
ClearReference();

AddLocalEnumeration('TCVN_SKT_LINEAR', ETcVnSvmKernelType.TCVN_SKT_LINEAR);
AddLocalEnumeration('TCVN_SKT_POLY', ETcVnSvmKernelType.TCVN_SKT_POLY);
AddLocalEnumeration('TCVN_SKT_RBF', ETcVnSvmKernelType.TCVN_SKT_RBF);
AddLocalEnumeration('TCVN_SKT_SIGMOID', ETcVnSvmKernelType.TCVN_SKT_SIGMOID);
AddLocalEnumeration('TCVN_SKT_CHI2', ETcVnSvmKernelType.TCVN_SKT_CHI2);
AddLocalEnumeration('TCVN_SKT_INTER', ETcVnSvmKernelType.TCVN_SKT_INTER);
]]></ST>
      </Implementation>
    </Method>
    <Property Name="Identifier" Id="{e612268e-1ff9-4ebd-a3b8-7d76fd910bfa}">
      <Declaration><![CDATA[PROPERTY PUBLIC Identifier : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{170c4a03-cc77-4083-a43c-6be9b3da1ce7}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Identifier := 'ETcVnSvmKernelType';]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="IsEnumeratorValueEqual" Id="{a408599c-35b5-4ddd-898c-2ed857872233}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD IsEnumeratorValueEqual : BOOL
VAR_INPUT
	Enumerator : I_KeyValueForwardEnumerator;
END_VAR
VAR
	storedValue : ETcVnSvmKernelType;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Enumerator.TryGet(storedValue) THEN
	RETURN;
END_IF

IsEnumeratorValueEqual := storedValue = activeData;]]></ST>
      </Implementation>
    </Method>
    <Method Name="MakeReferenceTo" Id="{2b8252cd-d20d-487a-9d3e-aa52cad3139b}">
      <Declaration><![CDATA[METHOD PUBLIC MakeReferenceTo
VAR_INPUT
	ReferenceTarget : REFERENCE TO ETcVnSvmKernelType;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= ReferenceTarget;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetBaseDatatypeReference" Id="{ffa37ab8-85e4-488d-9675-da16fbcaac37}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD PROTECTED SetBaseDatatypeReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[enumBaseDatatype.MakeReferenceTo(activeData);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{f19cddd2-d8b4-45ca-99eb-c172d3a5fb8d}">
      <Declaration><![CDATA[PROPERTY PUBLIC Size : UDINT]]></Declaration>
      <Get Name="Get" Id="{0deb8d01-3886-436b-9c2b-2112def2ed37}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := SIZEOF(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="TryMakeReferenceTo" Id="{cf3cc779-8b0f-4e8b-9876-fee7e540a0d8}">
      <Declaration><![CDATA[METHOD TryMakeReferenceTo : BOOL
VAR_INPUT
	Target : I_Datatype;
END_VAR
VAR
	targetAsEnum : I_EnumDatatype;
	pTargetData : POINTER TO ETcVnSvmKernelType;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Target.TryResolveAsEnumDatatype(targetAsEnum) THEN
	RETURN;
END_IF

IF targetAsEnum.Identifier <> Identifier THEN
	RETURN;
END_IF

pTargetData := Target.Address;
activeData REF= pTargetData^;
SetBaseDatatypeReference();
TryMakeReferenceTo := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Value" Id="{07381d76-2ab4-482c-82e1-feaf5bc02b25}">
      <Declaration><![CDATA[PROPERTY PUBLIC Value : ETcVnSvmKernelType]]></Declaration>
      <Get Name="Get" Id="{25b98d78-7428-48c9-b7fe-fd29c0ac08ec}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Value := activeData;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{4e47121c-6185-41e2-95f9-892cef240dc0}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[activeData := Value;]]></ST>
        </Implementation>
      </Set>
    </Property>
  </POU>
</TcPlcObject>