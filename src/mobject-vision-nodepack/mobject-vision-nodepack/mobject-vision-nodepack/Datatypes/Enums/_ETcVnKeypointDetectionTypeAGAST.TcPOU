<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="_ETcVnKeypointDetectionTypeAGAST" Id="{67a28a8f-eafd-4514-9885-1aa38a0ced4d}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK _ETcVnKeypointDetectionTypeAGAST EXTENDS EnumDatatypeBase
VAR
	localData : ETcVnKeypointDetectionTypeAGAST;
	activeData : REFERENCE TO ETcVnKeypointDetectionTypeAGAST;
	enumBaseDatatype : _DINT(localData);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{98c9212f-c5b5-4e49-82ca-18b15940b9b1}" />
    <Folder Name="Private" Id="{88f46baf-d860-41e4-8e06-e46d228eb4cd}" />
    <Folder Name="Protected" Id="{d6bf996b-e1a1-459b-b8fc-ea318b20cbc5}" />
    <Method Name="AddLocalEnumeration" Id="{82fe49dc-19bb-46e4-b09a-c12764a11fdd}" FolderPath="Private\">
      <Declaration><![CDATA[METHOD PRIVATE AddLocalEnumeration
VAR_INPUT
	Enumeration : T_MAXSTRING;
	Value : ETcVnKeypointDetectionTypeAGAST;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddEnumeration(Enumeration, Value);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Address" Id="{1f96a3c3-f0b2-43d7-aa17-82a670a00d88}">
      <Declaration><![CDATA[PROPERTY PUBLIC Address : PVOID]]></Declaration>
      <Get Name="Get" Id="{5080edc1-3651-473b-8106-613447680e24}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Address := ADR(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ClearReference" Id="{c893566f-625b-4142-9fb4-0a80d13f40a2}">
      <Declaration><![CDATA[METHOD PUBLIC ClearReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= localData;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clone" Id="{bc32cac4-9c9e-4599-ad4a-ac0f207ee6dc}">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Datatype
VAR
    pClone : POINTER TO _ETcVnKeypointDetectionTypeAGAST;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pClone := __NEW(_ETcVnKeypointDetectionTypeAGAST(InitialValue := Value));
Clone := pClone^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{6b161aaa-b96d-4886-b393-0f3257b3444f}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	InitialValue : ETcVnKeypointDetectionTypeAGAST;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[localData := InitialValue;
AddBaseDatatype(enumBaseDatatype);
ClearReference();

AddLocalEnumeration('TCVN_KDT_AGAST_5_8', ETcVnKeypointDetectionTypeAGAST.TCVN_KDT_AGAST_5_8);
AddLocalEnumeration('TCVN_KDT_AGAST_7_12d', ETcVnKeypointDetectionTypeAGAST.TCVN_KDT_AGAST_7_12d);
AddLocalEnumeration('TCVN_KDT_AGAST_7_12s', ETcVnKeypointDetectionTypeAGAST.TCVN_KDT_AGAST_7_12s);
AddLocalEnumeration('TCVN_KDT_AGAST_9_16', ETcVnKeypointDetectionTypeAGAST.TCVN_KDT_AGAST_9_16);
]]></ST>
      </Implementation>
    </Method>
    <Property Name="Identifier" Id="{5bea54a1-5947-4b60-ba37-97a2aa677137}">
      <Declaration><![CDATA[PROPERTY PUBLIC Identifier : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{61866023-bdc6-40a2-9239-1cb916c601ab}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Identifier := 'ETcVnKeypointDetectionTypeAGAST';]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="IsEnumeratorValueEqual" Id="{a1ad6ccb-ac05-4ec3-b514-4ea24e9b8452}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD IsEnumeratorValueEqual : BOOL
VAR_INPUT
	Enumerator : I_KeyValueForwardEnumerator;
END_VAR
VAR
	storedValue : ETcVnKeypointDetectionTypeAGAST;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Enumerator.TryGet(storedValue) THEN
	RETURN;
END_IF

IsEnumeratorValueEqual := storedValue = activeData;]]></ST>
      </Implementation>
    </Method>
    <Method Name="MakeReferenceTo" Id="{9b3dd7ba-8e38-42a4-8add-d7661dd9cc20}">
      <Declaration><![CDATA[METHOD PUBLIC MakeReferenceTo
VAR_INPUT
	ReferenceTarget : REFERENCE TO ETcVnKeypointDetectionTypeAGAST;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= ReferenceTarget;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetBaseDatatypeReference" Id="{93c063be-1453-4968-9496-4d87eac52219}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD PROTECTED SetBaseDatatypeReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[enumBaseDatatype.MakeReferenceTo(activeData);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{44b1ddd7-097b-4aa7-992d-a63c06860190}">
      <Declaration><![CDATA[PROPERTY PUBLIC Size : UDINT]]></Declaration>
      <Get Name="Get" Id="{7d4b119e-4440-4886-a096-48444231717e}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := SIZEOF(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="TryMakeReferenceTo" Id="{4ea33e0c-964a-47d2-bd6c-e9d3671961d9}">
      <Declaration><![CDATA[METHOD TryMakeReferenceTo : BOOL
VAR_INPUT
	Target : I_Datatype;
END_VAR
VAR
	targetAsEnum : I_EnumDatatype;
	pTargetData : POINTER TO ETcVnKeypointDetectionTypeAGAST;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Target.TryResolveAsEnumDatatype(targetAsEnum) THEN
	RETURN;
END_IF

IF targetAsEnum.Identifier <> Identifier THEN
	RETURN;
END_IF

pTargetData := Target.Address;
activeData REF= pTargetData^;
SetBaseDatatypeReference();
TryMakeReferenceTo := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Value" Id="{c609db89-89d6-49cb-8df2-65b3eae37e90}">
      <Declaration><![CDATA[PROPERTY PUBLIC Value : ETcVnKeypointDetectionTypeAGAST]]></Declaration>
      <Get Name="Get" Id="{a1ac7cfe-7a88-4858-8355-bf244d7e823a}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Value := activeData;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{13d29cc3-ae84-4573-9571-cd050f1fb384}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[activeData := Value;]]></ST>
        </Implementation>
      </Set>
    </Property>
  </POU>
</TcPlcObject>