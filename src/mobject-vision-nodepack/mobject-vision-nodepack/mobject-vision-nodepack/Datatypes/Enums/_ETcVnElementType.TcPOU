<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="_ETcVnElementType" Id="{f02600d5-f9ab-4e42-87ce-9fa2b7315c9d}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK _ETcVnElementType EXTENDS EnumDatatypeBase
VAR
	localData : ETcVnElementType;
	activeData : REFERENCE TO ETcVnElementType;
	enumBaseDatatype : _DINT(localData);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{5c68abab-8652-42fe-b141-a36eec4b55a5}" />
    <Folder Name="Private" Id="{6be022b2-a358-415d-ad94-796eb63f5cf3}" />
    <Folder Name="Protected" Id="{35797a4d-ac4c-4973-8448-8dfeb0ffe3f1}" />
    <Method Name="AddLocalEnumeration" Id="{872e222b-9da5-4631-959e-c0b8e81936d0}" FolderPath="Private\">
      <Declaration><![CDATA[METHOD PRIVATE AddLocalEnumeration
VAR_INPUT
	Enumeration : T_MAXSTRING;
	Value : ETcVnElementType;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddEnumeration(Enumeration, Value);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Address" Id="{55868eec-8273-48a0-af68-d869c3db1eec}">
      <Declaration><![CDATA[PROPERTY PUBLIC Address : PVOID]]></Declaration>
      <Get Name="Get" Id="{4c3fb2fe-cf77-4bbc-af01-2b7cb5625019}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Address := ADR(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ClearReference" Id="{b6168bc6-93c5-4b71-b132-8cec86e7d5c8}">
      <Declaration><![CDATA[METHOD PUBLIC ClearReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= localData;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clone" Id="{6970dd9a-ec2f-4dff-b339-9af177537c7c}">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Datatype
VAR
    pClone : POINTER TO _ETcVnElementType;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pClone := __NEW(_ETcVnElementType(InitialValue := Value));
Clone := pClone^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{c8d39a47-57a8-4387-973e-2b01ad39013f}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	InitialValue : ETcVnElementType;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[localData := InitialValue;
AddBaseDatatype(enumBaseDatatype);
ClearReference();

AddLocalEnumeration('TCVN_ET_SAME_AS_SOURCE', ETcVnElementType.TCVN_ET_SAME_AS_SOURCE);
AddLocalEnumeration('TCVN_ET_USINT', ETcVnElementType.TCVN_ET_USINT);
AddLocalEnumeration('TCVN_ET_SINT', ETcVnElementType.TCVN_ET_SINT);
AddLocalEnumeration('TCVN_ET_UINT', ETcVnElementType.TCVN_ET_UINT);
AddLocalEnumeration('TCVN_ET_INT', ETcVnElementType.TCVN_ET_INT);
AddLocalEnumeration('TCVN_ET_DINT', ETcVnElementType.TCVN_ET_DINT);
AddLocalEnumeration('TCVN_ET_REAL', ETcVnElementType.TCVN_ET_REAL);
AddLocalEnumeration('TCVN_ET_LREAL', ETcVnElementType.TCVN_ET_LREAL);
]]></ST>
      </Implementation>
    </Method>
    <Property Name="Identifier" Id="{ac8c15e1-3451-4332-8ae3-fbf2992d09b0}">
      <Declaration><![CDATA[PROPERTY PUBLIC Identifier : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{4a81d617-29d5-4593-a29f-75a6950695da}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Identifier := 'ETcVnElementType';]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="IsEnumeratorValueEqual" Id="{036e777e-041b-4bba-8bbe-187939649ac7}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD IsEnumeratorValueEqual : BOOL
VAR_INPUT
	Enumerator : I_KeyValueForwardEnumerator;
END_VAR
VAR
	storedValue : ETcVnElementType;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Enumerator.TryGet(storedValue) THEN
	RETURN;
END_IF

IsEnumeratorValueEqual := storedValue = activeData;]]></ST>
      </Implementation>
    </Method>
    <Method Name="MakeReferenceTo" Id="{760d2d97-11ad-4488-b4c3-7c8195b177cd}">
      <Declaration><![CDATA[METHOD PUBLIC MakeReferenceTo
VAR_INPUT
	ReferenceTarget : REFERENCE TO ETcVnElementType;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= ReferenceTarget;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetBaseDatatypeReference" Id="{862c7560-84e8-4872-a624-439845ebd93b}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD PROTECTED SetBaseDatatypeReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[enumBaseDatatype.MakeReferenceTo(activeData);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{f013cc14-84d1-429d-ac22-f674528cd784}">
      <Declaration><![CDATA[PROPERTY PUBLIC Size : UDINT]]></Declaration>
      <Get Name="Get" Id="{12900cd9-790b-4755-9473-44ee2a6ab5ed}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := SIZEOF(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="TryMakeReferenceTo" Id="{3ffea9cf-f2ef-4537-bd14-4af5fb0a15fe}">
      <Declaration><![CDATA[METHOD TryMakeReferenceTo : BOOL
VAR_INPUT
	Target : I_Datatype;
END_VAR
VAR
	targetAsEnum : I_EnumDatatype;
	pTargetData : POINTER TO ETcVnElementType;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Target.TryResolveAsEnumDatatype(targetAsEnum) THEN
	RETURN;
END_IF

IF targetAsEnum.Identifier <> Identifier THEN
	RETURN;
END_IF

pTargetData := Target.Address;
activeData REF= pTargetData^;
SetBaseDatatypeReference();
TryMakeReferenceTo := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Value" Id="{724ec425-d8b5-4d55-bfd5-007df4eef270}">
      <Declaration><![CDATA[PROPERTY PUBLIC Value : ETcVnElementType]]></Declaration>
      <Get Name="Get" Id="{6835325d-7d23-4871-8ca3-549ee1a7ce79}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Value := activeData;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{b4a01a29-bdc4-45f8-963f-72576fd02409}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[activeData := Value;]]></ST>
        </Implementation>
      </Set>
    </Property>
  </POU>
</TcPlcObject>