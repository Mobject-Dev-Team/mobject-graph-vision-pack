<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="_ETcVnExtremePointDirection" Id="{7915e2dd-bfe7-429d-9db5-edb348f80747}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK _ETcVnExtremePointDirection EXTENDS EnumDatatypeBase
VAR
	localData : ETcVnExtremePointDirection;
	activeData : REFERENCE TO ETcVnExtremePointDirection;
	enumBaseDatatype : _DINT(localData);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{38b16c6b-b79e-4fce-8f08-bb57cf47da7e}" />
    <Folder Name="Private" Id="{5f90be0f-4508-458e-87be-fc16438c2f07}" />
    <Folder Name="Protected" Id="{3e8f0928-7713-48df-a559-4ba587ed08f4}" />
    <Method Name="AddLocalEnumeration" Id="{c9eb0efc-e16f-4d28-9a09-9aef865dccf8}" FolderPath="Private\">
      <Declaration><![CDATA[METHOD PRIVATE AddLocalEnumeration
VAR_INPUT
	Enumeration : T_MAXSTRING;
	Value : ETcVnExtremePointDirection;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddEnumeration(Enumeration, Value);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Address" Id="{e49083c6-4910-4530-a4a0-1284937b51ab}">
      <Declaration><![CDATA[PROPERTY PUBLIC Address : PVOID]]></Declaration>
      <Get Name="Get" Id="{ceaf2389-5420-4ef0-82f9-e8cfd6505183}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Address := ADR(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ClearReference" Id="{53f8c6db-ed66-41f8-9afd-69070bedb588}">
      <Declaration><![CDATA[METHOD PUBLIC ClearReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= localData;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clone" Id="{b0dfc58f-7bad-4f5f-a0d9-0d8a88939602}">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Datatype
VAR
    pClone : POINTER TO _ETcVnExtremePointDirection;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pClone := __NEW(_ETcVnExtremePointDirection(InitialValue := Value));
Clone := pClone^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{9dfbf9e9-92c0-4487-8041-36dd1a303fdb}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	InitialValue : ETcVnExtremePointDirection;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[localData := InitialValue;
AddBaseDatatype(enumBaseDatatype);
ClearReference();

AddLocalEnumeration('TCVN_EPD_TOP_LEFT', ETcVnExtremePointDirection.TCVN_EPD_TOP_LEFT);
AddLocalEnumeration('TCVN_EPD_TOP_MEDIAN', ETcVnExtremePointDirection.TCVN_EPD_TOP_MEDIAN);
AddLocalEnumeration('TCVN_EPD_TOP_RIGHT', ETcVnExtremePointDirection.TCVN_EPD_TOP_RIGHT);
AddLocalEnumeration('TCVN_EPD_BOTTOM_LEFT', ETcVnExtremePointDirection.TCVN_EPD_BOTTOM_LEFT);
AddLocalEnumeration('TCVN_EPD_BOTTOM_MEDIAN', ETcVnExtremePointDirection.TCVN_EPD_BOTTOM_MEDIAN);
AddLocalEnumeration('TCVN_EPD_BOTTOM_RIGHT', ETcVnExtremePointDirection.TCVN_EPD_BOTTOM_RIGHT);
AddLocalEnumeration('TCVN_EPD_LEFT_TOP', ETcVnExtremePointDirection.TCVN_EPD_LEFT_TOP);
AddLocalEnumeration('TCVN_EPD_LEFT_MEDIAN', ETcVnExtremePointDirection.TCVN_EPD_LEFT_MEDIAN);
AddLocalEnumeration('TCVN_EPD_LEFT_BOTTOM', ETcVnExtremePointDirection.TCVN_EPD_LEFT_BOTTOM);
AddLocalEnumeration('TCVN_EPD_RIGHT_TOP', ETcVnExtremePointDirection.TCVN_EPD_RIGHT_TOP);
AddLocalEnumeration('TCVN_EPD_RIGHT_MEDIAN', ETcVnExtremePointDirection.TCVN_EPD_RIGHT_MEDIAN);
AddLocalEnumeration('TCVN_EPD_RIGHT_BOTTOM', ETcVnExtremePointDirection.TCVN_EPD_RIGHT_BOTTOM);
]]></ST>
      </Implementation>
    </Method>
    <Property Name="Identifier" Id="{a86135ce-ee76-4000-9c91-6b3204aa3996}">
      <Declaration><![CDATA[PROPERTY PUBLIC Identifier : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{20ab29f3-44be-4383-83cc-5ff9d3b0879d}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Identifier := 'ETcVnExtremePointDirection';]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="IsEnumeratorValueEqual" Id="{1f24988c-d962-4c00-8987-4a1ae74e756d}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD IsEnumeratorValueEqual : BOOL
VAR_INPUT
	Enumerator : I_KeyValueForwardEnumerator;
END_VAR
VAR
	storedValue : ETcVnExtremePointDirection;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Enumerator.TryGet(storedValue) THEN
	RETURN;
END_IF

IsEnumeratorValueEqual := storedValue = activeData;]]></ST>
      </Implementation>
    </Method>
    <Method Name="MakeReferenceTo" Id="{e4e20845-03c3-4983-a0cb-ceeb84502920}">
      <Declaration><![CDATA[METHOD PUBLIC MakeReferenceTo
VAR_INPUT
	ReferenceTarget : REFERENCE TO ETcVnExtremePointDirection;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= ReferenceTarget;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetBaseDatatypeReference" Id="{ce664c0a-2c6e-47bc-8d2f-20b0d9d5fd9a}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD PROTECTED SetBaseDatatypeReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[enumBaseDatatype.MakeReferenceTo(activeData);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{91bec3bd-fa05-42ae-ac17-737b21418f03}">
      <Declaration><![CDATA[PROPERTY PUBLIC Size : UDINT]]></Declaration>
      <Get Name="Get" Id="{84df2ff1-3755-412d-a865-ca8b1e38a445}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := SIZEOF(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="TryMakeReferenceTo" Id="{75df862d-01e9-472a-a646-037d9f642ede}">
      <Declaration><![CDATA[METHOD TryMakeReferenceTo : BOOL
VAR_INPUT
	Target : I_Datatype;
END_VAR
VAR
	targetAsEnum : I_EnumDatatype;
	pTargetData : POINTER TO ETcVnExtremePointDirection;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Target.TryResolveAsEnumDatatype(targetAsEnum) THEN
	RETURN;
END_IF

IF targetAsEnum.Identifier <> Identifier THEN
	RETURN;
END_IF

pTargetData := Target.Address;
activeData REF= pTargetData^;
SetBaseDatatypeReference();
TryMakeReferenceTo := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Value" Id="{df42a4dd-b4c3-49c0-bd27-d3d2fb96dacb}">
      <Declaration><![CDATA[PROPERTY PUBLIC Value : ETcVnExtremePointDirection]]></Declaration>
      <Get Name="Get" Id="{4ca01923-6893-4b12-af22-7f4425392143}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Value := activeData;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{2ef7a6a9-7b46-4f8f-8265-51b1e0acd840}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[activeData := Value;]]></ST>
        </Implementation>
      </Set>
    </Property>
  </POU>
</TcPlcObject>