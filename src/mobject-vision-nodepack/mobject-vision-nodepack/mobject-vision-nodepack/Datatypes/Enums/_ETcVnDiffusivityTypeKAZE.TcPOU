<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="_ETcVnDiffusivityTypeKAZE" Id="{de3c724f-c8b2-47c1-8eef-2eb1b41c5821}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK _ETcVnDiffusivityTypeKAZE EXTENDS EnumDatatypeBase
VAR
	localData : ETcVnDiffusivityTypeKAZE;
	activeData : REFERENCE TO ETcVnDiffusivityTypeKAZE;
	enumBaseDatatype : _DINT(localData);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{d03ed285-64c9-4e98-8e42-6b10856a48f1}" />
    <Folder Name="Private" Id="{ffabc81c-1f05-4024-8053-599571fc6dd5}" />
    <Folder Name="Protected" Id="{a86c97cb-48f8-4859-8994-008013a916b6}" />
    <Method Name="AddLocalEnumeration" Id="{83369ed4-b32a-4ce4-a928-5a82cc7323f2}" FolderPath="Private\">
      <Declaration><![CDATA[METHOD PRIVATE AddLocalEnumeration
VAR_INPUT
	Enumeration : T_MAXSTRING;
	Value : ETcVnDiffusivityTypeKAZE;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddEnumeration(Enumeration, Value);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Address" Id="{352855b2-30c1-4691-9ea3-3a32df8aa674}">
      <Declaration><![CDATA[PROPERTY PUBLIC Address : PVOID]]></Declaration>
      <Get Name="Get" Id="{19eaf390-fa16-465c-aa09-6a5798f3fbc3}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Address := ADR(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ClearReference" Id="{1fcb9a7c-6903-4648-b010-dcc24250ceee}">
      <Declaration><![CDATA[METHOD PUBLIC ClearReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= localData;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clone" Id="{7dab210d-759a-4397-81e4-befa4ef4e974}">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Datatype
VAR
    pClone : POINTER TO _ETcVnDiffusivityTypeKAZE;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pClone := __NEW(_ETcVnDiffusivityTypeKAZE(InitialValue := Value));
Clone := pClone^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{227b4b11-b1ef-47fc-b8c4-2c50934502f2}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	InitialValue : ETcVnDiffusivityTypeKAZE;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[localData := InitialValue;
AddBaseDatatype(enumBaseDatatype);
ClearReference();

AddLocalEnumeration('TCVN_DT1_KAZE_PM_G1', ETcVnDiffusivityTypeKAZE.TCVN_DT1_KAZE_PM_G1);
AddLocalEnumeration('TCVN_DT1_KAZE_PM_G2', ETcVnDiffusivityTypeKAZE.TCVN_DT1_KAZE_PM_G2);
AddLocalEnumeration('TCVN_DT1_KAZE_WEICKERT', ETcVnDiffusivityTypeKAZE.TCVN_DT1_KAZE_WEICKERT);
AddLocalEnumeration('TCVN_DT1_KAZE_CHARBONNIER', ETcVnDiffusivityTypeKAZE.TCVN_DT1_KAZE_CHARBONNIER);
]]></ST>
      </Implementation>
    </Method>
    <Property Name="Identifier" Id="{439fadb6-e9fc-4836-93dc-a516e071f152}">
      <Declaration><![CDATA[PROPERTY PUBLIC Identifier : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{f3eac933-a1d1-4842-a53f-80f35064a529}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Identifier := 'ETcVnDiffusivityTypeKAZE';]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="IsEnumeratorValueEqual" Id="{acb0921a-d560-4752-b3aa-86060bd6b061}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD IsEnumeratorValueEqual : BOOL
VAR_INPUT
	Enumerator : I_KeyValueForwardEnumerator;
END_VAR
VAR
	storedValue : ETcVnDiffusivityTypeKAZE;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Enumerator.TryGet(storedValue) THEN
	RETURN;
END_IF

IsEnumeratorValueEqual := storedValue = activeData;]]></ST>
      </Implementation>
    </Method>
    <Method Name="MakeReferenceTo" Id="{854c40fe-ec91-4b12-bb01-079ddb92026a}">
      <Declaration><![CDATA[METHOD PUBLIC MakeReferenceTo
VAR_INPUT
	ReferenceTarget : REFERENCE TO ETcVnDiffusivityTypeKAZE;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= ReferenceTarget;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetBaseDatatypeReference" Id="{838f5702-c3fe-4f3d-9712-6882800b5b4b}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD PROTECTED SetBaseDatatypeReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[enumBaseDatatype.MakeReferenceTo(activeData);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{9318f610-d64d-4d4f-babc-287e9fa19050}">
      <Declaration><![CDATA[PROPERTY PUBLIC Size : UDINT]]></Declaration>
      <Get Name="Get" Id="{bba2e89b-5e19-4e02-974e-363c1c63794f}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := SIZEOF(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="TryMakeReferenceTo" Id="{266ca28d-2b81-4152-92ec-bea3e3c949a7}">
      <Declaration><![CDATA[METHOD TryMakeReferenceTo : BOOL
VAR_INPUT
	Target : I_Datatype;
END_VAR
VAR
	targetAsEnum : I_EnumDatatype;
	pTargetData : POINTER TO ETcVnDiffusivityTypeKAZE;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Target.TryResolveAsEnumDatatype(targetAsEnum) THEN
	RETURN;
END_IF

IF targetAsEnum.Identifier <> Identifier THEN
	RETURN;
END_IF

pTargetData := Target.Address;
activeData REF= pTargetData^;
SetBaseDatatypeReference();
TryMakeReferenceTo := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Value" Id="{a5b92b6a-a54a-4ad8-b305-50a3d58ff3a2}">
      <Declaration><![CDATA[PROPERTY PUBLIC Value : ETcVnDiffusivityTypeKAZE]]></Declaration>
      <Get Name="Get" Id="{603ba6f7-d67e-4dbb-90ad-a334093bdc91}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Value := activeData;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{5b88df2b-ec40-46f2-86ae-d424bec03f4b}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[activeData := Value;]]></ST>
        </Implementation>
      </Set>
    </Property>
  </POU>
</TcPlcObject>