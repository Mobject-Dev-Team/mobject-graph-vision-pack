<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="_ETcVnDrawShape" Id="{b8fa2840-ad1b-4681-a66c-9cd387b557d4}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK _ETcVnDrawShape EXTENDS EnumDatatypeBase
VAR
	localData : ETcVnDrawShape;
	activeData : REFERENCE TO ETcVnDrawShape;
	enumBaseDatatype : _DINT(localData);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{edfe3b8c-39f9-48fb-96e6-79af75f555af}" />
    <Folder Name="Private" Id="{c655dfcb-e87b-47a1-97c2-2e6aa35af10a}" />
    <Folder Name="Protected" Id="{a5ebba3b-f2c1-48ce-9958-19d5f5c6a406}" />
    <Method Name="AddLocalEnumeration" Id="{6e714d31-63f7-42fa-825b-cda8edffb4d7}" FolderPath="Private\">
      <Declaration><![CDATA[METHOD PRIVATE AddLocalEnumeration
VAR_INPUT
	Enumeration : T_MAXSTRING;
	Value : ETcVnDrawShape;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddEnumeration(Enumeration, Value);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Address" Id="{fa3a0a41-50d4-4ea9-a5e5-0bf63bfdd0c3}">
      <Declaration><![CDATA[PROPERTY PUBLIC Address : PVOID]]></Declaration>
      <Get Name="Get" Id="{f33a2b7a-107f-4888-99c8-2f9db9707145}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Address := ADR(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ClearReference" Id="{5f5e1bd8-6c47-47a5-8358-3cdb86f3740b}">
      <Declaration><![CDATA[METHOD PUBLIC ClearReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= localData;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clone" Id="{34f53c88-50da-46bb-be00-dbf767f333a7}">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Datatype
VAR
    pClone : POINTER TO _ETcVnDrawShape;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pClone := __NEW(_ETcVnDrawShape(InitialValue := Value));
Clone := pClone^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{0a0ef9d2-9c2b-462b-8a56-82223c02f7fb}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	InitialValue : ETcVnDrawShape;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[localData := InitialValue;
AddBaseDatatype(enumBaseDatatype);
ClearReference();

AddLocalEnumeration('TCVN_DS_RANDOM', ETcVnDrawShape.TCVN_DS_RANDOM);
AddLocalEnumeration('TCVN_DS_CIRCLE', ETcVnDrawShape.TCVN_DS_CIRCLE);
AddLocalEnumeration('TCVN_DS_SQUARE', ETcVnDrawShape.TCVN_DS_SQUARE);
AddLocalEnumeration('TCVN_DS_PLUS', ETcVnDrawShape.TCVN_DS_PLUS);
AddLocalEnumeration('TCVN_DS_X', ETcVnDrawShape.TCVN_DS_X);
AddLocalEnumeration('TCVN_DS_DIAMOND', ETcVnDrawShape.TCVN_DS_DIAMOND);
AddLocalEnumeration('TCVN_DS_MAX', ETcVnDrawShape.TCVN_DS_MAX);
]]></ST>
      </Implementation>
    </Method>
    <Property Name="Identifier" Id="{5bbc03c7-c7a9-4dba-bca8-1ccb3686ff6b}">
      <Declaration><![CDATA[PROPERTY PUBLIC Identifier : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{79591d9b-4d90-4923-bb5d-039db1c0f578}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Identifier := 'ETcVnDrawShape';]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="IsEnumeratorValueEqual" Id="{88cd2a7d-a273-4b94-9d30-dd428d609e52}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD IsEnumeratorValueEqual : BOOL
VAR_INPUT
	Enumerator : I_KeyValueForwardEnumerator;
END_VAR
VAR
	storedValue : ETcVnDrawShape;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Enumerator.TryGet(storedValue) THEN
	RETURN;
END_IF

IsEnumeratorValueEqual := storedValue = activeData;]]></ST>
      </Implementation>
    </Method>
    <Method Name="MakeReferenceTo" Id="{2b6a5769-7ccc-4f7b-bb20-aba6ddaffaf8}">
      <Declaration><![CDATA[METHOD PUBLIC MakeReferenceTo
VAR_INPUT
	ReferenceTarget : REFERENCE TO ETcVnDrawShape;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= ReferenceTarget;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetBaseDatatypeReference" Id="{b4996e03-97f6-4494-9d1b-b97479db43ee}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD PROTECTED SetBaseDatatypeReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[enumBaseDatatype.MakeReferenceTo(activeData);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{90000892-da81-430d-b39d-39628e4e213a}">
      <Declaration><![CDATA[PROPERTY PUBLIC Size : UDINT]]></Declaration>
      <Get Name="Get" Id="{d5041247-6938-4080-b479-6013cc64fc32}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := SIZEOF(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="TryMakeReferenceTo" Id="{e7a56bae-99e5-41ea-adb8-8c3c05abf459}">
      <Declaration><![CDATA[METHOD TryMakeReferenceTo : BOOL
VAR_INPUT
	Target : I_Datatype;
END_VAR
VAR
	targetAsEnum : I_EnumDatatype;
	pTargetData : POINTER TO ETcVnDrawShape;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Target.TryResolveAsEnumDatatype(targetAsEnum) THEN
	RETURN;
END_IF

IF targetAsEnum.Identifier <> Identifier THEN
	RETURN;
END_IF

pTargetData := Target.Address;
activeData REF= pTargetData^;
SetBaseDatatypeReference();
TryMakeReferenceTo := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Value" Id="{2928fb2a-7fdd-482a-9dc4-68c500217c69}">
      <Declaration><![CDATA[PROPERTY PUBLIC Value : ETcVnDrawShape]]></Declaration>
      <Get Name="Get" Id="{d659626e-cac4-45bc-a984-3ba822006ecd}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Value := activeData;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{d94317c9-5603-4fe7-b0ac-f95f3591d0bf}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[activeData := Value;]]></ST>
        </Implementation>
      </Set>
    </Property>
  </POU>
</TcPlcObject>