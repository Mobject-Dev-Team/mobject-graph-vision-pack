<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="_ETcVnDrawMatchesFlags" Id="{73629d68-2f5d-49ff-94a7-7ca7cec57a35}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK _ETcVnDrawMatchesFlags EXTENDS EnumDatatypeBase
VAR
	localData : ETcVnDrawMatchesFlags;
	activeData : REFERENCE TO ETcVnDrawMatchesFlags;
	enumBaseDatatype : _DINT(localData);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{32d96447-e7f0-4675-9007-17a537760d92}" />
    <Folder Name="Private" Id="{c680bf47-7463-46d6-af3a-9c0dd3f34d5f}" />
    <Folder Name="Protected" Id="{e50697a4-5c03-45b7-b8c5-4a3b3ac778d9}" />
    <Method Name="AddLocalEnumeration" Id="{dac81ec1-1941-4add-a8f9-5c7365b133b3}" FolderPath="Private\">
      <Declaration><![CDATA[METHOD PRIVATE AddLocalEnumeration
VAR_INPUT
	Enumeration : T_MAXSTRING;
	Value : ETcVnDrawMatchesFlags;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddEnumeration(Enumeration, Value);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Address" Id="{4dfc363e-885b-49cb-b25b-7bd2f073c2cc}">
      <Declaration><![CDATA[PROPERTY PUBLIC Address : PVOID]]></Declaration>
      <Get Name="Get" Id="{1cea9c2e-8d6d-41bb-a799-155f0282aa03}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Address := ADR(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ClearReference" Id="{96e0f9db-7e13-465a-b546-4f0bad318b15}">
      <Declaration><![CDATA[METHOD PUBLIC ClearReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= localData;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clone" Id="{e7c9abc3-d371-413a-ba76-f13805b09828}">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Datatype
VAR
    pClone : POINTER TO _ETcVnDrawMatchesFlags;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pClone := __NEW(_ETcVnDrawMatchesFlags(InitialValue := Value));
Clone := pClone^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{d9a5d8bc-4c45-46ba-ac38-a69413dff1e3}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	InitialValue : ETcVnDrawMatchesFlags;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[localData := InitialValue;
AddBaseDatatype(enumBaseDatatype);
ClearReference();

AddLocalEnumeration('TCVN_DMF_DEFAULT', ETcVnDrawMatchesFlags.TCVN_DMF_DEFAULT);
AddLocalEnumeration('TCVN_DMF_OVERDRAW', ETcVnDrawMatchesFlags.TCVN_DMF_OVERDRAW);
AddLocalEnumeration('TCVN_DMF_SKIPSINGLE', ETcVnDrawMatchesFlags.TCVN_DMF_SKIPSINGLE);
AddLocalEnumeration('TCVN_DMF_OVERDRAW_SKIPSINGLE', ETcVnDrawMatchesFlags.TCVN_DMF_OVERDRAW_SKIPSINGLE);
AddLocalEnumeration('TCVN_DMF_RICHKEYPOINT', ETcVnDrawMatchesFlags.TCVN_DMF_RICHKEYPOINT);
AddLocalEnumeration('TCVN_DMF_OVERDRAW_RICHKEYPOINT', ETcVnDrawMatchesFlags.TCVN_DMF_OVERDRAW_RICHKEYPOINT);
AddLocalEnumeration('TCVN_DMF_SKIPSINGLE_RICHKEYPOINT', ETcVnDrawMatchesFlags.TCVN_DMF_SKIPSINGLE_RICHKEYPOINT);
AddLocalEnumeration('TCVN_DMF_OVERDRAW_SKIPSINGLE_RICHKEYPOINT', ETcVnDrawMatchesFlags.TCVN_DMF_OVERDRAW_SKIPSINGLE_RICHKEYPOINT);
]]></ST>
      </Implementation>
    </Method>
    <Property Name="Identifier" Id="{1c4343af-72c8-4423-a84b-952720d7bff0}">
      <Declaration><![CDATA[PROPERTY PUBLIC Identifier : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{541cafd0-444a-46cb-83c1-91e9079423cc}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Identifier := 'ETcVnDrawMatchesFlags';]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="IsEnumeratorValueEqual" Id="{5adcd422-e392-4d02-96e5-c18fc03fe199}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD IsEnumeratorValueEqual : BOOL
VAR_INPUT
	Enumerator : I_KeyValueForwardEnumerator;
END_VAR
VAR
	storedValue : ETcVnDrawMatchesFlags;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Enumerator.TryGet(storedValue) THEN
	RETURN;
END_IF

IsEnumeratorValueEqual := storedValue = activeData;]]></ST>
      </Implementation>
    </Method>
    <Method Name="MakeReferenceTo" Id="{e4d459cb-c96b-42db-9005-038b3a8999d1}">
      <Declaration><![CDATA[METHOD PUBLIC MakeReferenceTo
VAR_INPUT
	ReferenceTarget : REFERENCE TO ETcVnDrawMatchesFlags;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= ReferenceTarget;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetBaseDatatypeReference" Id="{f9e79972-8cac-4663-b80a-036a249a0aca}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD PROTECTED SetBaseDatatypeReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[enumBaseDatatype.MakeReferenceTo(activeData);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{777f2de3-8117-4c15-bb27-dfaf70785e0f}">
      <Declaration><![CDATA[PROPERTY PUBLIC Size : UDINT]]></Declaration>
      <Get Name="Get" Id="{20a00256-d0b9-485e-9394-a2417d1faeb0}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := SIZEOF(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="TryMakeReferenceTo" Id="{ba2c7bb3-4e8b-4894-ac56-32d49e7e2378}">
      <Declaration><![CDATA[METHOD TryMakeReferenceTo : BOOL
VAR_INPUT
	Target : I_Datatype;
END_VAR
VAR
	targetAsEnum : I_EnumDatatype;
	pTargetData : POINTER TO ETcVnDrawMatchesFlags;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Target.TryResolveAsEnumDatatype(targetAsEnum) THEN
	RETURN;
END_IF

IF targetAsEnum.Identifier <> Identifier THEN
	RETURN;
END_IF

pTargetData := Target.Address;
activeData REF= pTargetData^;
SetBaseDatatypeReference();
TryMakeReferenceTo := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Value" Id="{08d529be-fbf2-41e9-963b-d1c576cd0f13}">
      <Declaration><![CDATA[PROPERTY PUBLIC Value : ETcVnDrawMatchesFlags]]></Declaration>
      <Get Name="Get" Id="{bdb87810-5f42-4f97-a76b-834854d01944}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Value := activeData;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{bd46c93f-f510-48f6-b779-ad56306f24b7}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[activeData := Value;]]></ST>
        </Implementation>
      </Set>
    </Property>
  </POU>
</TcPlcObject>