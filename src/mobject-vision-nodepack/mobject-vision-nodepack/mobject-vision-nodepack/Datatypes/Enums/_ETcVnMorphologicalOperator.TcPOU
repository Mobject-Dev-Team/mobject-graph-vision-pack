<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="_ETcVnMorphologicalOperator" Id="{d0badeda-6d59-42c2-963c-3382cba96bca}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK _ETcVnMorphologicalOperator EXTENDS EnumDatatypeBase
VAR
	localData : ETcVnMorphologicalOperator;
	activeData : REFERENCE TO ETcVnMorphologicalOperator;
	enumBaseDatatype : _DINT(localData);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{84cbd73c-4c7e-4d6b-ba38-de8d8b123b82}" />
    <Folder Name="Private" Id="{906229fa-3649-4287-8fe5-a76424b9099d}" />
    <Folder Name="Protected" Id="{6add3b18-b4a0-4bac-ba09-b0f05c286afe}" />
    <Method Name="AddLocalEnumeration" Id="{3f38b7bd-6603-4a2f-be5f-4a98c579a0eb}" FolderPath="Private\">
      <Declaration><![CDATA[METHOD PRIVATE AddLocalEnumeration
VAR_INPUT
	Enumeration : T_MAXSTRING;
	Value : ETcVnMorphologicalOperator;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddEnumeration(Enumeration, Value);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Address" Id="{92ea57f2-3ef7-497b-8fc9-21a0625f6932}">
      <Declaration><![CDATA[PROPERTY PUBLIC Address : PVOID]]></Declaration>
      <Get Name="Get" Id="{74510e37-0dd8-4b51-8f19-1fda889ecfab}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Address := ADR(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ClearReference" Id="{36968f5d-6a61-4488-b0df-4f97d9274252}">
      <Declaration><![CDATA[METHOD PUBLIC ClearReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= localData;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clone" Id="{ddca605d-509e-42fb-81f2-b4ca4f2bd291}">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Datatype
VAR
    pClone : POINTER TO _ETcVnMorphologicalOperator;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pClone := __NEW(_ETcVnMorphologicalOperator(InitialValue := Value));
Clone := pClone^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{6e085c89-543e-4b7c-bb3f-dc5639428ed5}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	InitialValue : ETcVnMorphologicalOperator;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[localData := InitialValue;
AddBaseDatatype(enumBaseDatatype);
ClearReference();

AddLocalEnumeration('TCVN_MO_EROSION', ETcVnMorphologicalOperator.TCVN_MO_EROSION);
AddLocalEnumeration('TCVN_MO_DILATION', ETcVnMorphologicalOperator.TCVN_MO_DILATION);
AddLocalEnumeration('TCVN_MO_OPENING', ETcVnMorphologicalOperator.TCVN_MO_OPENING);
AddLocalEnumeration('TCVN_MO_CLOSING', ETcVnMorphologicalOperator.TCVN_MO_CLOSING);
AddLocalEnumeration('TCVN_MO_GRADIENT', ETcVnMorphologicalOperator.TCVN_MO_GRADIENT);
AddLocalEnumeration('TCVN_MO_WHITE_TOPHAT', .TCVN_MO_WHITE_TOPHAT);
AddLocalEnumeration('TCVN_MO_BLACK_TOPHAT', ETcVnMorphologicalOperator.TCVN_MO_BLACK_TOPHAT);
AddLocalEnumeration('TCVN_MO_OPENING_BY_RECONSTRUCTION', ETcVnMorphologicalOperator.TCVN_MO_OPENING_BY_RECONSTRUCTION);
AddLocalEnumeration('TCVN_MO_CLOSING_BY_RECONSTRUCTION', ETcVnMorphologicalOperator.TCVN_MO_CLOSING_BY_RECONSTRUCTION);
AddLocalEnumeration('TCVN_MO_WHITE_TOPHAT_BY_RECONSTRUCTION', ETcVnMorphologicalOperator.TCVN_MO_WHITE_TOPHAT_BY_RECONSTRUCTION);
AddLocalEnumeration('TCVN_MO_BLACK_TOPHAT_BY_RECONSTRUCTION', ETcVnMorphologicalOperator.TCVN_MO_BLACK_TOPHAT_BY_RECONSTRUCTION);
]]></ST>
      </Implementation>
    </Method>
    <Property Name="Identifier" Id="{451a55e2-cd24-4a0a-80f2-8e78cbc05170}">
      <Declaration><![CDATA[PROPERTY PUBLIC Identifier : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{320fc815-b418-46a9-ad0a-36e3f194e57e}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Identifier := 'ETcVnMorphologicalOperator';]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="IsEnumeratorValueEqual" Id="{2d73e71c-d58d-4b7a-8b31-980e14d38816}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD IsEnumeratorValueEqual : BOOL
VAR_INPUT
	Enumerator : I_KeyValueForwardEnumerator;
END_VAR
VAR
	storedValue : ETcVnMorphologicalOperator;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Enumerator.TryGet(storedValue) THEN
	RETURN;
END_IF

IsEnumeratorValueEqual := storedValue = activeData;]]></ST>
      </Implementation>
    </Method>
    <Method Name="MakeReferenceTo" Id="{b240b9d3-6f71-4873-8ae1-95209a146b09}">
      <Declaration><![CDATA[METHOD PUBLIC MakeReferenceTo
VAR_INPUT
	ReferenceTarget : REFERENCE TO ETcVnMorphologicalOperator;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= ReferenceTarget;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetBaseDatatypeReference" Id="{1525471f-2837-4aea-a0a0-9e136d440281}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD PROTECTED SetBaseDatatypeReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[enumBaseDatatype.MakeReferenceTo(activeData);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{aed70ee3-1f82-4cbd-bb64-b6e3a24ad18c}">
      <Declaration><![CDATA[PROPERTY PUBLIC Size : UDINT]]></Declaration>
      <Get Name="Get" Id="{ab679737-7c60-463d-aa65-b2dd6c59876e}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := SIZEOF(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="TryMakeReferenceTo" Id="{26a3520d-62ea-4267-8f9e-343f10515431}">
      <Declaration><![CDATA[METHOD TryMakeReferenceTo : BOOL
VAR_INPUT
	Target : I_Datatype;
END_VAR
VAR
	targetAsEnum : I_EnumDatatype;
	pTargetData : POINTER TO ETcVnMorphologicalOperator;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Target.TryResolveAsEnumDatatype(targetAsEnum) THEN
	RETURN;
END_IF

IF targetAsEnum.Identifier <> Identifier THEN
	RETURN;
END_IF

pTargetData := Target.Address;
activeData REF= pTargetData^;
SetBaseDatatypeReference();
TryMakeReferenceTo := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Value" Id="{173bc254-5827-48a4-a8c4-aea65c58a844}">
      <Declaration><![CDATA[PROPERTY PUBLIC Value : ETcVnMorphologicalOperator]]></Declaration>
      <Get Name="Get" Id="{2855a05a-6b1b-4ba7-972d-fb81d0d992c6}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Value := activeData;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{39ac7f9a-0c92-4956-a3bb-ffca51d26d96}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[activeData := Value;]]></ST>
        </Implementation>
      </Set>
    </Property>
  </POU>
</TcPlcObject>