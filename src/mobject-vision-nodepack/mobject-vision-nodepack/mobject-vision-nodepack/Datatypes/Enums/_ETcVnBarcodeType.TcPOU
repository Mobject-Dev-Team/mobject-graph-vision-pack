<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="_ETcVnBarcodeType" Id="{e0354a92-ad6f-0f26-257f-ae3322c13344}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK _ETcVnBarcodeType EXTENDS EnumDatatypeBase
VAR
	localData : ETcVnBarcodeType;
	activeData : REFERENCE TO ETcVnBarcodeType;
	enumBaseDatatype : _UDINT(localData);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{69361f48-2fee-03f0-03c7-e68019b78d09}" />
    <Folder Name="Private" Id="{891d3b13-d0fa-0dd8-2a65-c04b3d7f0181}" />
    <Folder Name="Protected" Id="{9d7375ce-ecab-0855-14cf-9839580a2e0f}" />
    <Method Name="AddLocalEnumeration" Id="{6620f53c-f518-0084-19f4-07f0a378211a}" FolderPath="Private\">
      <Declaration><![CDATA[METHOD PRIVATE AddLocalEnumeration
VAR_INPUT
	Enumeration : T_MAXSTRING;
	Value : ETcVnBarcodeType;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddEnumeration(Enumeration, Value);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Address" Id="{8f132759-3126-0922-17ba-aef11886ce25}">
      <Declaration><![CDATA[PROPERTY PUBLIC Address : PVOID]]></Declaration>
      <Get Name="Get" Id="{745c8df4-8764-0838-1bf2-5676f6fa67a3}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Address := ADR(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ClearReference" Id="{b3706350-25de-0438-18b0-49c83ead74e2}">
      <Declaration><![CDATA[METHOD PUBLIC ClearReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= localData;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clone" Id="{55067a8c-0b1a-090a-2417-74dc6a8f4910}">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Datatype
VAR
    pClone : POINTER TO _ETcVnBarcodeType;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pClone := __NEW(_ETcVnBarcodeType(InitialValue := Value));
Clone := pClone^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{3e6cb2c0-faf2-0ae6-2cee-3d39ec8826fd}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	InitialValue : ETcVnBarcodeType;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[localData := InitialValue;
AddBaseDatatype(enumBaseDatatype);
ClearReference();

AddLocalEnumeration('TCVN_BT_CODABAR', ETcVnBarcodeType.TCVN_BT_CODABAR);
AddLocalEnumeration('TCVN_BT_CODE39', ETcVnBarcodeType.TCVN_BT_CODE39);
AddLocalEnumeration('TCVN_BT_CODE93', ETcVnBarcodeType.TCVN_BT_CODE93);
AddLocalEnumeration('TCVN_BT_CODE128', ETcVnBarcodeType.TCVN_BT_CODE128);
AddLocalEnumeration('TCVN_BT_EAN8', ETcVnBarcodeType.TCVN_BT_EAN8);
AddLocalEnumeration('TCVN_BT_EAN13', ETcVnBarcodeType.TCVN_BT_EAN13);
AddLocalEnumeration('TCVN_BT_ITF', ETcVnBarcodeType.TCVN_BT_ITF);
AddLocalEnumeration('TCVN_BT_UPCA', ETcVnBarcodeType.TCVN_BT_UPCA);
AddLocalEnumeration('TCVN_BT_UPCE', ETcVnBarcodeType.TCVN_BT_UPCE);
AddLocalEnumeration('TCVN_BT_ANY', ETcVnBarcodeType.TCVN_BT_ANY);
AddLocalEnumeration('TCVN_BT_CODE39EXTENDED', ETcVnBarcodeType.TCVN_BT_CODE39EXTENDED);
]]></ST>
      </Implementation>
    </Method>
    <Property Name="Identifier" Id="{482968e3-c883-0304-2836-df46b9377c3b}">
      <Declaration><![CDATA[PROPERTY PUBLIC Identifier : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{9626fffd-9736-0b64-13dc-f0b1c7aa1c84}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Identifier := 'ETcVnBarcodeType';]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="IsEnumeratorValueEqual" Id="{f8ba4443-c12f-09da-32bb-dec3cef1e398}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD IsEnumeratorValueEqual : BOOL
VAR_INPUT
	Enumerator : I_KeyValueForwardEnumerator;
END_VAR
VAR
	storedValue : ETcVnBarcodeType;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Enumerator.TryGet(storedValue) THEN
	RETURN;
END_IF

IsEnumeratorValueEqual := storedValue = activeData;]]></ST>
      </Implementation>
    </Method>
    <Method Name="MakeReferenceTo" Id="{d5850f3a-209b-04a6-3caf-94a85f5a2778}">
      <Declaration><![CDATA[METHOD PUBLIC MakeReferenceTo
VAR_INPUT
	ReferenceTarget : REFERENCE TO ETcVnBarcodeType;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= ReferenceTarget;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetBaseDatatypeReference" Id="{643ebfb7-7dc8-04bf-3e59-d1549489bfd6}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD PROTECTED SetBaseDatatypeReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[enumBaseDatatype.MakeReferenceTo(activeData);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{77b8304c-d896-01ef-21bb-633bc6993703}">
      <Declaration><![CDATA[PROPERTY PUBLIC Size : UDINT]]></Declaration>
      <Get Name="Get" Id="{63d3a816-55c7-0f8a-01b4-50f565a3fe39}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := SIZEOF(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="TryMakeReferenceTo" Id="{141633fc-5e50-096a-1e23-d61ed1f33d69}">
      <Declaration><![CDATA[METHOD TryMakeReferenceTo : BOOL
VAR_INPUT
	Target : I_Datatype;
END_VAR
VAR
	targetAsEnum : I_EnumDatatype;
	pTargetData : POINTER TO ETcVnBarcodeType;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Target.TryResolveAsEnumDatatype(targetAsEnum) THEN
	RETURN;
END_IF

IF targetAsEnum.Identifier <> Identifier THEN
	RETURN;
END_IF

pTargetData := Target.Address;
activeData REF= pTargetData^;
SetBaseDatatypeReference();
TryMakeReferenceTo := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Value" Id="{ffdea93e-46e4-0ac7-355a-42ede85a1438}">
      <Declaration><![CDATA[PROPERTY PUBLIC Value : ETcVnBarcodeType]]></Declaration>
      <Get Name="Get" Id="{c31bcb9e-25ab-0d0b-1d21-11ad12335443}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Value := activeData;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{b8785104-78fd-0034-2347-61bf249c6562}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[activeData := Value;]]></ST>
        </Implementation>
      </Set>
    </Property>
  </POU>
</TcPlcObject>