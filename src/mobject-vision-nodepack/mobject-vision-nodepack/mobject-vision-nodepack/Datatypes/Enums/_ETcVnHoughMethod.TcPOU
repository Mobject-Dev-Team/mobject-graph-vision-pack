<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="_ETcVnHoughMethod" Id="{1485bf94-7acd-45da-bd74-bef42797f924}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK _ETcVnHoughMethod EXTENDS EnumDatatypeBase
VAR
	localData : ETcVnHoughMethod;
	activeData : REFERENCE TO ETcVnHoughMethod;
	enumBaseDatatype : _DINT(localData);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{18510f6d-72f0-41aa-a342-f1aa9c3cee1b}" />
    <Folder Name="Private" Id="{b770c451-ae77-464d-9fd4-96b1fed04e93}" />
    <Folder Name="Protected" Id="{0172b1fd-91a1-4eda-818c-a67f29d9acb8}" />
    <Method Name="AddLocalEnumeration" Id="{4f9fcff5-5335-4ae6-8200-fd5a3bbc69f8}" FolderPath="Private\">
      <Declaration><![CDATA[METHOD PRIVATE AddLocalEnumeration
VAR_INPUT
	Enumeration : T_MAXSTRING;
	Value : ETcVnHoughMethod;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddEnumeration(Enumeration, Value);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Address" Id="{a1fc1b2f-bdaa-43b1-a3a0-f7eb12819ba7}">
      <Declaration><![CDATA[PROPERTY PUBLIC Address : PVOID]]></Declaration>
      <Get Name="Get" Id="{5e6297b9-4bab-401d-8219-7954dcc3dfb8}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Address := ADR(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ClearReference" Id="{567c8c81-f22b-477b-b9c3-9bc6e7b41400}">
      <Declaration><![CDATA[METHOD PUBLIC ClearReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= localData;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clone" Id="{03b2fb8c-449d-4bd0-8f6c-7731d244bcb0}">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Datatype
VAR
    pClone : POINTER TO _ETcVnHoughMethod;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pClone := __NEW(_ETcVnHoughMethod(InitialValue := Value));
Clone := pClone^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{1fb3ff66-51b1-4456-b323-9906a84ec794}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	InitialValue : ETcVnHoughMethod;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[localData := InitialValue;
AddBaseDatatype(enumBaseDatatype);
ClearReference();

AddLocalEnumeration('TCVN_HM_STANDARD', ETcVnHoughMethod.TCVN_HM_STANDARD);
AddLocalEnumeration('TCVN_HM_PROBABILISTIC', ETcVnHoughMethod.TCVN_HM_PROBABILISTIC);
AddLocalEnumeration('TCVN_HM_MULTI_SCALE', ETcVnHoughMethod.TCVN_HM_MULTI_SCALE);
AddLocalEnumeration('TCVN_HM_GRADIENT', ETcVnHoughMethod.TCVN_HM_GRADIENT);
AddLocalEnumeration('TCVN_HM_GRADIENT_ALT', ETcVnHoughMethod.TCVN_HM_GRADIENT_ALT);
]]></ST>
      </Implementation>
    </Method>
    <Property Name="Identifier" Id="{7561ab0b-e395-4a2c-82a2-b58fd60b954b}">
      <Declaration><![CDATA[PROPERTY PUBLIC Identifier : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{d39e89ab-db12-4e08-9d44-33cc03cf9724}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Identifier := 'ETcVnHoughMethod';]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="IsEnumeratorValueEqual" Id="{95f3ed13-055a-4ca7-9a59-4f7d451c39ff}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD IsEnumeratorValueEqual : BOOL
VAR_INPUT
	Enumerator : I_KeyValueForwardEnumerator;
END_VAR
VAR
	storedValue : ETcVnHoughMethod;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Enumerator.TryGet(storedValue) THEN
	RETURN;
END_IF

IsEnumeratorValueEqual := storedValue = activeData;]]></ST>
      </Implementation>
    </Method>
    <Method Name="MakeReferenceTo" Id="{fbefcbd3-7c75-41a2-bf84-8f38c1f768bf}">
      <Declaration><![CDATA[METHOD PUBLIC MakeReferenceTo
VAR_INPUT
	ReferenceTarget : REFERENCE TO ETcVnHoughMethod;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= ReferenceTarget;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetBaseDatatypeReference" Id="{de6dc8fb-3966-4da7-a414-410d2392b729}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD PROTECTED SetBaseDatatypeReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[enumBaseDatatype.MakeReferenceTo(activeData);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{30762d2d-16e1-43b0-898c-b10a7d0a8ecb}">
      <Declaration><![CDATA[PROPERTY PUBLIC Size : UDINT]]></Declaration>
      <Get Name="Get" Id="{e4955285-871c-476e-b10c-dee6822cd743}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := SIZEOF(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="TryMakeReferenceTo" Id="{928a50f0-5353-4fbf-b631-a5905bc5c968}">
      <Declaration><![CDATA[METHOD TryMakeReferenceTo : BOOL
VAR_INPUT
	Target : I_Datatype;
END_VAR
VAR
	targetAsEnum : I_EnumDatatype;
	pTargetData : POINTER TO ETcVnHoughMethod;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Target.TryResolveAsEnumDatatype(targetAsEnum) THEN
	RETURN;
END_IF

IF targetAsEnum.Identifier <> Identifier THEN
	RETURN;
END_IF

pTargetData := Target.Address;
activeData REF= pTargetData^;
SetBaseDatatypeReference();
TryMakeReferenceTo := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Value" Id="{d70818e2-7c47-4f26-9bf8-579ab15e3874}">
      <Declaration><![CDATA[PROPERTY PUBLIC Value : ETcVnHoughMethod]]></Declaration>
      <Get Name="Get" Id="{ad60dad1-3c1a-42de-85ab-0ac8aa30e6bb}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Value := activeData;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{6a8b01a4-a771-4626-bfc5-2b2bef30423c}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[activeData := Value;]]></ST>
        </Implementation>
      </Set>
    </Property>
  </POU>
</TcPlcObject>