<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="_ETcVnTemplateMatchMethod" Id="{df4ea9b7-a56b-485e-a602-7928e7495125}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK _ETcVnTemplateMatchMethod EXTENDS EnumDatatypeBase
VAR
	localData : ETcVnTemplateMatchMethod;
	activeData : REFERENCE TO ETcVnTemplateMatchMethod;
	enumBaseDatatype : _DINT(localData);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{6a73a42a-460b-4d52-ae9a-32c4e5d58b86}" />
    <Folder Name="Private" Id="{29cd990b-ab22-4bc6-8de3-21ba69ec5868}" />
    <Folder Name="Protected" Id="{6406afc1-ed90-4124-b098-a84d09e1c4b1}" />
    <Method Name="AddLocalEnumeration" Id="{4bbc5cff-ba48-49df-ad14-3b1679e8d419}" FolderPath="Private\">
      <Declaration><![CDATA[METHOD PRIVATE AddLocalEnumeration
VAR_INPUT
	Enumeration : T_MAXSTRING;
	Value : ETcVnTemplateMatchMethod;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddEnumeration(Enumeration, Value);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Address" Id="{00671f9f-a90c-451a-9417-8433b6836364}">
      <Declaration><![CDATA[PROPERTY PUBLIC Address : PVOID]]></Declaration>
      <Get Name="Get" Id="{e43d2360-eb3e-43e4-81fa-8ecf00ab023b}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Address := ADR(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ClearReference" Id="{fb3eda1a-dba8-41b3-b4d8-9b9372e0cd7e}">
      <Declaration><![CDATA[METHOD PUBLIC ClearReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= localData;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clone" Id="{dc972ce0-6d43-4b17-99be-111b2fde3c56}">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Datatype
VAR
    pClone : POINTER TO _ETcVnTemplateMatchMethod;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pClone := __NEW(_ETcVnTemplateMatchMethod(InitialValue := Value));
Clone := pClone^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{28d73f06-2276-49dd-a9e4-744487b63a1e}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	InitialValue : ETcVnTemplateMatchMethod;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[localData := InitialValue;
AddBaseDatatype(enumBaseDatatype);
ClearReference();

AddLocalEnumeration('TCVN_TMM_SQDIFF', ETcVnTemplateMatchMethod.TCVN_TMM_SQDIFF);
AddLocalEnumeration('TCVN_TMM_SQDIFF_NORMED', ETcVnTemplateMatchMethod.TCVN_TMM_SQDIFF_NORMED);
AddLocalEnumeration('TCVN_TMM_CCORR', ETcVnTemplateMatchMethod.TCVN_TMM_CCORR);
AddLocalEnumeration('TCVN_TMM_CCORR_NORMED', ETcVnTemplateMatchMethod.TCVN_TMM_CCORR_NORMED);
AddLocalEnumeration('TCVN_TMM_CCOEFF', ETcVnTemplateMatchMethod.TCVN_TMM_CCOEFF);
AddLocalEnumeration('TCVN_TMM_CCOEFF_NORMED', ETcVnTemplateMatchMethod.TCVN_TMM_CCOEFF_NORMED);
]]></ST>
      </Implementation>
    </Method>
    <Property Name="Identifier" Id="{e804da97-c467-44cd-8f5f-ddd76ab64e38}">
      <Declaration><![CDATA[PROPERTY PUBLIC Identifier : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{8cfa754d-a36e-4dbf-b1af-535facef67c1}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Identifier := 'ETcVnTemplateMatchMethod';]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="IsEnumeratorValueEqual" Id="{ca5b716e-f745-4017-97da-862ad4854a8a}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD IsEnumeratorValueEqual : BOOL
VAR_INPUT
	Enumerator : I_KeyValueForwardEnumerator;
END_VAR
VAR
	storedValue : ETcVnTemplateMatchMethod;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Enumerator.TryGet(storedValue) THEN
	RETURN;
END_IF

IsEnumeratorValueEqual := storedValue = activeData;]]></ST>
      </Implementation>
    </Method>
    <Method Name="MakeReferenceTo" Id="{b21aca97-3aeb-486e-bb7f-c5002e9f63bc}">
      <Declaration><![CDATA[METHOD PUBLIC MakeReferenceTo
VAR_INPUT
	ReferenceTarget : REFERENCE TO ETcVnTemplateMatchMethod;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= ReferenceTarget;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetBaseDatatypeReference" Id="{d60542d6-10dc-4953-a31b-4992626f18f0}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD PROTECTED SetBaseDatatypeReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[enumBaseDatatype.MakeReferenceTo(activeData);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{0db58dc0-db61-4ff4-96ad-4edbb021146b}">
      <Declaration><![CDATA[PROPERTY PUBLIC Size : UDINT]]></Declaration>
      <Get Name="Get" Id="{77411c3c-eb4c-49f8-9b91-fd00389e45dd}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := SIZEOF(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="TryMakeReferenceTo" Id="{51bd588e-0a19-43c3-8461-dad2ba9a073d}">
      <Declaration><![CDATA[METHOD TryMakeReferenceTo : BOOL
VAR_INPUT
	Target : I_Datatype;
END_VAR
VAR
	targetAsEnum : I_EnumDatatype;
	pTargetData : POINTER TO ETcVnTemplateMatchMethod;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Target.TryResolveAsEnumDatatype(targetAsEnum) THEN
	RETURN;
END_IF

IF targetAsEnum.Identifier <> Identifier THEN
	RETURN;
END_IF

pTargetData := Target.Address;
activeData REF= pTargetData^;
SetBaseDatatypeReference();
TryMakeReferenceTo := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Value" Id="{efd2ba35-2f67-4d8e-b6d2-294e0e2b59f5}">
      <Declaration><![CDATA[PROPERTY PUBLIC Value : ETcVnTemplateMatchMethod]]></Declaration>
      <Get Name="Get" Id="{4834c36f-bc66-4696-bcf6-e7cc101289f4}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Value := activeData;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{2da8080a-2135-44b1-bf66-fda8dd99c388}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[activeData := Value;]]></ST>
        </Implementation>
      </Set>
    </Property>
  </POU>
</TcPlcObject>