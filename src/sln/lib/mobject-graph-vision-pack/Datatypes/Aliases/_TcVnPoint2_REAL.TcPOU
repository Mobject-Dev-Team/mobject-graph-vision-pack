<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="_TcVnPoint2_REAL" Id="{c0309542-3d9f-0093-067f-d6f26e8ee7eb}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK _TcVnPoint2_REAL EXTENDS AliasDatatypeBase
VAR
	localData : TcVnPoint2_REAL;
	activeData : REFERENCE TO TcVnPoint2_REAL REF= localData;
	aliasBaseDatatype : _TcVnVector2_REAL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Core" Id="{c26acaa6-bd9c-0553-0a7d-79479696ec0f}">
      <Folder Name="Protected" Id="{f3c91230-3734-0786-36fc-8dc9f0cac54f}" />
    </Folder>
    <Folder Name="Customize" Id="{c971f9c7-9817-09f7-2c4c-4f23a0262133}">
      <Folder Name="Constructor" Id="{a1cc7c06-6056-097b-27ba-bf7c1b5d5396}" />
    </Folder>
    <Property Name="Address" Id="{4bf8523d-7dae-023d-0301-a3fef65f5e5e}" FolderPath="Core\">
      <Declaration><![CDATA[PROPERTY PUBLIC Address : PVOID]]></Declaration>
      <Get Name="Get" Id="{7cd235e7-a0c4-0e07-13e9-3b2c19ece711}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Address := ADR(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ClearReference" Id="{e7dcc64b-73b9-0a0a-158d-14c9dfd63aa4}" FolderPath="Core\">
      <Declaration><![CDATA[METHOD PUBLIC ClearReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= localData;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clone" Id="{20b272c4-f822-08c4-02bf-1277c0241836}" FolderPath="Customize\">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Datatype
VAR
    pClone : POINTER TO _TcVnPoint2_REAL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pClone := __NEW(_TcVnPoint2_REAL);
Clone := pClone^;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{45c15bbd-3281-0eac-0486-bf41c705cda4}"
      FolderPath="Customize\Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	//InitialValue : <type>; // if possible, not all values can be initialized
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[//localData := InitialValue; // if possible, not all values can be initialized
SetBaseDatatypeReference();
AddBaseDatatype(aliasBaseDatatype);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Identifier" Id="{56b1cd41-036f-0df9-3e88-3b7f221a1366}" FolderPath="Customize\">
      <Declaration><![CDATA[PROPERTY PUBLIC Identifier : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{a8f68eef-1af4-0f47-392e-ce7c70c63a98}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Identifier := 'TcVnPoint2_REAL';]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="MakeReferenceTo" Id="{c9cf7b5a-495e-0d1d-02bd-c4fd617b1aa2}"
      FolderPath="Customize\">
      <Declaration><![CDATA[METHOD PUBLIC MakeReferenceTo
VAR_INPUT
	ReferenceTarget : REFERENCE TO TcVnPoint2_REAL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= ReferenceTarget;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetBaseDatatypeReference" Id="{8ffc90c6-7e54-0af7-33fa-51c4c55e214a}"
      FolderPath="Core\Protected\">
      <Declaration><![CDATA[METHOD PROTECTED SetBaseDatatypeReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[aliasBaseDatatype.MakeReferenceTo(activeData);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{67aa72fc-cb13-07b3-0a21-1065e3271c7a}" FolderPath="Core\">
      <Declaration><![CDATA[PROPERTY PUBLIC Size : UDINT]]></Declaration>
      <Get Name="Get" Id="{3d021558-6342-0713-257c-1899dd9d0fcd}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := SIZEOF(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="TryMakeReferenceTo" Id="{e6a92154-afc1-09ba-1dc4-1757ea04e33c}"
      FolderPath="Customize\">
      <Declaration><![CDATA[METHOD TryMakeReferenceTo : BOOL
VAR_INPUT
	Target : I_Datatype;
END_VAR
VAR
	pTargetData : POINTER TO TcVnPoint2_REAL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT IsEquivalentTo(Target) THEN
	RETURN;
END_IF

pTargetData := Target.Address;
activeData REF= pTargetData^;
SetBaseDatatypeReference();
TryMakeReferenceTo := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Value" Id="{f6856ea6-bbd0-05d5-3629-e4f34aebe949}" FolderPath="Customize\">
      <Declaration><![CDATA[PROPERTY PUBLIC Value : REFERENCE TO TcVnPoint2_REAL]]></Declaration>
      <Get Name="Get" Id="{3c3e0156-5813-03a8-09ef-4fd164242755}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Value REF= activeData;]]></ST>
        </Implementation>
      </Get>
    </Property>
  </POU>
</TcPlcObject>