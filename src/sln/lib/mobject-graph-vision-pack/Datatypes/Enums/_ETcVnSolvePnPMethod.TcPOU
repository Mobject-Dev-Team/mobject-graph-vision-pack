<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="_ETcVnSolvePnPMethod" Id="{93e8093c-f0d3-0ae1-1c04-9acab1a62f3b}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK _ETcVnSolvePnPMethod EXTENDS EnumDatatypeBase
VAR
	localData : ETcVnSolvePnPMethod;
	activeData : REFERENCE TO ETcVnSolvePnPMethod;
	enumBaseDatatype : _DINT(localData);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Core" Id="{c19d6535-904d-0fe6-2b2e-aa58d08509b6}">
      <Folder Name="Protected" Id="{d2569fe9-3811-0cb2-2fa6-bd3237163762}" />
    </Folder>
    <Folder Name="Customize" Id="{b5e5d6b6-5f53-003a-3e02-973acf7eaf9e}">
      <Folder Name="Constructor" Id="{e1e72cd6-2121-0341-3a12-482c02a9bec6}" />
      <Folder Name="Private" Id="{0d7004be-713a-016e-12e9-06370cbd39a0}" />
      <Folder Name="Protected" Id="{a9b2e5fb-7f96-04e7-2b6e-2ec8fcc537cf}" />
    </Folder>
    <Method Name="AddLocalEnumeration" Id="{7189cee1-cf8c-0819-1788-41e6672bbdfa}"
      FolderPath="Customize\Private\">
      <Declaration><![CDATA[METHOD PRIVATE AddLocalEnumeration
VAR_INPUT
	Enumeration : T_MAXSTRING;
	Value : ETcVnSolvePnPMethod;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddEnumeration(Enumeration, Value);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Address" Id="{eba46181-4079-0009-226b-586f828059dc}" FolderPath="Core\">
      <Declaration><![CDATA[PROPERTY PUBLIC Address : PVOID]]></Declaration>
      <Get Name="Get" Id="{6eb86ba4-97a6-061f-24fc-43a6e04e7462}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Address := ADR(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ClearReference" Id="{67887f0c-ccb1-0a97-2740-2c73f1526b33}" FolderPath="Core\">
      <Declaration><![CDATA[METHOD PUBLIC ClearReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= localData;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clone" Id="{321b22b2-fd82-0fa7-2ed0-d75bb22d13d4}" FolderPath="Customize\">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Datatype
VAR
    pClone : POINTER TO _ETcVnSolvePnPMethod;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pClone := __NEW(_ETcVnSolvePnPMethod(InitialValue := Value));
Clone := pClone^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{1bbb8533-c197-0d09-0b73-b8470fea1c8c}"
      FolderPath="Customize\Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	InitialValue : ETcVnSolvePnPMethod;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[localData := InitialValue;
AddBaseDatatype(enumBaseDatatype);
ClearReference();

AddLocalEnumeration('TCVN_SPM_ITERATIVE', ETcVnSolvePnPMethod.TCVN_SPM_ITERATIVE);
AddLocalEnumeration('TCVN_SPM_EPNP', ETcVnSolvePnPMethod.TCVN_SPM_EPNP);
AddLocalEnumeration('TCVN_SPM_P3P', ETcVnSolvePnPMethod.TCVN_SPM_P3P);
AddLocalEnumeration('TCVN_SPM_AP3P', ETcVnSolvePnPMethod.TCVN_SPM_AP3P);
AddLocalEnumeration('TCVN_SPM_IPPE', ETcVnSolvePnPMethod.TCVN_SPM_IPPE);
AddLocalEnumeration('TCVN_SPM_IPPE_SQUARE', ETcVnSolvePnPMethod.TCVN_SPM_IPPE_SQUARE);
AddLocalEnumeration('TCVN_SPM_SQPNP', ETcVnSolvePnPMethod.TCVN_SPM_SQPNP);
]]></ST>
      </Implementation>
    </Method>
    <Property Name="Identifier" Id="{4a34e66d-68ec-0440-31bb-73f0b169bf20}" FolderPath="Customize\">
      <Declaration><![CDATA[PROPERTY PUBLIC Identifier : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{740fbe4c-3d47-0c4a-03ba-938b2dcef0af}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Identifier := 'ETcVnSolvePnPMethod';]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="IsEnumeratorValueEqual" Id="{e3e44a9e-0bec-09b5-212b-09a2c1514c5f}"
      FolderPath="Customize\Protected\">
      <Declaration><![CDATA[METHOD IsEnumeratorValueEqual : BOOL
VAR_INPUT
	Enumerator : I_KeyValueForwardEnumerator;
END_VAR
VAR
	storedValue : ETcVnSolvePnPMethod;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Enumerator.TryGet(storedValue) THEN
	RETURN;
END_IF

IsEnumeratorValueEqual := storedValue = activeData;]]></ST>
      </Implementation>
    </Method>
    <Method Name="MakeReferenceTo" Id="{42533c2a-89a9-09ce-08a5-4b97ea228537}"
      FolderPath="Customize\">
      <Declaration><![CDATA[METHOD PUBLIC MakeReferenceTo
VAR_INPUT
	ReferenceTarget : REFERENCE TO ETcVnSolvePnPMethod;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= ReferenceTarget;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetBaseDatatypeReference" Id="{fd8b2ca2-d6ef-0348-18ac-7982cbc912fa}"
      FolderPath="Core\Protected\">
      <Declaration><![CDATA[METHOD PROTECTED SetBaseDatatypeReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[enumBaseDatatype.MakeReferenceTo(activeData);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{71545f28-3044-0394-1060-3d028172f925}" FolderPath="Core\">
      <Declaration><![CDATA[PROPERTY PUBLIC Size : UDINT]]></Declaration>
      <Get Name="Get" Id="{0aaef6d1-2a89-0024-22a6-8227bb27fdd0}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := SIZEOF(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="TryMakeReferenceTo" Id="{4ac1763b-39ce-0726-26fc-510432fb6ccc}"
      FolderPath="Customize\">
      <Declaration><![CDATA[METHOD TryMakeReferenceTo : BOOL
VAR_INPUT
	Target : I_Datatype;
END_VAR
VAR
	pTargetData : POINTER TO ETcVnSolvePnPMethod;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT IsEquivalentTo(Target) THEN
	RETURN;
END_IF

pTargetData := Target.Address;
activeData REF= pTargetData^;
SetBaseDatatypeReference();
TryMakeReferenceTo := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Value" Id="{258044b2-c23a-0509-2688-7c17eac4834c}" FolderPath="Customize\">
      <Declaration><![CDATA[PROPERTY PUBLIC Value : ETcVnSolvePnPMethod]]></Declaration>
      <Get Name="Get" Id="{229e6db7-a840-0490-19c5-33246ca5e40e}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Value := activeData;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{f7440bb4-bec9-0b62-3002-3881b70c97ad}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[activeData := Value;]]></ST>
        </Implementation>
      </Set>
    </Property>
  </POU>
</TcPlcObject>