<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="Node_F_VN_BitwiseOrContainers" Id="{72319969-3f43-01d5-2cab-2a2ce5a77912}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Node_F_VN_BitwiseOrContainers EXTENDS VisionNode
VAR
    ipSrcContainer1 : _ITcVnContainer;
    ipSrcContainer2 : _ITcVnContainer;
    ipDestContainer : _ITcVnContainer;
    hrPrev : _HRESULT(S_OK);
    hresult : _HRESULT(S_OK);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{7f997a1e-b88f-036e-3e1e-73afe43b4574}" />
    <Method Name="Clone" Id="{b4855066-1313-0a74-1b8b-bae235192a54}">
      <Declaration><![CDATA[METHOD PUBLIC  Clone : I_Node
VAR
    pNode : POINTER TO Node_F_VN_BitwiseOrContainers;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(Node_F_VN_BitwiseOrContainers);
Clone := pNode^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{0a780316-651a-0a8f-2687-4d32182ebadc}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
    bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
    bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddInput('ipSrcContainer1', ipSrcContainer1);
AddInput('ipSrcContainer2', ipSrcContainer2);
AddInput('hrPrev', hrPrev);
AddOutput('ipDestContainer', ipDestContainer);
AddOutput('hresult',hresult);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{9dfdd68c-da8d-01ea-307e-24d072407b67}">
      <Declaration><![CDATA[METHOD PROTECTED OnExecute]]></Declaration>
      <Implementation>
        <ST><![CDATA[hresult.Value := F_VN_BitwiseOrContainers(
    ipSrcContainer1 := ipSrcContainer1.Value,
    ipSrcContainer2 := ipSrcContainer2.Value,
    ipDestContainer := ipDestContainer.Value,
    hrPrev:= hrPrev.Value);
    ]]></ST>
      </Implementation>
    </Method>
    <Method Name="PreExecutionCheck" Id="{b3871342-b77f-0b50-2953-0f9130ae747e}">
      <Declaration><![CDATA[METHOD PUBLIC PreExecutionCheck
VAR_INPUT
    Check : I_PreExecutionChecks;
END_VAR
VAR
    elementType1 : GUID;
    elementType2 : GUID;
    elementNum1 : ULINT;
    elementNum2 : ULINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Check.IsTrue(ipSrcContainer1.IsValid, 'ipSrcContainer1 must be a valid container');
Check.IsTrue(ipSrcContainer2.IsValid, 'ipSrcContainer2 must be a valid container');

IF Check.Failed THEN
    RETURN;
END_IF

ipSrcContainer1.Value.GetElementTypeGuid(elementType1);
ipSrcContainer2.Value.GetElementTypeGuid(elementType2);
Check.IsTrue(GuidsEqualByVal(elementType1, elementType2), 'Source containers must contain the same type');

F_VN_GetNumberOfElements(ipSrcContainer1.Value, elementNum1, S_OK);
F_VN_GetNumberOfElements(ipSrcContainer2.Value, elementNum2, S_OK);
Check.IsTrue((elementNum1 = elementNum2), 'Source containers must contain the same number of elements');

//TODO Need to check that container has integer values only.
// SINT, USINT, INT, UINT, DINT, UDINT, ULINT only?
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>