<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="Node_F_VN_BitwiseNotContainer" Id="{c1fcc8b9-c5c9-0354-086c-6a56ba7a2640}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Node_F_VN_BitwiseNotContainer EXTENDS VisionNode
VAR
    ipSrcContainer : _ITcVnContainer;
    ipDestContainer : _ITcVnContainer;
    hrPrev : _HRESULT(S_OK);
    hresult : _HRESULT(S_OK);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{339fc03a-78ef-05fa-34e0-a4aa37b3d92c}" />
    <Method Name="Clone" Id="{66d2a129-7f52-0453-0b79-f9651637afd6}">
      <Declaration><![CDATA[METHOD PUBLIC  Clone : I_Node
VAR
    pNode : POINTER TO Node_F_VN_BitwiseNotContainer;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(Node_F_VN_BitwiseNotContainer);
Clone := pNode^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{ceb6324e-c76f-01e3-2b24-6d4f61a6d1e8}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
    bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
    bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddInput('ipSrcContainer', ipSrcContainer);
AddInput('hrPrev', hrPrev);
AddOutput('ipDestContainer', ipDestContainer);
AddOutput('hresult',hresult);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{ed6d34fd-5a28-0bba-2c83-811bf4e1b872}">
      <Declaration><![CDATA[METHOD PROTECTED OnExecute]]></Declaration>
      <Implementation>
        <ST><![CDATA[hresult.Value := F_VN_BitwiseNotContainer(
    ipSrcContainer := ipSrcContainer.Value,
    ipDestContainer := ipDestContainer.Value,
    hrPrev:= hrPrev.Value);
    ]]></ST>
      </Implementation>
    </Method>
    <Method Name="PreExecutionCheck" Id="{44d71486-1051-0136-329e-5b032d170dd7}">
      <Declaration><![CDATA[METHOD PUBLIC PreExecutionCheck
VAR_INPUT
    Check : I_PreExecutionChecks;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Check.IsTrue(ipSrcContainer.IsValid, 'ipSrcContainer must be a valid container');

IF Check.Failed THEN
    RETURN;
END_IF

//TODO Need to check that container has integer values only.
// SINT, USINT, INT, UINT, DINT, UDINT, ULINT only?
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>