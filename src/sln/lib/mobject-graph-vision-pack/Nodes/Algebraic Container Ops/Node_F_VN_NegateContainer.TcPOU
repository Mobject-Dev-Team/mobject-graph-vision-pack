<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="Node_F_VN_NegateContainer" Id="{a21ed5a4-9a03-0cb4-2fda-cd4b4567fde8}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Node_F_VN_NegateContainer EXTENDS VisionNode
VAR
    ipSrcContainer : _ITcVnContainer;
    ipDestContainer : _ITcVnContainer;
    hrPrev : _HRESULT(S_OK);
    hresult : _HRESULT(S_OK);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{30cd0e4a-11f9-08f4-3442-cffff8080cab}" />
    <Method Name="Clone" Id="{b7623530-7aa0-0e9a-1736-c586e11a22f6}">
      <Declaration><![CDATA[METHOD PUBLIC  Clone : I_Node
VAR
    pNode : POINTER TO Node_F_VN_NegateContainer;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(Node_F_VN_NegateContainer);
Clone := pNode^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{56786ba7-ddb4-0f1c-1e52-0e5835ca3c41}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
    bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
    bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddInput('ipSrcContainer', ipSrcContainer);
AddInput('hrPrev', hrPrev);
AddOutput('ipDestContainer', ipDestContainer);
AddOutput('hresult',hresult);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{e5e0adc5-5cc3-04ae-2908-41471cd5f124}">
      <Declaration><![CDATA[METHOD PROTECTED OnExecute]]></Declaration>
      <Implementation>
        <ST><![CDATA[hresult.Value := F_VN_NegateContainer(
    ipSrcContainer := ipSrcContainer.Value,
    ipDestContainer := ipDestContainer.Value,
    hrPrev:= hrPrev.Value);
    ]]></ST>
      </Implementation>
    </Method>
    <Method Name="PreExecutionCheck" Id="{e6de0a34-e269-0f7a-03f7-bb8f1ff7728a}">
      <Declaration><![CDATA[METHOD PUBLIC PreExecutionCheck
VAR_INPUT
    Check : I_PreExecutionChecks;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Check.IsTrue(ipSrcContainer.IsValid, 'ipSrcContainer must be a valid container');
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>