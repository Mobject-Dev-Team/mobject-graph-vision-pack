<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="Node_F_VN_HistogramEqualizationExp" Id="{9351f287-c768-45af-92a8-d2508306b058}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Node_F_VN_HistogramEqualizationExp EXTENDS VisionNode
VAR
	ipSrcImage : _ITcVnImage;
    ipDestImage : _ITcVnImage;
    hrPrev : _HRESULT(S_OK);
    nChannelIdx : _INT(-1);
	hresult : _HRESULT(S_OK);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{e2d2c7b9-9fd5-412b-800a-a0916e579d9a}" />
    <Method Name="Clone" Id="{c29c4ca5-9e58-42d5-b3c8-d08dbfb1b41e}">
      <Declaration><![CDATA[METHOD PUBLIC  Clone : I_Node
VAR
	pNode : POINTER TO Node_F_VN_HistogramEqualizationExp;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(Node_F_VN_HistogramEqualizationExp);
Clone := pNode^;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{1ffb83e9-ac0b-429d-b4c0-72b6ba8df7f1}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddInput('ipSrcImage', ipSrcImage);
AddParameter('nChannelIdx', nChannelIdx);
AddInput('hrPrev', hrPrev);
AddOutput('ipDestImage', ipDestImage);
AddOutput('hresult',hresult);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{b915e1ef-ef3a-4b65-8eee-a64bed75ee80}">
      <Declaration><![CDATA[METHOD PROTECTED OnExecute]]></Declaration>
      <Implementation>
        <ST><![CDATA[hresult.Value := F_VN_HistogramEqualizationExp(
	ipSrcImage   := ipSrcImage.Value,
    ipDestImage   := ipDestImage.Value,
    nChannelIdx := nChannelIdx.Value,
	hrPrev := hrPrev.Value);
  ]]></ST>
      </Implementation>
    </Method>
    <Method Name="PreExecutionCheck" Id="{c80a9d98-c8ac-4c6d-af6f-c599c5fd17fa}">
      <Declaration><![CDATA[METHOD PUBLIC PreExecutionCheck
VAR_INPUT
	Check : I_PreExecutionChecks;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Check.IsTrue(ipSrcImage.IsValid, 'ipSrcImage must contain an image');
Check.IsTrue(nChannelIdx.Value >= -1, 'nChannelIdx must be greater than or equal to -1');

IF nChannelIdx.Value = -1 THEN
    Check.IsTrue(ipSrcImage.HasChannelCount(3), 'ipSrcImage must have 3 channels');
ELSE
    Check.IsTrue((ipSrcImage.HasChannelCount(1) OR ipSrcImage.HasChannelCount(3)), 'ipSrcImage must have 1 or 3 channels');
END_IF
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>