<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="Node_F_VN_ConvertColorSpace" Id="{be1766e7-e6ea-06a3-0c0f-bb81e570288e}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Node_F_VN_ConvertColorSpace EXTENDS VisionNode
VAR
	ipSrcImage : _ITcVnImage;
    ipDestImage : _ITcVnImage;
    eTransform : _ETcVnColorSpaceTransform(ETcVnColorSpaceTransform.TCVN_CST_RGBA_TO_GRAY);
    hrPrev : _HRESULT(S_OK);
	hresult : _HRESULT(S_OK);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{b65dc154-1ac1-03c4-346d-19e138c362f3}" />
    <Method Name="Clone" Id="{183571d5-5395-0956-1776-d98504f3987a}">
      <Declaration><![CDATA[METHOD PUBLIC  Clone : I_Node
VAR
	pNode : POINTER TO Node_F_VN_ConvertColorSpace;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(Node_F_VN_ConvertColorSpace);
Clone := pNode^;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{e16bba1c-071e-065e-38b1-878340e733eb}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddInput('ipSrcImage', ipSrcImage);
AddInput('hrPrev', hrPrev);
AddOutput('ipDestImage', ipDestImage);
AddOutput('hresult',hresult);
AddParameter('eTransform', eTransform);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{0faaad2b-dd3f-0d95-2f39-1f13ef681cd5}">
      <Declaration><![CDATA[METHOD PROTECTED OnExecute]]></Declaration>
      <Implementation>
        <ST><![CDATA[hresult.Value := F_VN_ConvertColorSpace(
	ipSrcImage   := ipSrcImage.Value, 
	ipDestImage:= ipDestImage.Value, 
	eTransform := eTransform.Value, 
	hrPrev := hrPrev.Value);
    ]]></ST>
      </Implementation>
    </Method>
    <Method Name="PreExecutionCheck" Id="{66b3f6c8-37de-0b22-1f12-5728810284c7}">
      <Declaration><![CDATA[METHOD PUBLIC PreExecutionCheck
VAR_INPUT
	Check : I_PreExecutionChecks;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Check.IsTrue(ipSrcImage.IsValid, 'ipSrcImage must contain an image');

CASE eTransform.Value OF

    // RGB, BGR (3 channels)
    ETcVnColorSpaceTransform.TCVN_CST_BGR_TO_BGRA,
    //ETcVnColorSpaceTransform.TCVN_CST_RGB_TO_RGBA, // duplicate
    ETcVnColorSpaceTransform.TCVN_CST_BGR_TO_RGBA,
    //ETcVnColorSpaceTransform.TCVN_CST_RGB_TO_BGRA, // duplicate
    ETcVnColorSpaceTransform.TCVN_CST_BGR_TO_RGB,
    //ETcVnColorSpaceTransform.TCVN_CST_RGB_TO_BGR, // duplicate
    ETcVnColorSpaceTransform.TCVN_CST_BGR_TO_GRAY,
    ETcVnColorSpaceTransform.TCVN_CST_RGB_TO_GRAY,
    ETcVnColorSpaceTransform.TCVN_CST_RGB_TO_BGR_565,
    ETcVnColorSpaceTransform.TCVN_CST_BGR_TO_BGR_565,
    ETcVnColorSpaceTransform.TCVN_CST_BGR_565_TO_RGB,
    ETcVnColorSpaceTransform.TCVN_CST_BGR_565_TO_BGR,
    ETcVnColorSpaceTransform.TCVN_CST_BGR_565_TO_RGBA,
    ETcVnColorSpaceTransform.TCVN_CST_BGR_565_TO_BGRA,
    ETcVnColorSpaceTransform.TCVN_CST_BGR_565_TO_GRAY,
    ETcVnColorSpaceTransform.TCVN_CST_RGB_TO_BGR_555,
    ETcVnColorSpaceTransform.TCVN_CST_BGR_TO_BGR_555,
    ETcVnColorSpaceTransform.TCVN_CST_BGR_555_TO_RGB,
    ETcVnColorSpaceTransform.TCVN_CST_BGR_555_TO_BGR,
    ETcVnColorSpaceTransform.TCVN_CST_BGR_555_TO_RGBA,
    ETcVnColorSpaceTransform.TCVN_CST_BGR_555_TO_BGRA,
    ETcVnColorSpaceTransform.TCVN_CST_BGR_555_TO_GRAY,
    ETcVnColorSpaceTransform.TCVN_CST_BGR_TO_XYZ,
    ETcVnColorSpaceTransform.TCVN_CST_RGB_TO_XYZ,
    ETcVnColorSpaceTransform.TCVN_CST_BGR_TO_YCRCB,
    ETcVnColorSpaceTransform.TCVN_CST_RGB_TO_YCRCB,
    ETcVnColorSpaceTransform.TCVN_CST_BGR_TO_HSV,
    ETcVnColorSpaceTransform.TCVN_CST_RGB_TO_HSV,
    ETcVnColorSpaceTransform.TCVN_CST_BGR_TO_LAB,
    ETcVnColorSpaceTransform.TCVN_CST_RGB_TO_LAB,
    ETcVnColorSpaceTransform.TCVN_CST_BGR_TO_LUV,
    ETcVnColorSpaceTransform.TCVN_CST_RGB_TO_LUV,
    ETcVnColorSpaceTransform.TCVN_CST_BGR_TO_HLS,
    ETcVnColorSpaceTransform.TCVN_CST_RGB_TO_HLS,
    ETcVnColorSpaceTransform.TCVN_CST_BGR_TO_HSV_FULL,
    ETcVnColorSpaceTransform.TCVN_CST_RGB_TO_HSV_FULL,
    ETcVnColorSpaceTransform.TCVN_CST_BGR_TO_HLS_FULL,
    ETcVnColorSpaceTransform.TCVN_CST_RGB_TO_HLS_FULL,
    ETcVnColorSpaceTransform.TCVN_CST_BGR_TO_YUV,
    ETcVnColorSpaceTransform.TCVN_CST_RGB_TO_YUV,
    ETcVnColorSpaceTransform.TCVN_CST_RGB_TO_YUV_420_I420,
    ETcVnColorSpaceTransform.TCVN_CST_BGR_TO_YUV_420_I420,
    //ETcVnColorSpaceTransform.TCVN_CST_RGB_TO_YUV_420_IYUV, // duplicate
    //ETcVnColorSpaceTransform.TCVN_CST_BGR_TO_YUV_420_IYUV, // duplicate
    ETcVnColorSpaceTransform.TCVN_CST_RGB_TO_YUV_420_YV12,
    ETcVnColorSpaceTransform.TCVN_CST_BGR_TO_YUV_420_YV12 :

        Check.IsTrue(ipSrcImage.HasChannelCount(3), 'ipSrcImage must have 3 channels');
    
    // RGBA, BGRA (4 channels)
    ETcVnColorSpaceTransform.TCVN_CST_BGRA_TO_BGR,
    //ETcVnColorSpaceTransform.TCVN_CST_RGBA_TO_RGB, // duplicate
    ETcVnColorSpaceTransform.TCVN_CST_BGRA_TO_RGB,
    //ETcVnColorSpaceTransform.TCVN_CST_RGBA_TO_BGR, // duplicate
    ETcVnColorSpaceTransform.TCVN_CST_BGRA_TO_RGBA,
    //ETcVnColorSpaceTransform.TCVN_CST_RGBA_TO_BGRA, // duplicate
    ETcVnColorSpaceTransform.TCVN_CST_BGRA_TO_GRAY,
    ETcVnColorSpaceTransform.TCVN_CST_RGBA_TO_GRAY,
    ETcVnColorSpaceTransform.TCVN_CST_RGBA_TO_BGR_565,
    ETcVnColorSpaceTransform.TCVN_CST_BGRA_TO_BGR_565,
    ETcVnColorSpaceTransform.TCVN_CST_RGBA_TO_BGR_555,
    ETcVnColorSpaceTransform.TCVN_CST_BGRA_TO_BGR_555,
    ETcVnColorSpaceTransform.TCVN_CST_RGBA_TO_PREMULTIPLICATED_RGBA,
    ETcVnColorSpaceTransform.TCVN_CST_RGBA_TO_YUV_420_I420,
    ETcVnColorSpaceTransform.TCVN_CST_BGRA_TO_YUV_420_I420,
    //ETcVnColorSpaceTransform.TCVN_CST_RGBA_TO_YUV_420_IYUV, // duplicate
    //ETcVnColorSpaceTransform.TCVN_CST_BGRA_TO_YUV_420_IYUV, // duplicate
    ETcVnColorSpaceTransform.TCVN_CST_RGBA_TO_YUV_420_YV12,
    ETcVnColorSpaceTransform.TCVN_CST_BGRA_TO_YUV_420_YV12 :

        Check.IsTrue(ipSrcImage.HasChannelCount(4), 'ipSrcImage must have 4 channels');
    
    // Bayer (1 channel)
    ETcVnColorSpaceTransform.TCVN_CST_BAYER_RG_TO_BGR,
    //ETcVnColorSpaceTransform.TCVN_CST_BAYER_BG_TO_RGB, // duplicate
    ETcVnColorSpaceTransform.TCVN_CST_BAYER_GR_TO_BGR,
    //ETcVnColorSpaceTransform.TCVN_CST_BAYER_GB_TO_RGB, // duplicate
    ETcVnColorSpaceTransform.TCVN_CST_BAYER_BG_TO_BGR,
    //ETcVnColorSpaceTransform.TCVN_CST_BAYER_RG_TO_RGB, // duplicate
    ETcVnColorSpaceTransform.TCVN_CST_BAYER_GB_TO_BGR,
    //ETcVnColorSpaceTransform.TCVN_CST_BAYER_GR_TO_RGB, // duplicate
    ETcVnColorSpaceTransform.TCVN_CST_BAYER_RG_TO_BGR_VNG,
    ETcVnColorSpaceTransform.TCVN_CST_BAYER_GR_TO_BGR_VNG,
    ETcVnColorSpaceTransform.TCVN_CST_BAYER_BG_TO_BGR_VNG,
    ETcVnColorSpaceTransform.TCVN_CST_BAYER_GB_TO_BGR_VNG,
    //ETcVnColorSpaceTransform.TCVN_CST_BAYER_RG_TO_RGB_VNG, // duplicate
    //ETcVnColorSpaceTransform.TCVN_CST_BAYER_GR_TO_RGB_VNG, // duplicate
    //ETcVnColorSpaceTransform.TCVN_CST_BAYER_BG_TO_RGB_VNG, // duplicate
    //ETcVnColorSpaceTransform.TCVN_CST_BAYER_GB_TO_RGB_VNG, // duplicate
    ETcVnColorSpaceTransform.TCVN_CST_BAYER_RG_TO_GRAY,
    ETcVnColorSpaceTransform.TCVN_CST_BAYER_GR_TO_GRAY,
    ETcVnColorSpaceTransform.TCVN_CST_BAYER_BG_TO_GRAY,
    ETcVnColorSpaceTransform.TCVN_CST_BAYER_GB_TO_GRAY,
    ETcVnColorSpaceTransform.TCVN_CST_BAYER_RG_TO_BGR_EA,
    ETcVnColorSpaceTransform.TCVN_CST_BAYER_GR_TO_BGR_EA,
    ETcVnColorSpaceTransform.TCVN_CST_BAYER_BG_TO_BGR_EA,
    ETcVnColorSpaceTransform.TCVN_CST_BAYER_GB_TO_BGR_EA,
    //ETcVnColorSpaceTransform.TCVN_CST_BAYER_RG_TO_RGB_EA, // duplicate
    //ETcVnColorSpaceTransform.TCVN_CST_BAYER_GR_TO_RGB_EA, // duplicate
    //ETcVnColorSpaceTransform.TCVN_CST_BAYER_BG_TO_RGB_EA, // duplicate
    //ETcVnColorSpaceTransform.TCVN_CST_BAYER_GB_TO_RGB_EA, // duplicate
    ETcVnColorSpaceTransform.TCVN_CST_BAYER_RG_TO_BGRA,
    ETcVnColorSpaceTransform.TCVN_CST_BAYER_GR_TO_BGRA,
    ETcVnColorSpaceTransform.TCVN_CST_BAYER_BG_TO_BGRA,
    ETcVnColorSpaceTransform.TCVN_CST_BAYER_GB_TO_BGRA :
    //ETcVnColorSpaceTransform.TCVN_CST_BAYER_RG_TO_RGBA, // duplicate
    //ETcVnColorSpaceTransform.TCVN_CST_BAYER_GR_TO_RGBA, // duplicate
    //ETcVnColorSpaceTransform.TCVN_CST_BAYER_BG_TO_RGBA, // duplicate
    //ETcVnColorSpaceTransform.TCVN_CST_BAYER_GB_TO_RGBA : // duplicate

        Check.IsTrue(ipSrcImage.HasChannelCount(1), 'ipSrcImage must have 1 channel');
    
    // Gray (1 channel)
    ETcVnColorSpaceTransform.TCVN_CST_GRAY_TO_BGR,
    //ETcVnColorSpaceTransform.TCVN_CST_GRAY_TO_RGB, // duplicate
    ETcVnColorSpaceTransform.TCVN_CST_GRAY_TO_BGRA,
    //ETcVnColorSpaceTransform.TCVN_CST_GRAY_TO_RGBA, // duplicate
    ETcVnColorSpaceTransform.TCVN_CST_GRAY_TO_BGR_565,
    ETcVnColorSpaceTransform.TCVN_CST_GRAY_TO_BGR_555 :

        Check.IsTrue(ipSrcImage.HasChannelCount(1), 'ipSrcImage must have 1 channel');
    
    // XYZ (3 channels)
    ETcVnColorSpaceTransform.TCVN_CST_XYZ_TO_BGR,
    ETcVnColorSpaceTransform.TCVN_CST_XYZ_TO_RGB :

        Check.IsTrue(ipSrcImage.HasChannelCount(3), 'ipSrcImage must have 3 channels');
    
    // YCrCb (3 channels)
    ETcVnColorSpaceTransform.TCVN_CST_YCRCB_TO_BGR,
    ETcVnColorSpaceTransform.TCVN_CST_YCRCB_TO_RGB :

        Check.IsTrue(ipSrcImage.HasChannelCount(3), 'ipSrcImage must have 3 channels');
    
    // HSV (3 channels)
    ETcVnColorSpaceTransform.TCVN_CST_HSV_TO_BGR,
    ETcVnColorSpaceTransform.TCVN_CST_HSV_TO_RGB,
    ETcVnColorSpaceTransform.TCVN_CST_HSV_TO_BGR_FULL,
    ETcVnColorSpaceTransform.TCVN_CST_HSV_TO_RGB_FULL :

        Check.IsTrue(ipSrcImage.HasChannelCount(3), 'ipSrcImage must have 3 channels');
    
    // LAB (3 channels)
    ETcVnColorSpaceTransform.TCVN_CST_LAB_TO_BGR,
    ETcVnColorSpaceTransform.TCVN_CST_LAB_TO_RGB,
    ETcVnColorSpaceTransform.TCVN_CST_LAB_TO_LBGR,
    ETcVnColorSpaceTransform.TCVN_CST_LAB_TO_LRGB :

        Check.IsTrue(ipSrcImage.HasChannelCount(3), 'ipSrcImage must have 3 channels');
    
    // LUV (3 channels)
    ETcVnColorSpaceTransform.TCVN_CST_LUV_TO_BGR,
    ETcVnColorSpaceTransform.TCVN_CST_LUV_TO_RGB,
    ETcVnColorSpaceTransform.TCVN_CST_LUV_TO_LBGR,
    ETcVnColorSpaceTransform.TCVN_CST_LUV_TO_LRGB :

        Check.IsTrue(ipSrcImage.HasChannelCount(3), 'ipSrcImage must have 3 channels');
    
    // HLS (3 channels)
    ETcVnColorSpaceTransform.TCVN_CST_HLS_TO_BGR,
    ETcVnColorSpaceTransform.TCVN_CST_HLS_TO_RGB,
    ETcVnColorSpaceTransform.TCVN_CST_HLS_TO_BGR_FULL,
    ETcVnColorSpaceTransform.TCVN_CST_HLS_TO_RGB_FULL :

        Check.IsTrue(ipSrcImage.HasChannelCount(3), 'ipSrcImage must have 3 channels');
    
    // LRGB, LBGR (4 channels)
    ETcVnColorSpaceTransform.TCVN_CST_LBGR_TO_LAB,
    ETcVnColorSpaceTransform.TCVN_CST_LRGB_TO_LAB,
    ETcVnColorSpaceTransform.TCVN_CST_LBGR_TO_LUV,
    ETcVnColorSpaceTransform.TCVN_CST_LRGB_TO_LUV :

        Check.IsTrue(ipSrcImage.HasChannelCount(4), 'ipSrcImage must have 4 channels');
    
    // YUV (3 channels)
    ETcVnColorSpaceTransform.TCVN_CST_YUV_TO_BGR,
    ETcVnColorSpaceTransform.TCVN_CST_YUV_TO_RGB,
    ETcVnColorSpaceTransform.TCVN_CST_YUV_420_NV12_TO_RGB,
    ETcVnColorSpaceTransform.TCVN_CST_YUV_420_NV12_TO_BGR,
    ETcVnColorSpaceTransform.TCVN_CST_YUV_420_NV21_TO_RGB,
    ETcVnColorSpaceTransform.TCVN_CST_YUV_420_NV21_TO_BGR,
    //ETcVnColorSpaceTransform.TCVN_CST_YUV_420_SP_TO_RGB, // duplicate
    //ETcVnColorSpaceTransform.TCVN_CST_YUV_420_SP_TO_BGR, // duplicate
    ETcVnColorSpaceTransform.TCVN_CST_YUV_420_NV12_TO_RGBA,
    ETcVnColorSpaceTransform.TCVN_CST_YUV_420_NV12_TO_BGRA,
    ETcVnColorSpaceTransform.TCVN_CST_YUV_420_NV21_TO_RGBA,
    ETcVnColorSpaceTransform.TCVN_CST_YUV_420_NV21_TO_BGRA,
    //ETcVnColorSpaceTransform.TCVN_CST_YUV_420_SP_TO_RGBA, // duplicate
    //ETcVnColorSpaceTransform.TCVN_CST_YUV_420_SP_TO_BGRA, // duplicate
    ETcVnColorSpaceTransform.TCVN_CST_YUV_420_YV12_TO_RGB,
    ETcVnColorSpaceTransform.TCVN_CST_YUV_420_YV12_TO_BGR,
    ETcVnColorSpaceTransform.TCVN_CST_YUV_420_IYUV_TO_RGB,
    //ETcVnColorSpaceTransform.TCVN_CST_YUV_420_I420_TO_RGB, // duplicate
    ETcVnColorSpaceTransform.TCVN_CST_YUV_420_I420_TO_BGR,
    //ETcVnColorSpaceTransform.TCVN_CST_YUV_420_P_TO_RGB, // duplicate
    //ETcVnColorSpaceTransform.TCVN_CST_YUV_420_P_TO_BGR, // duplicate
    ETcVnColorSpaceTransform.TCVN_CST_YUV_420_YV12_TO_RGBA,
    ETcVnColorSpaceTransform.TCVN_CST_YUV_420_YV12_TO_BGRA,
    ETcVnColorSpaceTransform.TCVN_CST_YUV_420_IYUV_TO_RGBA,
    ETcVnColorSpaceTransform.TCVN_CST_YUV_420_IYUV_TO_BGRA,
    //ETcVnColorSpaceTransform.TCVN_CST_YUV_420_I420_TO_RGBA, // duplicate
    //ETcVnColorSpaceTransform.TCVN_CST_YUV_420_I420_TO_BGRA, // duplicate
    //ETcVnColorSpaceTransform.TCVN_CST_YUV_420_P_TO_RGBA, // duplicate
    //ETcVnColorSpaceTransform.TCVN_CST_YUV_420_P_TO_BGRA, // duplicate
    ETcVnColorSpaceTransform.TCVN_CST_YUV_420_TO_GRAY,
    //ETcVnColorSpaceTransform.TCVN_CST_YUV_420_NV21_TO_GRAY, // duplicate
    //ETcVnColorSpaceTransform.TCVN_CST_YUV_420_NV12_TO_GRAY, // duplicate
    //ETcVnColorSpaceTransform.TCVN_CST_YUV_420_YV12_TO_GRAY, // duplicate
    //ETcVnColorSpaceTransform.TCVN_CST_YUV_420_IYUV_TO_GRAY, // duplicate
    //ETcVnColorSpaceTransform.TCVN_CST_YUV_420_I420_TO_GRAY, // duplicate
    //ETcVnColorSpaceTransform.TCVN_CST_YUV_420_SP_TO_GRAY, // duplicate
    //ETcVnColorSpaceTransform.TCVN_CST_YUV_420_P_TO_GRAY, // duplicate
    ETcVnColorSpaceTransform.TCVN_CST_YUV_422_UYVY_TO_RGB,
    ETcVnColorSpaceTransform.TCVN_CST_YUV_422_UYVY_TO_BGR,
    //ETcVnColorSpaceTransform.TCVN_CST_YUV_422_Y422_TO_RGB, // duplicate
    //ETcVnColorSpaceTransform.TCVN_CST_YUV_422_Y422_TO_BGR, // duplicate
    //ETcVnColorSpaceTransform.TCVN_CST_YUV_422_UYNV_TO_RGB, // duplicate
    //ETcVnColorSpaceTransform.TCVN_CST_YUV_422_UYNV_TO_BGR, // duplicate
    ETcVnColorSpaceTransform.TCVN_CST_YUV_422_UYVY_TO_RGBA,
    ETcVnColorSpaceTransform.TCVN_CST_YUV_422_UYVY_TO_BGRA,
    //ETcVnColorSpaceTransform.TCVN_CST_YUV_422_Y422_TO_RGBA, // duplicate
    //ETcVnColorSpaceTransform.TCVN_CST_YUV_422_Y422_TO_BGRA, // duplicate
    //ETcVnColorSpaceTransform.TCVN_CST_YUV_422_UYNV_TO_RGBA, // duplicate
    //ETcVnColorSpaceTransform.TCVN_CST_YUV_422_UYNV_TO_BGRA, // duplicate
    ETcVnColorSpaceTransform.TCVN_CST_YUV_422_YUY2_TO_RGB,
    ETcVnColorSpaceTransform.TCVN_CST_YUV_422_YUY2_TO_BGR,
    ETcVnColorSpaceTransform.TCVN_CST_YUV_422_YVYU_TO_RGB,
    ETcVnColorSpaceTransform.TCVN_CST_YUV_422_YVYU_TO_BGR,
    //ETcVnColorSpaceTransform.TCVN_CST_YUV_422_YUYV_TO_RGB, // duplicate
    //ETcVnColorSpaceTransform.TCVN_CST_YUV_422_YUYV_TO_BGR, // duplicate
    //ETcVnColorSpaceTransform.TCVN_CST_YUV_422_YUNV_TO_RGB, // duplicate
    //ETcVnColorSpaceTransform.TCVN_CST_YUV_422_YUNV_TO_BGR, // duplicate
    ETcVnColorSpaceTransform.TCVN_CST_YUV_422_YUY2_TO_RGBA,
    ETcVnColorSpaceTransform.TCVN_CST_YUV_422_YUY2_TO_BGRA,
    ETcVnColorSpaceTransform.TCVN_CST_YUV_422_YVYU_TO_RGBA,
    ETcVnColorSpaceTransform.TCVN_CST_YUV_422_YVYU_TO_BGRA,
    //ETcVnColorSpaceTransform.TCVN_CST_YUV_422_YUYV_TO_RGBA, // duplicate
    //ETcVnColorSpaceTransform.TCVN_CST_YUV_422_YUYV_TO_BGRA, // duplicate
    //ETcVnColorSpaceTransform.TCVN_CST_YUV_422_YUNV_TO_RGBA, // duplicate
    //ETcVnColorSpaceTransform.TCVN_CST_YUV_422_YUNV_TO_BGRA, // duplicate
    ETcVnColorSpaceTransform.TCVN_CST_YUV_422_UYVY_TO_GRAY,
    ETcVnColorSpaceTransform.TCVN_CST_YUV_422_YUY2_TO_GRAY :
    //ETcVnColorSpaceTransform.TCVN_CST_YUV_422_Y422_TO_GRAY, // duplicate
    //ETcVnColorSpaceTransform.TCVN_CST_YUV_422_UYNV_TO_GRAY, // duplicate
    //ETcVnColorSpaceTransform.TCVN_CST_YUV_422_YVYU_TO_GRAY, // duplicate
    //ETcVnColorSpaceTransform.TCVN_CST_YUV_422_YUYV_TO_GRAY, // duplicate
    //ETcVnColorSpaceTransform.TCVN_CST_YUV_422_YUNV_TO_GRAY : // duplicate

        Check.IsTrue(ipSrcImage.HasChannelCount(3), 'ipSrcImage must have 3 channels');
    
    // Premultiplicated RGBA (4channels)
    ETcVnColorSpaceTransform.TCVN_CST_PREMULTIPLICATED_RGBA_TO_RGBA :

        Check.IsTrue(ipSrcImage.HasChannelCount(4), 'ipSrcImage must have 4 channels');
    
    ETcVnColorSpaceTransform.TCVN_CST_MAX :

        Check.Fail('eTransform value is invalid');
ELSE
    Check.Fail('eTransform value is unknown');
END_CASE
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>