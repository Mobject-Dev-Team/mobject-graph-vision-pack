<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.15">
  <POU Name="Node_F_VN_ReferenceColorSimilarityExp_TcVnVector3_LREAL" Id="{105853e7-4601-0a3f-3a40-042a457bafd9}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Node_F_VN_ReferenceColorSimilarityExp_TcVnVector3_LREAL EXTENDS VisionNode
VAR
	ipSrcImage : _ITcVnImage;
    ipDestImage : _ITcVnImage;
    aRefColor : _TcVnVector3_LREAL;
    fVariance : _REAL(0.0);
    fLuminanceWeight : _REAL(0.0);
    hrPrev : _HRESULT(S_OK);
	hresult : _HRESULT(S_OK);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{8bea083c-3b90-0047-3c1c-747b0bd3eeb2}" />
    <Method Name="Clone" Id="{7162e786-4a50-030b-3574-266c1ff24548}">
      <Declaration><![CDATA[METHOD PUBLIC  Clone : I_Node
VAR
	pNode : POINTER TO Node_F_VN_ReferenceColorSimilarityExp_TcVnVector3_LREAL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(Node_F_VN_ReferenceColorSimilarityExp_TcVnVector3_LREAL);
Clone := pNode^;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{85785dc8-627a-027a-074f-b09b2b8151ee}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddInput('ipSrcImage', ipSrcImage);
AddInput('aRefColor', aRefColor);
AddParameter('fVariance', fVariance);
AddParameter('fLuminanceWeight', fLuminanceWeight);
AddInput('hrPrev', hrPrev);
AddOutput('ipDestImage', ipDestImage);
AddOutput('hresult', hresult);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{82dd581f-843d-06ad-135c-42328cbcefc4}">
      <Declaration><![CDATA[METHOD PROTECTED OnExecute]]></Declaration>
      <Implementation>
        <ST><![CDATA[hresult.Value := F_VN_ReferenceColorSimilarityExp_TcVnVector3_LREAL(
	ipSrcImage := ipSrcImage.Value,
    ipDestImage := ipDestImage.Value,
    aRefColor := aRefColor.Value,
    fVariance := fVariance.Value,
    fLuminanceWeight := fLuminanceWeight.Value,
	hrPrev := hrPrev.Value);
    ]]></ST>
      </Implementation>
    </Method>
    <Method Name="PreExecutionCheck" Id="{0a34d4b5-f531-0b7b-270d-cc8806b7bdb2}">
      <Declaration><![CDATA[METHOD PUBLIC PreExecutionCheck
VAR_INPUT
	Check : I_PreExecutionChecks;
END_VAR
VAR
    colorMapSize : ULINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Check.IsTrue(ipSrcImage.IsValid, 'ipSrcImage must contain an image');
Check.IsTrue(ipSrcImage.HasChannelCount(3), 'ipSrcImage must have 3 channels');
Check.IsTrue(ipSrcImage.IsPixelDepth(8), 'ipSrcImage must have 8 bit pixel depth');
Check.IsTrue(((fLuminanceWeight.Value >= 0) AND (fLuminanceWeight.Value <= 1)), 'fLuminanceWeight must be between 0 and 1');
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>