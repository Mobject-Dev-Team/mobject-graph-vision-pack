<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="Node_F_VN_Clahe" Id="{a40f42d0-ffa3-037a-18a0-cbd7571ed247}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Node_F_VN_Clahe EXTENDS VisionNode
VAR
	ipSrcImage : _ITcVnImage;
    ipDestImage : _ITcVnImage;
    hrPrev : _HRESULT(S_OK);
	hresult : _HRESULT(S_OK);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{f910e758-5dcf-02d0-05d5-8d2a9f5e1eed}" />
    <Method Name="Clone" Id="{25e6c5a4-61e9-0d63-1224-083aa7503f9e}">
      <Declaration><![CDATA[METHOD PUBLIC  Clone : I_Node
VAR
	pNode : POINTER TO Node_F_VN_Clahe;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(Node_F_VN_Clahe);
Clone := pNode^;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{3360f401-9903-0082-34bd-a448378fcd61}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddInput('ipSrcImage', ipSrcImage);
AddInput('hrPrev', hrPrev);
AddOutput('ipDestImage', ipDestImage);
AddOutput('hresult',hresult);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{7697d347-16a4-0fef-27a2-1adce1097b99}">
      <Declaration><![CDATA[METHOD PROTECTED  OnExecute : HRESULT]]></Declaration>
      <Implementation>
        <ST><![CDATA[hresult.Value := F_VN_Clahe(
	ipSrcImage   := ipSrcImage.Value,
    ipDestImage   := ipDestImage.Value,
	hrPrev := hrPrev.Value);
    ]]></ST>
      </Implementation>
    </Method>
    <Method Name="PreExecutionCheck" Id="{9dd0df8f-eb34-0d73-34ca-9123c306c8a6}">
      <Declaration><![CDATA[METHOD PUBLIC PreExecutionCheck
VAR_INPUT
	Check : I_PreExecutionChecks;
END_VAR
VAR
    colorMapSize : ULINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Check.IsTrue(ipSrcImage.IsValid, 'ipSrcImage must contain an image');
Check.IsTrue(ipSrcImage.HasChannelCount(1), 'ipSrcImage must have 1 channel');
Check.IsTrue((ipSrcImage.IsPixelDepth(8) OR
              ipSrcImage.IsPixelDepth(16)), 'ipSrcImage must have 8 or 16 bit pixel depth');
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>