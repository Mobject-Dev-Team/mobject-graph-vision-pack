<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="Node_F_VN_KeyPointsAndDescriptorsAKAZEExp" Id="{6a0917e0-ed6a-0b37-3c9e-eaf7b8c68f1f}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Node_F_VN_KeyPointsAndDescriptorsAKAZEExp EXTENDS VisionNode
VAR
    ipSrcImage : _ITcVnImage;
    ipKeyPoints : _ITcVnContainer;
    ipDescriptors : _ITcVnImage;
    ipMask : _ITcVnImage;
    stParams : _TcVnParamsAKAZE;
    hrPrev : _HRESULT(S_OK);
	hresult : _HRESULT(S_OK);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{c7ebff28-9ee7-0af4-3646-f2ac96e76e56}" />
    <Method Name="Clone" Id="{818105de-cab7-0776-3229-5ed0b7a06eff}">
      <Declaration><![CDATA[METHOD PUBLIC  Clone : I_Node
VAR
	pNode : POINTER TO Node_F_VN_KeyPointsAndDescriptorsAKAZEExp;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(Node_F_VN_KeyPointsAndDescriptorsAKAZEExp);
Clone := pNode^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{bb791985-10b0-0517-0c95-7f4ad43c2a98}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddInput('ipSrcImage', ipSrcImage);
AddInput('ipMask', ipMask);
AddInput('stParams', stParams);
AddInput('hrPrev', hrPrev);
AddOutput('ipKeyPoints', ipKeyPoints);
AddOutput('ipDescriptors', ipDescriptors);
AddOutput('hresult',hresult);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{8ef35604-908e-0037-2d41-c1f7df8746e8}">
      <Declaration><![CDATA[METHOD PROTECTED OnExecute]]></Declaration>
      <Implementation>
        <ST><![CDATA[hresult.Value := F_VN_KeyPointsAndDescriptorsAKAZEExp(
	ipSrcImage := ipSrcImage.Value,
    ipKeyPoints := ipKeyPoints.Value,
    ipDescriptors := ipDescriptors.Value,
    ipMask := ipMask.Value,
    stParams := stParams.Value,
	hrPrev:= hrPrev.Value);
    ]]></ST>
      </Implementation>
    </Method>
    <Method Name="PreExecutionCheck" Id="{dc468128-ca36-03af-038c-e3c6bbb32243}">
      <Declaration><![CDATA[METHOD PUBLIC PreExecutionCheck
VAR_INPUT
	Check : I_PreExecutionChecks;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Check.IsTrue(ipSrcImage.IsValid, 'ipSrcImage must contain an image');

IF ((stParams.Value.eDescrType = ETcVnFeatureDescriptorTypeAKAZE.TCVN_FDT_AKAZE_MLDB) OR 
    (stParams.Value.eDescrType = ETcVnFeatureDescriptorTypeAKAZE.TCVN_FDT_AKAZE_MLDB_UPRIGHT)) THEN
    Check.IsTrue(stParams.Value.nDescrChannels = 3, 'nDescrChannels must be 3 when using AKAZE_MLDB');
END_IF
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>