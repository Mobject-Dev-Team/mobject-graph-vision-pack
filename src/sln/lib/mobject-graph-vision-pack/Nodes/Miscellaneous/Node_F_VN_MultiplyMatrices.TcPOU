<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="Node_F_VN_MultiplyMatrices" Id="{17f414c9-eaeb-0e1c-3e18-46b86c666e75}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Node_F_VN_MultiplyMatrices EXTENDS VisionNode
VAR
    stSrcMatrix1 : _TcVnMatrix;
    stSrcMatrix2 : _TcVnMatrix;
    stDestMatrix : _TcVnMatrix;
    hrPrev : _HRESULT(S_OK);
	hresult : _HRESULT(S_OK);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{3c11d1f2-6449-0044-2068-abc3e7ba32e2}" />
    <Method Name="Clone" Id="{42ef6860-9609-067e-35ca-d2097f49ed1b}">
      <Declaration><![CDATA[METHOD PUBLIC  Clone : I_Node
VAR
	pNode : POINTER TO Node_F_VN_MultiplyMatrices;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(Node_F_VN_MultiplyMatrices);
Clone := pNode^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{51fe7fea-2807-0648-36dc-973fd4ac8700}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddInput('stSrcMatrix1', stSrcMatrix1);
AddInput('stSrcMatrix2', stSrcMatrix2);
AddInput('hrPrev', hrPrev);
AddOutput('stDestMatrix', stDestMatrix);
AddOutput('hresult',hresult);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{dcba4ae7-06d9-0dd7-1ed7-0d0ad3626d9e}">
      <Declaration><![CDATA[METHOD PROTECTED OnExecute
]]></Declaration>
      <Implementation>
        <ST><![CDATA[hresult.Value := F_VN_MultiplyMatrices(
	stSrcMatrix1 := stSrcMatrix1.Value,
    stSrcMatrix2 := stSrcMatrix2.Value,
    stDestMatrix := stDestMatrix.Value,
	hrPrev:= hrPrev.Value);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="PreExecutionCheck" Id="{cee247a7-2dd8-035c-09a6-5f5087cf6c0e}">
      <Declaration><![CDATA[METHOD PUBLIC PreExecutionCheck
VAR_INPUT
	Check : I_PreExecutionChecks;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>