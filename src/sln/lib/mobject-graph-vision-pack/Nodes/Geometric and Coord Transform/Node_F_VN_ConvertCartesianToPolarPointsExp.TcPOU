<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.15">
  <POU Name="Node_F_VN_ConvertCartesianToPolarPointsExp" Id="{532f72f1-0958-0b6c-0e3c-d5719e5365a2}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Node_F_VN_ConvertCartesianToPolarPointsExp EXTENDS VisionNode
VAR
	ipSrcPointsCart : _ITcVnContainer;
    ipDestPointsPolar : _ITcVnContainer;
    bAngleInDegrees : _BOOL(FALSE);
    hrPrev : _HRESULT(S_OK);
	hresult : _HRESULT(S_OK);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{346cf275-9438-029d-25fd-cc1059e9dc8a}" />
    <Method Name="Clone" Id="{3413405e-3fbe-03a7-15fd-084ab80636d8}">
      <Declaration><![CDATA[METHOD PUBLIC  Clone : I_Node
VAR
	pNode : POINTER TO Node_F_VN_ConvertCartesianToPolarPointsExp;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(Node_F_VN_ConvertCartesianToPolarPointsExp);
Clone := pNode^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{a674f47f-7475-06cb-3ada-dc6bcdf180f1}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddInput('ipSrcPointsCart', ipSrcPointsCart);
AddParameter('bAngleInDegrees', bAngleInDegrees);
AddInput('hrPrev', hrPrev);
AddOutput('ipDestPointsPolar', ipDestPointsPolar);
AddOutput('hresult',hresult);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{15006b1d-3d5b-0e34-3431-868e5946c765}">
      <Declaration><![CDATA[METHOD PROTECTED OnExecute]]></Declaration>
      <Implementation>
        <ST><![CDATA[hresult.Value := F_VN_ConvertCartesianToPolarPointsExp(
	ipSrcPointsCart := ipSrcPointsCart.Value,
	ipDestPointsPolar := ipDestPointsPolar.Value,
    bAngleInDegrees := bAngleInDegrees.Value,
	hrPrev := hrPrev.Value);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="PreExecutionCheck" Id="{fffde0f0-f469-0691-3e1f-43f50286bbeb}">
      <Declaration><![CDATA[METHOD PUBLIC PreExecutionCheck
VAR_INPUT
	Check : I_PreExecutionChecks;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Check.IsTrue(ipSrcPointsCart.IsValid, 'ipSrcPointsCart must be a valid container');
Check.IsTrue((ipSrcPointsCart.HasType(TC_GLOBAL_CONST_LIST.ContainerType_Vector_TcVnPoint2_DINT) OR
              ipSrcPointsCart.HasType(TC_GLOBAL_CONST_LIST.ContainerType_Vector_TcVnPoint2_REAL) OR
              ipSrcPointsCart.HasType(TC_GLOBAL_CONST_LIST.ContainerType_Vector_TcVnPoint2_LREAL)),
              'ipSrcPointsCart contains incorrect type');
              ]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>