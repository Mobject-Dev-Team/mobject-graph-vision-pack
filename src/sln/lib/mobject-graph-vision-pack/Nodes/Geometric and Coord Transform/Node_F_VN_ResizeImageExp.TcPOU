<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="Node_F_VN_ResizeImageExp" Id="{05c62b72-7345-03fa-2eaa-e84af07251ce}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Node_F_VN_ResizeImageExp EXTENDS VisionNode
VAR
    ipSrcImage : _ITcVnImage;
    ipDestImage : _ITcVnImage;
    nWidth : _UDINT(0);
    nHeight : _UDINT(0);
    eInterpolationType : _ETcVnInterpolationType(ETcVnInterpolationType.TCVN_IT_NEAREST_NEIGHBOR);
    ePaddingMode : _ETcVnPaddingMode(ETcVnPaddingMode.TCVN_PM_NONE);
    aBorderValue : _TcVnVector4_LREAL;
    hrPrev : _HRESULT(S_OK);
	hresult : _HRESULT(S_OK);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{96713c6b-5f81-04e8-2da6-b4689b7afff1}" />
    <Method Name="Clone" Id="{c4a0ecc0-bb53-06e0-299a-660add1ebd01}">
      <Declaration><![CDATA[METHOD PUBLIC  Clone : I_Node
VAR
	pNode : POINTER TO Node_F_VN_ResizeImageExp;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(Node_F_VN_ResizeImageExp);
Clone := pNode^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{36243b77-45e7-07e0-160f-c1dbf9d966aa}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddInput('ipSrcImage', ipSrcImage);
AddParameter('nWidth', nWidth);
AddParameter('nHeight', nHeight);
AddParameter('eInterpolationType', eInterpolationType);
AddParameter('ePaddingMode', ePaddingMode);
AddInput('aBorderValue', aBorderValue);
AddInput('hrPrev', hrPrev);
AddOutput('ipDestImage', ipDestImage);
AddOutput('hresult',hresult);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{add6d5b0-a041-00eb-27c5-e8533c16df45}">
      <Declaration><![CDATA[METHOD PROTECTED OnExecute]]></Declaration>
      <Implementation>
        <ST><![CDATA[hresult.Value := F_VN_ResizeImageExp(
    ipSrcImage := ipSrcImage.Value,
	ipDestImage := ipDestImage.Value,
    nWidth := nWidth.Value,
    nHeight := nHeight.Value,
    eInterpolationType := eInterpolationType.Value,
    ePaddingMode := ePaddingMode.Value,
    aBorderValue := aBorderValue.Value,
	hrPrev:= hrPrev.Value);
    ]]></ST>
      </Implementation>
    </Method>
    <Method Name="PreExecutionCheck" Id="{4ae2d113-57f2-0dbd-1cc7-2dab72e46e9b}">
      <Declaration><![CDATA[METHOD PUBLIC PreExecutionCheck
VAR_INPUT
	Check : I_PreExecutionChecks;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Check.IsTrue(ipSrcImage.IsValid, 'ipSrcImage must contain an image');
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>