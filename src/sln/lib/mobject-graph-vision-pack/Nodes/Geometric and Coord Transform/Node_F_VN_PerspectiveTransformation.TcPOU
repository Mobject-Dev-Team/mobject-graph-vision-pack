<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="Node_F_VN_PerspectiveTransformation" Id="{230bdc51-4701-018c-35ea-fc0b2efee73d}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Node_F_VN_PerspectiveTransformation EXTENDS VisionNode
VAR
	ipSrcPoints : _ITcVnContainer;
    ipDestPoints : _ITcVnContainer;
    aRotationMatrix : _TcVnMatrix3x3_LREAL;
    aTranslationVector : _TcVnVector3_LREAL;
    hrPrev : _HRESULT(S_OK);
	hresult : _HRESULT(S_OK);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{096b15e4-161d-0893-0a28-954f0d2d712c}" />
    <Method Name="Clone" Id="{5e197a2e-52f9-0dea-34cd-f7edc57251ce}">
      <Declaration><![CDATA[METHOD PUBLIC  Clone : I_Node
VAR
	pNode : POINTER TO Node_F_VN_PerspectiveTransformation;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(Node_F_VN_PerspectiveTransformation);
Clone := pNode^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{2b1931f3-2cc2-0414-0608-c735dfa02b05}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddInput('ipSrcPoints', ipSrcPoints);
AddInput('aRotationMatrix', aRotationMatrix);
AddInput('aTranslationVector', aTranslationVector);
AddInput('hrPrev', hrPrev);
AddOutput('ipDestPoints', ipDestPoints);
AddOutput('hresult',hresult);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{a0f58a05-ba18-0ad6-2a93-1c7f2d7fde96}">
      <Declaration><![CDATA[METHOD PROTECTED OnExecute]]></Declaration>
      <Implementation>
        <ST><![CDATA[hresult.Value := F_VN_PerspectiveTransformation(
	ipSrcPoints := ipSrcPoints.Value,
	ipDestPoints := ipDestPoints.Value,
	aRotationMatrix := aRotationMatrix.Value,
    aTranslationVector := aTranslationVector.Value,
	hrPrev := hrPrev.Value);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="PreExecutionCheck" Id="{c23d8535-d3f7-0d60-2681-362e7e52df6a}">
      <Declaration><![CDATA[METHOD PUBLIC PreExecutionCheck
VAR_INPUT
	Check : I_PreExecutionChecks;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Check.IsTrue(ipSrcPoints.IsValid, 'ipSrcPoints must be a valid container');
Check.IsTrue((ipSrcPoints.HasType(TC_GLOBAL_CONST_LIST.ContainerType_Vector_TcVnPoint3_REAL) OR
              ipSrcPoints.HasType(TC_GLOBAL_CONST_LIST.ContainerType_Vector_TcVnPoint3_LREAL)),
              'ipSrcPoints contains incorrect type');
              ]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>