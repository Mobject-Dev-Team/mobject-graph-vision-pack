<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.15">
  <POU Name="Node_F_VN_CompensateLensDistortionExp2" Id="{76db3988-df73-08fe-32f5-38ce71c83bcf}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Node_F_VN_CompensateLensDistortionExp2 EXTENDS VisionNode
VAR
    ipSrcImage : _ITcVnImage;
    ipDestImage : _ITcVnImage;
    aCameraMatrix : _TcVnMatrix3x3_LREAL;
    aDistortionCoefficients : _TcVnArray8_LREAL;
    aNewCameraMatrix : _TcVnMatrix3x3_LREAL;
    hrPrev : _HRESULT(S_OK);
	hresult : _HRESULT(S_OK);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{a7d53691-702e-0a01-3a8f-0c30cd6bb9d7}" />
    <Method Name="Clone" Id="{9a4fec36-96c3-0d6d-2e86-b8e48dccda50}">
      <Declaration><![CDATA[METHOD PUBLIC  Clone : I_Node
VAR
	pNode : POINTER TO Node_F_VN_CompensateLensDistortionExp2;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(Node_F_VN_CompensateLensDistortionExp2);
Clone := pNode^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{0d9dd4b3-d43a-0f4c-3a44-dee120a73ba9}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddInput('ipSrcImage', ipSrcImage);
AddInput('aCameraMatrix', aCameraMatrix);
AddInput('aDistortionCoefficients', aDistortionCoefficients);
AddInput('aNewCameraMatrix', aNewCameraMatrix);
AddInput('hrPrev', hrPrev);
AddOutput('ipDestImage', ipDestImage);
AddOutput('hresult', hresult);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{16e5d492-fe64-0972-026c-c7dde9598b8f}">
      <Declaration><![CDATA[METHOD PROTECTED OnExecute]]></Declaration>
      <Implementation>
        <ST><![CDATA[hresult.Value := F_VN_CompensateLensDistortionExp2(
    ipSrcImage := ipSrcImage.Value,
	ipDestImage := ipDestImage.Value,
    aCameraMatrix := aCameraMatrix.Value,
    aDistortionCoefficients := aDistortionCoefficients.Value,
    aNewCameraMatrix := aNewCameraMatrix.Value,
	hrPrev := hrPrev.Value);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="PreExecutionCheck" Id="{3106d666-4b5c-01a0-20ca-96bfab480d5f}">
      <Declaration><![CDATA[METHOD PUBLIC PreExecutionCheck
VAR_INPUT
	Check : I_PreExecutionChecks;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Check.IsTrue(ipSrcImage.IsValid, 'ipSrcImage must contain an image');
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>