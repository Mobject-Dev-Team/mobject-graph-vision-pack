<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.15">
  <POU Name="Node_F_VN_CompensateLensDistortionForPointsExp1" Id="{cb63b175-bb1b-03a5-27b6-44384c241ffd}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Node_F_VN_CompensateLensDistortionForPointsExp1 EXTENDS VisionNode
VAR
    ipSrcPoints : _ITcVnContainer;
    ipDestPoints : _ITcVnContainer;
    aCameraMatrix : _TcVnMatrix3x3_LREAL;
    aDistortionCoefficients : _TcVnArray8_LREAL;
    hrPrev : _HRESULT(S_OK);
	hresult : _HRESULT(S_OK);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{be8d6467-51cf-03d3-1978-e87ec4929aff}" />
    <Method Name="Clone" Id="{27d59381-24ae-08ef-11ce-fe3a07c5d262}">
      <Declaration><![CDATA[METHOD PUBLIC  Clone : I_Node
VAR
	pNode : POINTER TO Node_F_VN_CompensateLensDistortionForPointsExp1;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(Node_F_VN_CompensateLensDistortionForPointsExp1);
Clone := pNode^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{05c3f2ab-c921-0e51-010b-0c819ff2ae20}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddInput('ipSrcPoints', ipSrcPoints);
AddInput('aCameraMatrix', aCameraMatrix);
AddInput('aDistortionCoefficients', aDistortionCoefficients);
AddInput('hrPrev', hrPrev);
AddOutput('ipDestPoints', ipDestPoints);
AddOutput('hresult', hresult);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{dee66e37-3f67-0a58-14ab-484c39947614}">
      <Declaration><![CDATA[METHOD PROTECTED OnExecute]]></Declaration>
      <Implementation>
        <ST><![CDATA[hresult.Value := F_VN_CompensateLensDistortionForPointsExp1(
    ipSrcPoints := ipSrcPoints.Value,
	ipDestPoints := ipDestPoints.Value,
    aCameraMatrix := aCameraMatrix.Value,
    aDistortionCoefficients := aDistortionCoefficients.Value,
	hrPrev := hrPrev.Value);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="PreExecutionCheck" Id="{49611752-88a7-04bb-28b0-33dbb7746d22}">
      <Declaration><![CDATA[METHOD PUBLIC PreExecutionCheck
VAR_INPUT
	Check : I_PreExecutionChecks;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Check.IsTrue(ipSrcPoints.IsValid, 'ipSrcPoints must be a valid container');
Check.IsTrue((ipSrcPoints.HasType(TC_GLOBAL_CONST_LIST.ContainerType_Vector_TcVnPoint2_DINT) OR
              ipSrcPoints.HasType(TC_GLOBAL_CONST_LIST.ContainerType_Vector_TcVnPoint2_REAL)),
              'ipSrcPoints contains incorrect type');
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>