<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.15">
  <POU Name="Node_F_VN_ConvertCartesianToPolarMagnitudes" Id="{80cd6994-b749-0434-3c2a-bbd30f5a1303}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Node_F_VN_ConvertCartesianToPolarMagnitudes EXTENDS VisionNode
VAR
	ipSrcPointsCart : _ITcVnContainer;
    ipDestMags : _ITcVnContainer;
    hrPrev : _HRESULT(S_OK);
	hresult : _HRESULT(S_OK);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{0fc4f2d4-440f-08f1-341c-843b6ce7c1f7}" />
    <Method Name="Clone" Id="{a2b3065a-9da5-0d0d-2290-cd5edfb3d2c6}">
      <Declaration><![CDATA[METHOD PUBLIC  Clone : I_Node
VAR
	pNode : POINTER TO Node_F_VN_ConvertCartesianToPolarMagnitudes;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(Node_F_VN_ConvertCartesianToPolarMagnitudes);
Clone := pNode^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{3b8e44c0-a0ab-02c2-0bc3-0e0d9c0bd998}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddInput('ipSrcPointsCart', ipSrcPointsCart);
AddInput('hrPrev', hrPrev);
AddOutput('ipDestMags', ipDestMags);
AddOutput('hresult',hresult);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{8c350151-a39b-002b-192f-a364581593db}">
      <Declaration><![CDATA[METHOD PROTECTED OnExecute]]></Declaration>
      <Implementation>
        <ST><![CDATA[hresult.Value := F_VN_ConvertCartesianToPolarMagnitudes(
	ipSrcPointsCart := ipSrcPointsCart.Value,
	ipDestMags := ipDestMags.Value,
	hrPrev := hrPrev.Value);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="PreExecutionCheck" Id="{33466b36-1c6f-0f19-10b7-e60804d447f0}">
      <Declaration><![CDATA[METHOD PUBLIC PreExecutionCheck
VAR_INPUT
	Check : I_PreExecutionChecks;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Check.IsTrue(ipSrcPointsCart.IsValid, 'ipSrcPointsCart must be a valid container');
Check.IsTrue((ipSrcPointsCart.HasType(TC_GLOBAL_CONST_LIST.ContainerType_Vector_TcVnPoint2_DINT) OR
              ipSrcPointsCart.HasType(TC_GLOBAL_CONST_LIST.ContainerType_Vector_TcVnPoint2_REAL) OR
              ipSrcPointsCart.HasType(TC_GLOBAL_CONST_LIST.ContainerType_Vector_TcVnPoint2_LREAL)),
              'ipSrcPointsCart contains incorrect type');
              ]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>