<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="Node_F_VN_DoubleThreshold" Id="{bd4eb3d3-8cf2-0552-26fb-2f285904c869}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Node_F_VN_DoubleThreshold EXTENDS VisionNode
VAR
	ipSrcImage : _ITcVnImage;
    ipDestImage : _ITcVnImage;
    fLowThreshold : _LREAL(0.0);
    fHighThreshold : _LREAL(0.0);
    fMaxValue : _LREAL(0.0);
    hrPrev : _HRESULT(S_OK);
	hresult : _HRESULT(S_OK);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{c2cc68f1-277b-0e9e-3801-d86ca7963c52}" />
    <Method Name="Clone" Id="{a90d838b-acdc-0821-3539-cbcf9c7cd208}">
      <Declaration><![CDATA[METHOD PUBLIC  Clone : I_Node
VAR
	pNode : POINTER TO Node_F_VN_DoubleThreshold;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(Node_F_VN_DoubleThreshold);
Clone := pNode^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{5b0058a3-b238-0c06-3ec6-96ec3dc5551d}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddInput('ipSrcImage', ipSrcImage);
AddParameter('fLowThreshold', fLowThreshold);
AddParameter('fHighThreshold', fHighThreshold);
AddParameter('fMaxValue', fMaxValue);
AddInput('hrPrev', hrPrev);
AddOutput('ipDestImage', ipDestImage);
AddOutput('hresult',hresult);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{8079e562-804d-058d-1f71-3aec8167ebed}">
      <Declaration><![CDATA[METHOD PROTECTED OnExecute
]]></Declaration>
      <Implementation>
        <ST><![CDATA[hresult.Value := F_VN_DoubleThreshold(
	ipSrcImage := ipSrcImage.Value,
	ipDestImage := ipDestImage.Value,
    fLowThreshold := fLowThreshold.Value,
    fHighThreshold := fHighThreshold.Value,
    fMaxValue := fMaxValue.Value,
	hrPrev:= hrPrev.Value);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="PreExecutionCheck" Id="{74c44f26-109b-01c3-202f-539084748d5a}">
      <Declaration><![CDATA[METHOD PUBLIC PreExecutionCheck
VAR_INPUT
	Check : I_PreExecutionChecks;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Check.IsTrue(ipSrcImage.IsValid, 'ipSrcImage must contain an image');
Check.IsTrue(ipSrcImage.HasChannelCount(1), 'ipSrcImage must have 1 channel');
Check.IsTrue((ipSrcImage.IsPixelDepth(8) OR
              ipSrcImage.IsPixelDepth(16) OR
              ipSrcImage.IsPixelDepth(32) OR
              ipSrcImage.IsPixelDepth(6432)), 'ipSrcImage must have 8, 16, 32, or 64 bit pixel depth');

//TODO The max values for fMaxValue will not be 255 if pixel depths other than 8 bit are used.]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>