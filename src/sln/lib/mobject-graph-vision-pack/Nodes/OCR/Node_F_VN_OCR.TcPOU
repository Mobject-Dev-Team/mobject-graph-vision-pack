<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="Node_F_VN_OCR" Id="{0af6b6c4-6110-00fa-2380-c1a161cf2841}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Node_F_VN_OCR EXTENDS VisionNode
VAR
	ipSrcImage : _ITcVnImage;
    eModel : _ETcVnOcrModelType(ETcVnOcrModelType.TCVN_OMT_NUMBERS);
    ipCharacters : _ITcVnContainer;
    hrPrev : _HRESULT(S_OK);
	hresult : _HRESULT(S_OK);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{3d8e3bfd-03a2-08d1-1cca-49c5a2886041}" />
    <Method Name="Clone" Id="{be79d7ce-06e2-0331-0b24-9a394559f903}">
      <Declaration><![CDATA[METHOD PUBLIC  Clone : I_Node
VAR
	pNode : POINTER TO Node_F_VN_OCR;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(Node_F_VN_OCR);
Clone := pNode^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{18da78b1-fe20-06ae-28da-5505362f439b}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddInput('ipSrcImage', ipSrcImage);
AddParameter('eModel', eModel);
AddInput('hrPrev', hrPrev);
AddOutput('ipCharacters', ipCharacters);
AddOutput('hresult',hresult);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{5f2ff8d6-c3ce-02bd-0489-8b1e62c2629c}">
      <Declaration><![CDATA[METHOD PROTECTED OnExecute
]]></Declaration>
      <Implementation>
        <ST><![CDATA[hresult.Value := F_VN_OCR(
	ipSrcImage := ipSrcImage.Value,
    eModel := eModel.Value,
	ipCharacters := ipCharacters.Value,
	hrPrev:= hrPrev.Value);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="PreExecutionCheck" Id="{ce43c0eb-49b7-0d5e-259f-e72138b3455f}">
      <Declaration><![CDATA[METHOD PUBLIC PreExecutionCheck
VAR_INPUT
	Check : I_PreExecutionChecks;
END_VAR
VAR
    result : HRESULT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[result := F_VN_CheckFunctionInitialization(ETcVnInitializableFunction.TCVN_IF_OCR, eModel.Value, S_OK);
Check.IsTrue((result = S_OK), 'Invalid OCR model');

Check.IsTrue(ipSrcImage.IsValid, 'ipSrcImage must contain an image');
Check.IsTrue(ipSrcImage.IsPixelDepth(8), 'ipSrcImage must have 8 bit pixel depth');
Check.IsTrue(ipSrcImage.HasChannelCount(1), 'ipSrcImage must contain 1 channel');
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>