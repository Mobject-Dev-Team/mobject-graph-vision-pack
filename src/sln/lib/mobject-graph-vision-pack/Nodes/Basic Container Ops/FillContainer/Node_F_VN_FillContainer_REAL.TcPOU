<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="Node_F_VN_FillContainer_REAL" Id="{6e92222a-25f7-4d84-9769-935b036de2de}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Node_F_VN_FillContainer_REAL EXTENDS VisionNode
VAR
    ipContainer : _ITcVnContainer;
    fValue : _REAL(0);
    hrPrev : _HRESULT(S_OK);
    hresult : _HRESULT(S_OK);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{e4114acd-78be-4e1b-a2e5-ae07d30dbcc0}" />
    <Method Name="Clone" Id="{8b775a9f-3894-43d6-8832-92838eea781a}">
      <Declaration><![CDATA[METHOD PUBLIC  Clone : I_Node
VAR
    pNode : POINTER TO Node_F_VN_FillContainer_REAL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(Node_F_VN_FillContainer_REAL);
Clone := pNode^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{fb4574f9-c63d-41e9-a2c8-69973b2057e8}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
    bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
    bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddInput('ipContainer', ipContainer);
AddParameter('fValue', fValue);
AddInput('hrPrev', hrPrev);
AddOutput('ipContainer', ipContainer);
AddOutput('hresult',hresult);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{e1a88552-b119-4dc1-9dac-58844d8c57af}">
      <Declaration><![CDATA[METHOD PROTECTED OnExecute]]></Declaration>
      <Implementation>
        <ST><![CDATA[hresult.Value := F_VN_FillContainer_REAL(
    ipContainer := ipContainer.Value,
    fValue := fValue.Value,
    hrPrev:= hrPrev.Value);
    ]]></ST>
      </Implementation>
    </Method>
    <Method Name="PreExecutionCheck" Id="{f754d8c0-6073-468d-98df-e6ab48a65da5}">
      <Declaration><![CDATA[METHOD PUBLIC PreExecutionCheck
VAR_INPUT
    Check : I_PreExecutionChecks;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Check.IsTrue(ipContainer.IsValid, 'ipContainer must be a valid container');
Check.IsTrue(ipContainer.HasType(TC_GLOBAL_CONST_LIST.ContainerType_Vector_REAL), 'ipContainer contains incorrect type');
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>