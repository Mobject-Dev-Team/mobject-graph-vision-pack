<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="Node_F_VN_FillContainer_TcVnDMatch" Id="{db816389-b0f1-45d6-881d-be6a6baaaa56}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Node_F_VN_FillContainer_TcVnDMatch EXTENDS VisionNode
VAR
    ipContainer : _ITcVnContainer;
    stValue : _TcVnDMatch;
    hrPrev : _HRESULT(S_OK);
    hresult : _HRESULT(S_OK);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{cb27717e-e68e-4379-b9fc-79656d4d4661}" />
    <Method Name="Clone" Id="{24a8b909-335b-4ffb-849a-e66638d625ab}">
      <Declaration><![CDATA[METHOD PUBLIC  Clone : I_Node
VAR
    pNode : POINTER TO Node_F_VN_FillContainer_TcVnDMatch;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(Node_F_VN_FillContainer_TcVnDMatch);
Clone := pNode^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{53328dbf-974e-48b5-b2c2-376da7daa8d9}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
    bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
    bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddInput('ipContainer', ipContainer);
AddInput('stValue', stValue);
AddInput('hrPrev', hrPrev);
AddOutput('ipContainer', ipContainer);
AddOutput('hresult',hresult);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{53a934c2-5a02-4ae1-93bd-6f45ea9d0659}">
      <Declaration><![CDATA[METHOD PROTECTED OnExecute]]></Declaration>
      <Implementation>
        <ST><![CDATA[hresult.Value := F_VN_FillContainer_TcVnDMatch(
    ipContainer := ipContainer.Value,
    stValue := stValue.Value,
    hrPrev:= hrPrev.Value);
    ]]></ST>
      </Implementation>
    </Method>
    <Method Name="PreExecutionCheck" Id="{e3d7550f-8b12-4d7e-b71f-d7418f01e32d}">
      <Declaration><![CDATA[METHOD PUBLIC PreExecutionCheck
VAR_INPUT
    Check : I_PreExecutionChecks;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Check.IsTrue(ipContainer.IsValid, 'ipContainer must be a valid container');
Check.IsTrue(ipContainer.HasType(TC_GLOBAL_CONST_LIST.ContainerType_Vector_TcVnDMatch), 'ipContainer contains incorrect type');
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>