<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="Node_F_VN_ReadBarcode" Id="{a71f1891-c5cf-0fed-3d28-4bd3e6c9d40e}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Node_F_VN_ReadBarcode EXTENDS VisionNode
VAR
    ipSrcImage : _ITcVnImage;
    ipDecodedData : _ITcVnContainer;
    eBarcodeType : _ETcVnBarcodeType(ETcVnBarcodeType.TCVN_BT_ANY);
    hrPrev : _HRESULT(S_OK);
	hresult : _HRESULT(S_OK);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{2567d71a-9788-0891-3655-92b11c14b913}" />
    <Method Name="Clone" Id="{5636a5eb-b482-0c55-028f-39773a0091de}">
      <Declaration><![CDATA[METHOD PUBLIC  Clone : I_Node
VAR
	pNode : POINTER TO Node_F_VN_ReadBarcode;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(Node_F_VN_ReadBarcode);
Clone := pNode^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{ffb75273-ee17-0282-27c1-65ffec2210a6}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddInput('ipSrcImage', ipSrcImage);
AddParameter('eBarcodeType', eBarcodeType);
AddInput('hrPrev', hrPrev);
AddOutput('ipDecodedData', ipDecodedData);
AddOutput('hresult',hresult);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{7f8fc211-0803-0401-2d2c-0f6843fa1688}">
      <Declaration><![CDATA[METHOD PROTECTED OnExecute : HRESULT]]></Declaration>
      <Implementation>
        <ST><![CDATA[hresult.Value := F_VN_ReadBarcode(
	ipSrcImage := ipSrcImage.Value,
    ipDecodedData := ipDecodedData.Value,
    eBarcodeType := eBarcodeType.Value,
	hrPrev:= hrPrev.Value);
    ]]></ST>
      </Implementation>
    </Method>
    <Method Name="PreExecutionCheck" Id="{158c4768-00dc-07b4-0354-55118439e486}">
      <Declaration><![CDATA[METHOD PUBLIC PreExecutionCheck
VAR_INPUT
	Check : I_PreExecutionChecks;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Check.IsTrue(ipSrcImage.IsValid, 'ipSrcImage must contain an image');
Check.IsTrue((ipSrcImage.HasChannelCount(1) OR ipSrcImage.HasChannelCount(3)), 'ipSrcImage must have 1 or 3 channels');
Check.IsTrue(ipSrcImage.IsPixelDepth(8), 'ipSrcImage must have 8 bit pixel depth');
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>