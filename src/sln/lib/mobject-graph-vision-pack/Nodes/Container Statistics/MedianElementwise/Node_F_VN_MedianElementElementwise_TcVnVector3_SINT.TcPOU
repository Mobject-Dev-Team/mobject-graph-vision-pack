<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="Node_F_VN_MedianElementElementwise_TcVnVector3_SINT" Id="{f6689e7f-19ab-4408-8b7e-e8a52b125123}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Node_F_VN_MedianElementElementwise_TcVnVector3_SINT EXTENDS VisionNode
VAR
    ipContainer : _ITcVnContainer;
    aMedian : _TcVnVector3_SINT;
    hrPrev : _HRESULT(S_OK);
    hresult : _HRESULT(S_OK);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{fd34ea92-3608-4dfd-9868-d36612af063f}" />
    <Method Name="Clone" Id="{09552fe4-8ca8-46b8-a828-cda4eab47c13}">
      <Declaration><![CDATA[METHOD PUBLIC  Clone : I_Node
VAR
	pNode : POINTER TO Node_F_VN_MedianElementElementwise_TcVnVector3_SINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(Node_F_VN_MedianElementElementwise_TcVnVector3_SINT);
Clone := pNode^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{352f55ab-8b7e-4722-b11d-df24730992d7}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddInput('ipContainer', ipContainer);
AddInput('aMedian', aMedian);
AddInput('hrPrev', hrPrev);
AddOutput('ipContainer', ipContainer);
AddOutput('hresult',hresult);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{35eb685e-bc75-4778-8ead-9d4bd704287d}">
      <Declaration><![CDATA[METHOD PROTECTED OnExecute : HRESULT]]></Declaration>
      <Implementation>
        <ST><![CDATA[hresult.Value := F_VN_MedianElementElementwise_TcVnVector3_SINT(
    ipContainer := ipContainer.Value,
    aMedian := aMedian.Value,
    hrPrev:= hrPrev.Value);
    ]]></ST>
      </Implementation>
    </Method>
    <Method Name="PreExecutionCheck" Id="{b9f9b4aa-1505-4109-bc00-f804d0a69e61}">
      <Declaration><![CDATA[METHOD PUBLIC PreExecutionCheck
VAR_INPUT
	Check : I_PreExecutionChecks;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Check.IsTrue(ipContainer.IsValid, 'ipContainer must be a valid container');
Check.IsTrue(ipContainer.HasType(TC_GLOBAL_CONST_LIST.ContainerType_Vector_TcVnVector3_SINT), 'ipContainer contains incorrect type');
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>