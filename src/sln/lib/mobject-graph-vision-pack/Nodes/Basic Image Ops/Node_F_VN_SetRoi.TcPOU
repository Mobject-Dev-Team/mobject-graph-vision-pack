<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="Node_F_VN_SetRoi" Id="{3a5e32b1-1f81-073c-0f40-296b3bdfe13e}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Node_F_VN_SetRoi EXTENDS VisionNode
VAR
    nX : _UDINT(0);
    nY : _UDINT(0);
    nWidth : _UDINT(0);
    nHeight : _UDINT(0);
    ipDestImage : _ITcVnImage;
    hrPrev : _HRESULT(S_OK);
	hresult : _HRESULT(S_OK);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{09d13583-7494-0d1b-0ecb-e86007cc50f0}" />
    <Method Name="Clone" Id="{351e0ec5-9bba-0456-1efd-20d07bf630eb}">
      <Declaration><![CDATA[METHOD PUBLIC  Clone : I_Node
VAR
	pNode : POINTER TO Node_F_VN_SetRoi;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(Node_F_VN_SetRoi);
Clone := pNode^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{912240a8-89e1-0093-2588-9e83a8460d62}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddParameter('nX', nX);
AddParameter('nY', nY);
AddParameter('nWidth', nWidth);
AddParameter('nHeight', nHeight);
AddInput('ipDestImage', ipDestImage);
AddInput('hrPrev', hrPrev);
AddOutput('ipDestImage', ipDestImage);
AddOutput('hresult',hresult);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{d3cbe65f-2cb5-02ba-08af-05130a62205f}">
      <Declaration><![CDATA[METHOD PROTECTED  OnExecute : HRESULT
]]></Declaration>
      <Implementation>
        <ST><![CDATA[hresult.Value := F_VN_SetRoi(
    nX := nX.Value,
    nY := nY.Value,
    nWidth := nWidth.Value,
	nHeight := nHeight.Value,
	ipDestImage := ipDestImage.Value,
	hrPrev:= hrPrev.Value);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="PreExecutionCheck" Id="{f2b14ad8-33bd-04b9-1bce-8db528bfcef8}">
      <Declaration><![CDATA[METHOD PUBLIC PreExecutionCheck
VAR_INPUT
	Check : I_PreExecutionChecks;
END_VAR
VAR
    imgWidth : UDINT;
    imgHeight : UDINT;
    roiRectangle : TcVnRectangle_UDINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Check.IsTrue(ipDestImage.IsValid, 'ipDestImage must contain an image');

IF Check.Failed THEN
    RETURN;
END_IF

ipDestImage.Value.GetWidth(imgWidth);
ipDestImage.Value.GetHeight(imgHeight);
roiRectangle.nX := nX.Value;
roiRectangle.nY := nY.Value;
roiRectangle.nWidth := nWidth.Value;
roiRectangle.nHeight := nHeight.Value;

Check.IsTrue(IsRoiSizeOK(roiRectangle, imgWidth, imgHeight), 'ROI must fit within image');
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>