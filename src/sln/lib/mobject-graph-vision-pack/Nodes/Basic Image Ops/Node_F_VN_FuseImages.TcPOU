<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="Node_F_VN_FuseImages" Id="{70691ccc-b193-0a51-2fe4-ae063a6be4aa}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Node_F_VN_FuseImages EXTENDS VisionNode
VAR
    ipSrcImage1 : _ITcVnImage;
    ipSrcImage2 : _ITcVnImage;
    ipDestImage : _ITcVnImage;
    nFirstLine : _UDINT(0);
    nNumLines : _UDINT(0);
    hrPrev : _HRESULT(S_OK);
	hresult : _HRESULT(S_OK);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{7a9da685-5844-0e1f-0825-de6de6441c27}" />
    <Method Name="Clone" Id="{de6ae6d7-85bb-083c-3871-b728e4ca25e4}">
      <Declaration><![CDATA[METHOD PUBLIC  Clone : I_Node
VAR
	pNode : POINTER TO Node_F_VN_FuseImages;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(Node_F_VN_FuseImages);
Clone := pNode^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{1d73010d-3856-0338-258e-0ce38082bcd6}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddInput('ipSrcImage1', ipSrcImage1);
AddInput('ipSrcImage2', ipSrcImage2);
AddParameter('nFirstLine', nFirstLine);
AddParameter('nNumLines', nNumLines);
AddInput('hrPrev', hrPrev);
AddOutput('ipDestImage', ipDestImage);
AddOutput('hresult',hresult);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{8de7996e-91f0-0bd6-0993-43e7d06ff18a}">
      <Declaration><![CDATA[METHOD PROTECTED OnExecute : HRESULT]]></Declaration>
      <Implementation>
        <ST><![CDATA[hresult.Value := F_VN_FuseImages(
    ipSrcImage1 := ipSrcImage1.Value,
    ipSrcImage2 := ipSrcImage2.Value,
	ipDestImage := ipDestImage.Value,
    nFirstLine := nFirstLine.Value,
    nNumLines := nNumLines.Value,
	hrPrev:= hrPrev.Value);
    ]]></ST>
      </Implementation>
    </Method>
    <Method Name="PreExecutionCheck" Id="{d63992dd-718e-0331-2851-6c72b47e2f5b}">
      <Declaration><![CDATA[METHOD PUBLIC PreExecutionCheck
VAR_INPUT
	Check : I_PreExecutionChecks;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Check.IsTrue(ipSrcImage1.IsValid, 'ipSrcImage1 must contain an image');
Check.IsTrue(ipSrcImage2.IsValid, 'ipSrcImage2 must contain an image');
Check.IsTrue(IsImage1WidthEqualToImage2Width(ipSrcImage1.Value, ipSrcImage2.Value), 'ipSrcImage1 must be the same width as ipSrcImage2');
//TODO Check pixel encoding is the same for source images?]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>