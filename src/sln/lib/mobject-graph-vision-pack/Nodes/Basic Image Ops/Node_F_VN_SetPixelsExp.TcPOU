<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="Node_F_VN_SetPixelsExp" Id="{05b7e547-ddff-0ee7-2935-aa5e76afb1d1}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Node_F_VN_SetPixelsExp EXTENDS VisionNode
VAR
    ipDestImage : _ITcVnImage;
    aValue : _TcVnVector4_LREAL;
    ipMask : _ITcVnImage;
    hrPrev : _HRESULT(S_OK);
	hresult : _HRESULT(S_OK);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{15392ebf-e138-0f10-0bda-dee32901af6b}" />
    <Method Name="Clone" Id="{41b00408-3137-08a0-284f-67c5a25691a2}">
      <Declaration><![CDATA[METHOD PUBLIC  Clone : I_Node
VAR
	pNode : POINTER TO Node_F_VN_SetPixelsExp;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(Node_F_VN_SetPixelsExp);
Clone := pNode^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{85bb59f2-cb30-0767-219f-0dfa8b9b617a}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddInput('ipDestImage', ipDestImage);
AddInput('aValue', aValue);
AddInput('ipMask', ipMask);
AddInput('hrPrev', hrPrev);
AddOutput('ipDestImage', ipDestImage);
AddOutput('hresult',hresult);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{3a43de69-065d-0628-2ee1-e48eaf7bbc7d}">
      <Declaration><![CDATA[METHOD PROTECTED OnExecute
]]></Declaration>
      <Implementation>
        <ST><![CDATA[hresult.Value := F_VN_SetPixelsExp(
    ipDestImage := ipDestImage.Value,
    aValue := aValue.Value,
    ipMask := ipMask.Value,
	hrPrev:= hrPrev.Value);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="PreExecutionCheck" Id="{80b64c23-4b45-065e-03b7-cefa217ef364}">
      <Declaration><![CDATA[METHOD PUBLIC PreExecutionCheck
VAR_INPUT
	Check : I_PreExecutionChecks;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Check.IsTrue(ipDestImage.IsValid, 'ipDestImage must contain an image');
Check.IsTrue(ipMask.IsValid, 'ipMask must contain an image');
Check.IsTrue(ipMask.HasChannelCount(1), 'ipMask must have 1 channel');
Check.IsTrue(ipMask.IsPixelDepth(8), 'ipMask must have 8 bit pixel depth');
Check.IsTrue(IsImage1SizeEqualToImage2Size(ipMask.Value, ipDestImage.Value), 'ipMask must be the same size as ipDestImage');
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>