<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="Node_F_VN_CreateImageAndSetPixels" Id="{ef60362c-1192-0503-029b-399391a1d2b0}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Node_F_VN_CreateImageAndSetPixels EXTENDS VisionNode
VAR
    ipImage : _ITcVnImage;
    nWidth : _UDINT(1);
    nHeight : _UDINT(1);
    ePixelType : _ETcVnElementType(ETcVnElementType.TCVN_ET_USINT);
    nChannelNum : _UDINT(1);
    aValue : _TcVnVector4_LREAL;
    hrPrev : _HRESULT(S_OK);
	hresult : _HRESULT(S_OK);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{490de6cc-e672-0497-1b75-17d063380f2d}" />
    <Method Name="Clone" Id="{0d7303b2-180d-017c-2195-a197046646af}">
      <Declaration><![CDATA[METHOD PUBLIC  Clone : I_Node
VAR
	pNode : POINTER TO Node_F_VN_CreateImageAndSetPixels;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(Node_F_VN_CreateImageAndSetPixels);
Clone := pNode^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{3398ea94-9aaa-086c-2d62-e1f7d50858dc}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddParameter('nWidth', nWidth);
AddParameter('nHeight', nHeight);
AddParameter('ePixelType', ePixelType);
AddParameter('nChannelNum', nChannelNum);
AddInput('aValue', aValue);
AddInput('hrPrev', hrPrev);
AddOutput('ipImage', ipImage);
AddOutput('hresult',hresult);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{5c3daf4f-29ee-0baf-0ecd-1c0a057f2436}">
      <Declaration><![CDATA[METHOD PROTECTED OnExecute : HRESULT]]></Declaration>
      <Implementation>
        <ST><![CDATA[hresult.Value := F_VN_CreateImageAndSetPixels(
    ipImage := ipImage.Value,
    nWidth := nWidth.Value,
    nHeight := nHeight.Value,
    ePixelType := ePixelType.Value,
    nChannelNum := nChannelNum.Value,
    aValue := aValue.Value,
	hrPrev:= hrPrev.Value);
    ]]></ST>
      </Implementation>
    </Method>
    <Method Name="PreExecutionCheck" Id="{63772d4f-cebd-0677-11ce-d141075e7089}">
      <Declaration><![CDATA[METHOD PUBLIC PreExecutionCheck
VAR_INPUT
	Check : I_PreExecutionChecks;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Check.IsTrue((nWidth.Value > 0), 'nWidth must be greater than 0');
Check.IsTrue((nHeight.Value > 0), 'nHeight must be greater than 0');
Check.IsTrue((nChannelNum.Value >= 1), 'nChannelNum must be greater than or equal to 1');
Check.IsTrue((nChannelNum.Value <= 4), 'nChannelNum must be less than or equal to 4');
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>