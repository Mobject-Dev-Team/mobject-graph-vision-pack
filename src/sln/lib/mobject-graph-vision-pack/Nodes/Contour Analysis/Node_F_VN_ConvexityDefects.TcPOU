<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="Node_F_VN_ConvexityDefects" Id="{a3f1faa1-f766-0867-0ef5-b27dc52c47e7}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Node_F_VN_ConvexityDefects EXTENDS VisionNode
VAR
    ipContour : _ITcVnContainer;
    ipConvexityDefects : _ITcVnContainer;
    hrPrev : _HRESULT(S_OK);
	hresult : _HRESULT(S_OK);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{24c672dd-08ae-004d-0e05-f0e0fa83ed77}" />
    <Method Name="Clone" Id="{ccf7944d-7b2c-0b9d-0a49-8830ff5fb484}">
      <Declaration><![CDATA[METHOD PUBLIC  Clone : I_Node
VAR
	pNode : POINTER TO Node_F_VN_ConvexityDefects;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(Node_F_VN_ConvexityDefects);
Clone := pNode^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{5792a211-45ac-0f83-2cb1-223b2c57cef7}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddInput('ipContour', ipContour);
AddInput('hrPrev', hrPrev);
AddOutput('ipConvexityDefects', ipConvexityDefects);
AddOutput('hresult',hresult);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{e9d30748-7a1c-084b-008b-61fdc6c9195a}">
      <Declaration><![CDATA[METHOD PROTECTED OnExecute
]]></Declaration>
      <Implementation>
        <ST><![CDATA[hresult.Value := F_VN_ConvexityDefects(
	ipContour := ipContour.Value,
    ipConvexityDefects := ipConvexityDefects.Value,
	hrPrev:= hrPrev.Value);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="PreExecutionCheck" Id="{a00b80b2-ecf3-056c-16de-edafe02f341e}">
      <Declaration><![CDATA[METHOD PUBLIC PreExecutionCheck
VAR_INPUT
	Check : I_PreExecutionChecks;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Check.IsTrue(ipContour.IsValid, 'ipContour must be a valid container');
Check.IsTrue(ipContour.HasType(TC_GLOBAL_CONST_LIST.ContainerType_Vector_TcVnPoint2_DINT), 'ipContour contains incorrect type');
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>