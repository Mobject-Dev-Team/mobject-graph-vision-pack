<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="Node_F_VN_DrawComponentsExp" Id="{44733cac-45f7-0ca8-1c1f-4e11899d087f}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Node_F_VN_DrawComponentsExp EXTENDS VisionNode
VAR
    ipLabelImage : _ITcVnImage;
    nLabelID : _DINT(0);
    ipDestImage : _ITcVnImage;
    bShowLabelID : _BOOL(FALSE);
    aColor : _TcVnVector4_LREAL;
    nThickness : _DINT(1);
    fFontScale : _LREAL(1.0);
    hrPrev : _HRESULT(S_OK);
	hresult : _HRESULT(S_OK);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{9cfd71c3-9c2c-0eb9-24b8-4a6227639fa9}" />
    <Method Name="Clone" Id="{af13f091-bce8-08c9-0c7e-5b0504e554e7}">
      <Declaration><![CDATA[METHOD PUBLIC  Clone : I_Node
VAR
	pNode : POINTER TO Node_F_VN_DrawComponentsExp;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(Node_F_VN_DrawComponentsExp);
Clone := pNode^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{09fcc486-080c-0275-27ea-224566a75f50}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddInput('ipLabelImage', ipLabelImage);
AddInput('nLabelID', nLabelID);
AddInput('bShowLabelID', bShowLabelID);
AddInput('aColor', aColor);
AddParameter('nThickness', nThickness);
AddParameter('fFontScale', fFontScale);
AddInput('hrPrev', hrPrev);
AddOutput('ipDestImage', ipDestImage);
AddOutput('hresult',hresult);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{a3d902c8-9116-0f2a-2cf5-f4cbf76c2e70}">
      <Declaration><![CDATA[METHOD PROTECTED OnExecute
]]></Declaration>
      <Implementation>
        <ST><![CDATA[hresult.Value := F_VN_DrawComponentsExp(
	ipLabelImage := ipLabelImage.Value,
    nLabelID := nLabelID.Value,
    ipDestImage := ipDestImage.Value,
    bShowLabelID := bShowLabelID.Value,
    aColor := aColor.Value,
    nThickness := nThickness.Value,
    fFontScale := fFontScale.Value,
	hrPrev:= hrPrev.Value);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="PreExecutionCheck" Id="{1e30f006-23bd-08f7-3f65-a745f2889307}">
      <Declaration><![CDATA[METHOD PUBLIC PreExecutionCheck
VAR_INPUT
	Check : I_PreExecutionChecks;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Check.IsTrue(ipLabelImage.IsValid, 'ipLabelImage must contain an image');
Check.IsTrue(ipLabelImage.HasChannelCount(1), 'ipLabelImage must have 1 channel');
Check.IsTrue((ipLabelImage.IsPixelDepth(16)  OR
              ipLabelImage.IsPixelDepth(32)), 'ipLabelImage must have 16 or 32 bit pixel depth');
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>