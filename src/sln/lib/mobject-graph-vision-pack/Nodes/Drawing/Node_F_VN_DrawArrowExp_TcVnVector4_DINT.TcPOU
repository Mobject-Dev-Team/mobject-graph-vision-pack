<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="Node_F_VN_DrawArrowExp_TcVnVector4_DINT" Id="{8f71eab0-d333-46ce-b912-f7ff7e87fd04}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Node_F_VN_DrawArrowExp_TcVnVector4_DINT EXTENDS VisionNode
VAR
    aLine : _TcVnVector4_DINT;
    ipDestImage : _ITcVnImage;
    aColor : _TcVnVector4_LREAL;
    nThickness : _DINT(1);
    bDoubleHead : _BOOL(FALSE);
    eLineType : _ETcVnLineType(ETcVnLineType.TCVN_LT_4_CONNECTED);
    nShift : _UDINT(0);
    fTipLength : _LREAL(0.0);
    hrPrev : _HRESULT(S_OK);
	hresult : _HRESULT(S_OK);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{b8b75ce6-a429-4036-8c78-17b29f584fcf}" />
    <Method Name="Clone" Id="{0589e6e7-6fe1-4c7a-8780-fc5ac7a7a9c0}">
      <Declaration><![CDATA[METHOD PUBLIC  Clone : I_Node
VAR
	pNode : POINTER TO Node_F_VN_DrawArrowExp_TcVnVector4_DINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(Node_F_VN_DrawArrowExp_TcVnVector4_DINT);
Clone := pNode^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{abc7f944-22e0-4e6b-92a2-f1aefa5793bf}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddInput('aLine', aLine);
AddInput('ipDestImage', ipDestImage);
AddInput('aColor', aColor);
AddParameter('nThickness', nThickness);
AddParameter('bDoubleHead', bDoubleHead);
AddParameter('eLineType', eLineType);
AddParameter('nShift', nShift);
AddParameter('fTipLength', fTipLength);
AddInput('hrPrev', hrPrev);
AddOutput('ipDestImage', ipDestImage);
AddOutput('hresult', hresult);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{a636f848-b2fd-4903-9461-8bebeb927bf1}">
      <Declaration><![CDATA[METHOD PROTECTED  OnExecute : HRESULT
]]></Declaration>
      <Implementation>
        <ST><![CDATA[hresult.Value := F_VN_DrawArrowExp_TcVnVector4_DINT(
    aLine := aLine.Value,
	ipDestImage := ipDestImage.Value,
    aColor := aColor.Value,
    nThickness := nThickness.Value,
    bDoubleHead := bDoubleHead.Value,
    eLineType := eLineType.Value,
    nShift := nShift.Value,
    fTipLenght := fTipLength.Value,
	hrPrev:= hrPrev.Value);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="PreExecutionCheck" Id="{5d99ab8b-9fa8-4f13-91ba-eb5566c2400f}">
      <Declaration><![CDATA[METHOD PUBLIC PreExecutionCheck
VAR_INPUT
	Check : I_PreExecutionChecks;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Check.IsTrue(ipDestImage.IsValid, 'ipDestImage must contain an image');
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>