<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="Node_F_VN_HoughCircles" Id="{3ac64eaf-4310-4f3c-b80a-73012076387f}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Node_F_VN_HoughCircles EXTENDS VisionNode
VAR
    ipSrcImage : _ITcVnImage;
    ipCircles : _ITcVnContainer;
    fInvAccuRatio : _LREAL(1.0);
    fMinDist : _LREAL(1.0);
    hrPrev : _HRESULT(S_OK);
	hresult : _HRESULT(S_OK);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{72a57489-8180-4cb0-992d-5ff7763237f7}" />
    <Method Name="Clone" Id="{27dff40c-3c36-4113-bced-31724099af96}">
      <Declaration><![CDATA[METHOD PUBLIC  Clone : I_Node
VAR
	pNode : POINTER TO Node_F_VN_HoughCircles;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(Node_F_VN_HoughCircles);
Clone := pNode^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{a1d298b8-4b9f-4f84-8f68-14d599023070}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddInput('ipSrcImage', ipSrcImage);
AddParameter('fInvAccuRatio', fInvAccuRatio);
AddParameter('fMinDist', fMinDist);
AddInput('hrPrev', hrPrev);
AddOutput('ipCircles', ipCircles);
AddOutput('hresult', hresult);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{8565b99b-55b0-4b08-b8d8-c0376fb1aaaf}">
      <Declaration><![CDATA[METHOD PROTECTED OnExecute
]]></Declaration>
      <Implementation>
        <ST><![CDATA[hresult.Value := F_VN_HoughCircles(
	ipSrcImage := ipSrcImage.Value,
    ipCircles := ipCircles.Value,
    fInvAccuRatio := fInvAccuRatio.Value,
    fMinDist := fMinDist.Value,
	hrPrev:= hrPrev.Value);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="PreExecutionCheck" Id="{1ade296a-e46c-4a1a-9059-b282ea74746d}">
      <Declaration><![CDATA[METHOD PUBLIC PreExecutionCheck
VAR_INPUT
	Check : I_PreExecutionChecks;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Check.IsTrue(ipSrcImage.IsValid, 'ipSrcImage must contain an image');
Check.IsTrue(ipSrcImage.IsPixelDepth(8), 'ipSrcImage must be 8 bit pixel depth');
Check.IsTrue(ipSrcImage.HasChannelCount(1), 'ipSrcImage must contain 1 channel');
Check.IsTrue((fInvAccuRatio.Value > 0), 'fInvAccuRatio must be greater than 0');
Check.IsTrue((fMinDist.Value > 0), 'fMinDist must be greater than 0');
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>