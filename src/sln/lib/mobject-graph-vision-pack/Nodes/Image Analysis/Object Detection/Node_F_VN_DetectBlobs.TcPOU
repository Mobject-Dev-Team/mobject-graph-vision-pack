<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="Node_F_VN_DetectBlobs" Id="{50643fa5-6287-0ff7-1353-90853505476e}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Node_F_VN_DetectBlobs EXTENDS VisionNode
VAR
    ipSrcImage : _ITcVnImage;
    ipBlobContours : _ITcVnContainer;
    stParams : _TcVnParamsBlobDetection;
    hrPrev : _HRESULT(S_OK);
	hresult : _HRESULT(S_OK);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{2cd9d9e8-2286-00a2-29c0-223469a37ebe}" />
    <Method Name="Clone" Id="{95ed952e-9718-088c-1369-4d8b3370f2ee}">
      <Declaration><![CDATA[METHOD PUBLIC  Clone : I_Node
VAR
	pNode : POINTER TO Node_F_VN_DetectBlobs;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(Node_F_VN_DetectBlobs);
Clone := pNode^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{b63a9882-1a43-0484-3b52-903fb49082a6}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddInput('ipSrcImage', ipSrcImage);
AddInput('stParams', stParams);
AddInput('hrPrev', hrPrev);
AddOutput('ipBlobContours', ipBlobContours);
AddOutput('hresult', hresult);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{0c810f61-d64b-088d-11cd-f554e6dad950}">
      <Declaration><![CDATA[METHOD PROTECTED  OnExecute : HRESULT
]]></Declaration>
      <Implementation>
        <ST><![CDATA[hresult.Value := F_VN_DetectBlobs(
	ipSrcImage := ipSrcImage.Value,
    ipBlobContours := ipBlobContours.Value,
    stParams := stParams.Value,
	hrPrev:= hrPrev.Value);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="PreExecutionCheck" Id="{3836d2bb-5f6a-0a14-1188-90b5af169215}">
      <Declaration><![CDATA[METHOD PUBLIC PreExecutionCheck
VAR_INPUT
	Check : I_PreExecutionChecks;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Check.IsTrue(ipSrcImage.IsValid, 'ipSrcImage must contain an image');
Check.IsTrue((ipSrcImage.IsPixelDepth(8) OR ipSrcImage.IsPixelDepth(32)), 'ipSrcImage must be 8 or 32 bit pixel depth');
Check.IsTrue((ipSrcImage.HasChannelCount(1) OR ipSrcImage.HasChannelCount(3)), 'ipSrcImage must contain 1 or 3 channels');
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>