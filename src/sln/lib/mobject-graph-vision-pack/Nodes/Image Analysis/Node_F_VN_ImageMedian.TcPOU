<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="Node_F_VN_ImageMedian" Id="{d37efdc6-5dc7-08be-20ca-d2a77913ffa5}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Node_F_VN_ImageMedian EXTENDS VisionNode
VAR
    ipSrcImage : _ITcVnImage;
    aMedian : _TcVnVector4_LREAL;
    hrPrev : _HRESULT(S_OK);
	hresult : _HRESULT(S_OK);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{3034987a-6c2f-0b32-2348-75a38acc17cc}" />
    <Method Name="Clone" Id="{b2099736-d747-00fe-3d7f-59f7b4b29c21}">
      <Declaration><![CDATA[METHOD PUBLIC  Clone : I_Node
VAR
	pNode : POINTER TO Node_F_VN_ImageMedian;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(Node_F_VN_ImageMedian);
Clone := pNode^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{1f7dbdb7-e54c-0f4f-28f5-1b8384ebd6b3}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddInput('ipSrcImage', ipSrcImage);
AddInput('hrPrev', hrPrev);
AddOutput('aMedian', aMedian);
AddOutput('hresult', hresult);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{67ce5c99-07be-073b-2849-4c678d576308}">
      <Declaration><![CDATA[METHOD PROTECTED OnExecute
]]></Declaration>
      <Implementation>
        <ST><![CDATA[hresult.Value := F_VN_ImageMedian(
	ipSrcImage := ipSrcImage.Value,
    aMedian := aMedian.Value,
	hrPrev:= hrPrev.Value);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="PreExecutionCheck" Id="{58e9822b-7a5d-0014-0361-196f0515fecb}">
      <Declaration><![CDATA[METHOD PUBLIC PreExecutionCheck
VAR_INPUT
	Check : I_PreExecutionChecks;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Check.IsTrue(ipSrcImage.IsValid, 'ipSrcImage must contain an image');
Check.IsTrue((ipSrcImage.HasChannelCount(1) OR
              ipSrcImage.HasChannelCount(2) OR
              ipSrcImage.HasChannelCount(3) OR
              ipSrcImage.HasChannelCount(4)), 'ipSrcImage must contain 1, 2, 3 or 4 channels');
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>