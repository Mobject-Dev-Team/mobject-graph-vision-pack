<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="Node_F_VN_ImageAverage" Id="{828b3034-f9ef-0ea0-01fe-0d40f1616b67}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Node_F_VN_ImageAverage EXTENDS VisionNode
VAR
    ipSrcImage : _ITcVnImage;
    aAverage : _TcVnVector4_LREAL;
    hrPrev : _HRESULT(S_OK);
	hresult : _HRESULT(S_OK);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{5ae8a6c5-7e9d-04fa-1c19-88598ec146b4}" />
    <Method Name="Clone" Id="{f32fccf5-2675-0142-28b5-05b916104314}">
      <Declaration><![CDATA[METHOD PUBLIC  Clone : I_Node
VAR
	pNode : POINTER TO Node_F_VN_ImageAverage;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(Node_F_VN_ImageAverage);
Clone := pNode^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{4b7cd64b-7c5b-08ea-2ad5-fc8ffc8d33a8}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddInput('ipSrcImage', ipSrcImage);
AddInput('hrPrev', hrPrev);
AddOutput('aAverage', aAverage);
AddOutput('hresult', hresult);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{5e86498c-602f-0b71-2276-8d67791c3e5c}">
      <Declaration><![CDATA[METHOD PROTECTED  OnExecute : HRESULT
]]></Declaration>
      <Implementation>
        <ST><![CDATA[hresult.Value := F_VN_ImageAverage(
	ipSrcImage := ipSrcImage.Value,
    aAverage := aAverage.Value,
	hrPrev:= hrPrev.Value);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="PreExecutionCheck" Id="{b02dc96a-3a44-0f46-044d-dd9407f8e6cc}">
      <Declaration><![CDATA[METHOD PUBLIC PreExecutionCheck
VAR_INPUT
	Check : I_PreExecutionChecks;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Check.IsTrue(ipSrcImage.IsValid, 'ipSrcImage must contain an image');
Check.IsTrue((ipSrcImage.HasChannelCount(1) OR
              ipSrcImage.HasChannelCount(2) OR
              ipSrcImage.HasChannelCount(3) OR
              ipSrcImage.HasChannelCount(4)), 'ipSrcImage must contain 1, 2, 3 or 4 channels');
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>