<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="Node_F_VN_ImageCenterOfMassExp" Id="{de7f5df7-88c7-0175-269c-b1576ea84284}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Node_F_VN_ImageCenterOfMassExp EXTENDS VisionNode
VAR
    ipSrcImage : _ITcVnImage;
    aCenterOfMass : _TcVnPoint2_LREAL;
    ipMask : _ITcVnImage;
    hrPrev : _HRESULT(S_OK);
	hresult : _HRESULT(S_OK);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{536a92da-44a9-04e4-3c58-e3008d2f1924}" />
    <Method Name="Clone" Id="{3a66322b-ed6f-00b5-0609-8510a0f6e11e}">
      <Declaration><![CDATA[METHOD PUBLIC  Clone : I_Node
VAR
	pNode : POINTER TO Node_F_VN_ImageCenterOfMassExp;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(Node_F_VN_ImageCenterOfMassExp);
Clone := pNode^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{15784571-d90f-0a60-2357-3640adf6e8c9}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddInput('ipSrcImage', ipSrcImage);
AddInput('ipMask', ipMask);
AddInput('hrPrev', hrPrev);
AddOutput('aCenterOfMass', aCenterOfMass);
AddOutput('hresult', hresult);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{31855382-254c-0a58-124f-a87d6b63132d}">
      <Declaration><![CDATA[METHOD PROTECTED OnExecute
]]></Declaration>
      <Implementation>
        <ST><![CDATA[hresult.Value := F_VN_ImageCenterOfMassExp(
	ipSrcImage := ipSrcImage.Value,
    aCenterOfMass := aCenterOfMass.Value,
    ipMask := ipMask.Value,
	hrPrev:= hrPrev.Value);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="PreExecutionCheck" Id="{91554f22-76ff-054e-3abf-bbf90b649bc8}">
      <Declaration><![CDATA[METHOD PUBLIC PreExecutionCheck
VAR_INPUT
	Check : I_PreExecutionChecks;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Check.IsTrue(ipSrcImage.IsValid, 'ipSrcImage must contain an image');
Check.IsTrue(ipSrcImage.HasChannelCount(1), 'ipSrcImage must contain 1 channel');
Check.IsTrue(ipMask.IsValid, 'ipMask must contain an image');
Check.IsTrue(ipMask.HasChannelCount(1), 'ipMask must have 1 channel');
Check.IsTrue(ipMask.IsPixelDepth(8), 'ipMask must have 8 bit pixel depth');
Check.IsTrue(IsImage1SizeEqualToImage2Size(ipMask.Value, ipSrcImage.Value), 'ipMask must be the same size as ipSrcImage');
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>