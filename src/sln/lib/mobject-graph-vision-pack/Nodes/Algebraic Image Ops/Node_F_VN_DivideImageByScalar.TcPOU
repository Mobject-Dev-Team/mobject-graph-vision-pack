<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="Node_F_VN_DivideImageByScalar" Id="{8077c749-1fbe-05e8-0aba-de2d93d3f138}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Node_F_VN_DivideImageByScalar EXTENDS VisionNode
VAR
    ipSrcImage : _ITcVnImage;
    fScalar : _LREAL(0.0);
    ipDestImage : _ITcVnImage;
    hrPrev : _HRESULT(S_OK);
	hresult : _HRESULT(S_OK);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{66f6f491-818d-019e-3434-98857b0ccacc}" />
    <Method Name="Clone" Id="{2153089d-548b-0af0-346e-c39288a932c9}">
      <Declaration><![CDATA[METHOD PUBLIC  Clone : I_Node
VAR
	pNode : POINTER TO Node_F_VN_DivideImageByScalar;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(Node_F_VN_DivideImageByScalar);
Clone := pNode^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{ece1ea71-af60-0501-3731-726ea0051e38}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddInput('ipSrcImage', ipSrcImage);
AddParameter('fScalar', fScalar);
AddInput('hrPrev', hrPrev);
AddOutput('ipDestImage', ipDestImage);
AddOutput('hresult',hresult);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{4f648a58-5c51-0507-3241-6fcdb19794b8}">
      <Declaration><![CDATA[METHOD PROTECTED OnExecute]]></Declaration>
      <Implementation>
        <ST><![CDATA[hresult.Value := F_VN_DivideImageByScalar(
    ipSrcImage := ipSrcImage.Value,
    fScalar := fScalar.Value,
	ipDestImage := ipDestImage.Value,
	hrPrev:= hrPrev.Value);
    ]]></ST>
      </Implementation>
    </Method>
    <Method Name="PreExecutionCheck" Id="{2fc9ad39-6ea4-0a8a-2b85-a9d630c4a26f}">
      <Declaration><![CDATA[METHOD PUBLIC PreExecutionCheck
VAR_INPUT
	Check : I_PreExecutionChecks;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Check.IsTrue(ipSrcImage.IsValid, 'ipSrcImage must contain an image');
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>