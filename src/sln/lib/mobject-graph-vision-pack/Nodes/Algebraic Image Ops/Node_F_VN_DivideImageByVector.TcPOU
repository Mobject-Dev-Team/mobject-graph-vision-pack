<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="Node_F_VN_DivideImageByVector" Id="{311745db-69f5-0324-2f5f-9c9c482fc21d}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Node_F_VN_DivideImageByVector EXTENDS VisionNode
VAR
    ipSrcImage : _ITcVnImage;
    aVector : _TcVnVector4_LREAL;
    ipDestImage : _ITcVnImage;
    hrPrev : _HRESULT(S_OK);
	hresult : _HRESULT(S_OK);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{44c3038b-289b-079d-0116-add9c4ff362e}" />
    <Method Name="Clone" Id="{6cc7bdfa-f24a-08ee-0555-2e2e4be4a902}">
      <Declaration><![CDATA[METHOD PUBLIC  Clone : I_Node
VAR
	pNode : POINTER TO Node_F_VN_DivideImageByVector;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(Node_F_VN_DivideImageByVector);
Clone := pNode^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{1a4847fd-a1d4-070d-1682-3da9522ef08b}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddInput('ipSrcImage', ipSrcImage);
AddInput('aVector', aVector);
AddInput('hrPrev', hrPrev);
AddOutput('ipDestImage', ipDestImage);
AddOutput('hresult',hresult);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{16a50b42-8c17-0844-3e11-21c74e3a3c40}">
      <Declaration><![CDATA[METHOD PROTECTED OnExecute : HRESULT]]></Declaration>
      <Implementation>
        <ST><![CDATA[hresult.Value := F_VN_DivideImageByVector(
    ipSrcImage := ipSrcImage.Value,
    aVector := aVector.Value,
	ipDestImage := ipDestImage.Value,
	hrPrev:= hrPrev.Value);
    ]]></ST>
      </Implementation>
    </Method>
    <Method Name="PreExecutionCheck" Id="{d0c44316-ead4-0c09-07d4-970ba284ee35}">
      <Declaration><![CDATA[METHOD PUBLIC PreExecutionCheck
VAR_INPUT
	Check : I_PreExecutionChecks;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Check.IsTrue(ipSrcImage.IsValid, 'ipSrcImage must contain an image');
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>