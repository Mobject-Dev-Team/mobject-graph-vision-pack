<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="Node_F_VN_BitwiseOrImagesExp" Id="{b3fcd509-2606-0932-2086-c4e9ff54bbce}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Node_F_VN_BitwiseOrImagesExp EXTENDS VisionNode
VAR
    ipSrcImage1 : _ITcVnImage;
    ipSrcImage2 : _ITcVnImage;
    ipDestImage : _ITcVnImage;
    ipMask : _ITcVnImage;
    hrPrev : _HRESULT(S_OK);
	hresult : _HRESULT(S_OK);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{30f244d1-0c06-0e80-103f-b564f35f48c9}" />
    <Method Name="Clone" Id="{90bc8f28-66e5-0f13-12ce-5b0439860624}">
      <Declaration><![CDATA[METHOD PUBLIC  Clone : I_Node
VAR
	pNode : POINTER TO Node_F_VN_BitwiseOrImagesExp;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(Node_F_VN_BitwiseOrImagesExp);
Clone := pNode^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{5a6f41aa-4034-08e0-2f7d-35b80f5cec7c}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddInput('ipSrcImage1', ipSrcImage1);
AddInput('ipSrcImage2', ipSrcImage2);
AddInput('ipMask', ipMask);
AddInput('hrPrev', hrPrev);
AddOutput('ipDestImage', ipDestImage);
AddOutput('hresult',hresult);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{e2407ee9-2c8d-034e-1fbf-63b33ef93e6a}">
      <Declaration><![CDATA[METHOD PROTECTED OnExecute : HRESULT]]></Declaration>
      <Implementation>
        <ST><![CDATA[hresult.Value := F_VN_BitwiseOrImagesExp(
    ipSrcImage1 := ipSrcImage1.Value,
    ipSrcImage2 := ipSrcImage2.Value,
	ipDestImage := ipDestImage.Value,
    ipMask := ipMask.Value,
	hrPrev:= hrPrev.Value);
    ]]></ST>
      </Implementation>
    </Method>
    <Method Name="PreExecutionCheck" Id="{5e0efaf1-aa5b-04ad-0f97-ce2634f18653}">
      <Declaration><![CDATA[METHOD PUBLIC PreExecutionCheck
VAR_INPUT
	Check : I_PreExecutionChecks;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Check.IsTrue(ipSrcImage1.IsValid, 'ipSrcImage1 must contain an image');
Check.IsTrue(ipSrcImage2.IsValid, 'ipSrcImage2 must contain an image');
Check.IsTrue(IsImage1SizeEqualToImage2Size(ipSrcImage1.Value, ipSrcImage2.Value), 'ipSrcImage1 must be the same size as ipSrcImage2');
Check.IsTrue(ipMask.IsValid, 'ipMask must contain an image');
Check.IsTrue(ipMask.HasChannelCount(1), 'ipMask must have 1 channel');
Check.IsTrue(ipMask.IsPixelDepth(8), 'ipMask must have 8 bit pixel depth');
Check.IsTrue(IsImage1SizeEqualToImage2Size(ipMask.Value, ipSrcImage1.Value), 'ipMask must be the same size as ipSrcImage1');
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>