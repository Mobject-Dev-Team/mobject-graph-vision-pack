<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="Node_F_VN_MaxImageWithVectorExp" Id="{6ee481a5-ecda-046f-17f3-ec13f100efb0}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Node_F_VN_MaxImageWithVectorExp EXTENDS VisionNode
VAR
    aVector : _TcVnVector4_LREAL;
    ipSrcImage : _ITcVnImage;
    ipDestImage : _ITcVnImage;
    ipMask : _ITcVnImage;
    hrPrev : _HRESULT(S_OK);
	hresult : _HRESULT(S_OK);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{48728288-f7dd-0499-036c-971fc8e8c3f4}" />
    <Method Name="Clone" Id="{76011007-8b80-0e06-1905-a0c7d9904fb1}">
      <Declaration><![CDATA[METHOD PUBLIC  Clone : I_Node
VAR
	pNode : POINTER TO Node_F_VN_MaxImageWithVectorExp;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(Node_F_VN_MaxImageWithVectorExp);
Clone := pNode^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{a1426fdc-7136-0be1-047c-b7f5ac68efc1}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddInput('aVector', aVector);
AddInput('ipSrcImage', ipSrcImage);
AddInput('ipMask', ipMask);
AddInput('hrPrev', hrPrev);
AddOutput('ipDestImage', ipDestImage);
AddOutput('hresult',hresult);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{bf07001f-6fdd-0b47-3c78-9314691d2ead}">
      <Declaration><![CDATA[METHOD PROTECTED OnExecute : HRESULT]]></Declaration>
      <Implementation>
        <ST><![CDATA[hresult.Value := F_VN_MaxImageWithVectorExp(
    aVector := aVector.Value,
    ipSrcImage := ipSrcImage.Value,
	ipDestImage := ipDestImage.Value,
    ipMask := ipMask.Value,
	hrPrev:= hrPrev.Value);
    ]]></ST>
      </Implementation>
    </Method>
    <Method Name="PreExecutionCheck" Id="{74716427-b063-0aef-0cae-26bd4c50c6ce}">
      <Declaration><![CDATA[METHOD PUBLIC PreExecutionCheck
VAR_INPUT
	Check : I_PreExecutionChecks;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Check.IsTrue(ipSrcImage.IsValid, 'ipSrcImage must contain an image');
Check.IsTrue(ipMask.IsValid, 'ipMask must contain an image');
Check.IsTrue(ipMask.HasChannelCount(1), 'ipMask must have 1 channel');
Check.IsTrue(ipMask.IsPixelDepth(8), 'ipMask must have 8 bit pixel depth');
Check.IsTrue(IsImage1SizeEqualToImage2Size(ipMask.Value, ipSrcImage.Value), 'ipMask must be the same size as ipSrcImage');
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>