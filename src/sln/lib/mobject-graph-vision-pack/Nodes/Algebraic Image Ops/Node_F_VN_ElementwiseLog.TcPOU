<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="Node_F_VN_ElementwiseLog" Id="{b1fc8eca-c2ac-0d25-192a-01f05aab5338}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Node_F_VN_ElementwiseLog EXTENDS VisionNode
VAR
    ipSrcImage : _ITcVnImage;
    ipDestImage : _ITcVnImage;
    hrPrev : _HRESULT(S_OK);
	hresult : _HRESULT(S_OK);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{22ff3e3f-64d5-0cb8-344a-76288229d708}" />
    <Method Name="Clone" Id="{07300f5c-d289-0387-08dd-af41adda509a}">
      <Declaration><![CDATA[METHOD PUBLIC  Clone : I_Node
VAR
	pNode : POINTER TO Node_F_VN_ElementwiseLog;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(Node_F_VN_ElementwiseLog);
Clone := pNode^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{4a9236fe-a0ec-0926-278e-4d2b32131453}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddInput('ipSrcImage', ipSrcImage);
AddInput('hrPrev', hrPrev);
AddOutput('ipDestImage', ipDestImage);
AddOutput('hresult',hresult);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{be71dc6b-172b-0212-1a3b-923bedb3957a}">
      <Declaration><![CDATA[METHOD PROTECTED OnExecute : HRESULT]]></Declaration>
      <Implementation>
        <ST><![CDATA[hresult.Value := F_VN_ElementwiseLog(
    ipSrcImage := ipSrcImage.Value,
	ipDestImage := ipDestImage.Value,
	hrPrev:= hrPrev.Value);
    ]]></ST>
      </Implementation>
    </Method>
    <Method Name="PreExecutionCheck" Id="{990add5a-c363-02fa-2d54-cb2138782aeb}">
      <Declaration><![CDATA[METHOD PUBLIC PreExecutionCheck
VAR_INPUT
	Check : I_PreExecutionChecks;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Check.IsTrue(ipSrcImage.IsValid, 'ipSrcImage must contain an image');
Check.IsTrue((ipSrcImage.IsPixelDepth(32) OR
              ipSrcImage.IsPixelDepth(64)), 'ipSrcImage must have 32 or 64 bit pixel depth');
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>