<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.15">
  <POU Name="Node_F_VN_BilateralFilter" Id="{44b7e87b-8473-0131-0405-039e71bf9746}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Node_F_VN_BilateralFilter EXTENDS VisionNode
VAR
	ipSrcImage : _ITcVnImage;
    ipDestImage : _ITcVnImage;
    nDiameter : _DINT(1);
    fSigmaColor : _LREAL(10.0);
    fSigmaSpace : _LREAL(10.0);
    hrPrev : _HRESULT(S_OK);
	hresult : _HRESULT(S_OK);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{6e7a4b4e-c64a-034d-1131-ea46e0831b2e}" />
    <Method Name="Clone" Id="{76248ecd-a6c3-0334-21ad-ecaf19457610}">
      <Declaration><![CDATA[METHOD PUBLIC  Clone : I_Node
VAR
	pNode : POINTER TO Node_F_VN_BilateralFilter;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(Node_F_VN_BilateralFilter);
Clone := pNode^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{5fca4477-6e75-0155-35b7-38f860cff209}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddInput('ipSrcImage', ipSrcImage);
AddParameter('nDiameter', nDiameter);
AddParameter('fSigmaColor', fSigmaColor);
AddParameter('fSigmaSpace', fSigmaSpace);
AddInput('hrPrev', hrPrev);
AddOutput('ipDestImage', ipDestImage);
AddOutput('hresult',hresult);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{0db5b78f-7200-0e18-2da3-809e83715428}">
      <Declaration><![CDATA[METHOD PROTECTED OnExecute]]></Declaration>
      <Implementation>
        <ST><![CDATA[hresult.Value := F_VN_BilateralFilter(
	ipSrcImage:= ipSrcImage.Value,
	ipDestImage:= ipDestImage.Value,
	nDiameter:= nDiameter.Value,
    fSigmaColor := fSigmaColor.Value,
    fSigmaSpace := fSigmaSpace.Value,
	hrPrev:= hrPrev.Value);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="PreExecutionCheck" Id="{e274c65d-ed4c-039e-2a5d-e7eacfafaa92}">
      <Declaration><![CDATA[METHOD PUBLIC PreExecutionCheck
VAR_INPUT
	Check : I_PreExecutionChecks;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Check.IsTrue(ipSrcImage.IsValid, 'ipSrcImage must contain an image');
Check.IsTrue((ipSrcImage.HasChannelCount(1) OR ipSrcImage.HasChannelCount(3)), 'ipSrcImage must have 1 or 3 channels');
Check.IsTrue(ipSrcImage.IsPixelDepth(8), 'ipSrcImage must have 8 bit pixel depth');
Check.IsTrue((nDiameter.IsOdd OR nDiameter.Value = 0),'nDiameter must be odd or 0');
Check.IsTrue(fSigmaColor.Value > 0, 'fSigmaColor must be greater than 0');
Check.IsTrue(fSigmaSpace.Value > 0, 'fSigmaSpace must be greater than 0');
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>