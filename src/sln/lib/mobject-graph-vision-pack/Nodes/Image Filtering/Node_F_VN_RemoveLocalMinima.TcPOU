<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="Node_F_VN_RemoveLocalMinima" Id="{c44af1cb-37a6-06a1-23d7-6323743e7b74}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Node_F_VN_RemoveLocalMinima EXTENDS VisionNode
VAR
    ipSrcImage : _ITcVnImage;
    ipDestImage : _ITcVnImage;
    fHeight : _LREAL(1.0);
    hrPrev : _HRESULT(S_OK);
	hresult : _HRESULT(S_OK);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{2d76b0df-7299-04c6-1ddc-fa87d4ad02ef}" />
    <Method Name="Clone" Id="{553394bd-13ed-06d0-0fdc-562116f7cd14}">
      <Declaration><![CDATA[METHOD PUBLIC  Clone : I_Node
VAR
	pNode : POINTER TO Node_F_VN_RemoveLocalMinima;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(Node_F_VN_RemoveLocalMinima);
Clone := pNode^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{2ff8320d-60fa-064a-03da-12c3def7947a}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddInput('ipSrcImage', ipSrcImage);
AddParameter('fHeight', fHeight);
AddInput('hrPrev', hrPrev);
AddOutput('ipDestImage', ipDestImage);
AddOutput('hresult',hresult);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{961db486-8907-02cf-232a-e62f9f37b946}">
      <Declaration><![CDATA[METHOD PROTECTED OnExecute]]></Declaration>
      <Implementation>
        <ST><![CDATA[hresult.Value := F_VN_RemoveLocalMinima(
    ipSrcImage := ipSrcImage.Value,
	ipDestImage := ipDestImage.Value,
    fHeight := fHeight.Value,
	hrPrev:= hrPrev.Value);
    ]]></ST>
      </Implementation>
    </Method>
    <Method Name="PreExecutionCheck" Id="{ab23095a-9a09-018d-26ba-84095d94bd14}">
      <Declaration><![CDATA[METHOD PUBLIC PreExecutionCheck
VAR_INPUT
	Check : I_PreExecutionChecks;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Check.IsTrue(ipSrcImage.IsValid, 'ipSrcImage must contain an image');
Check.IsTrue(ipSrcImage.HasChannelCount(1), 'ipSrcImage must have 1 channel');

Check.IsTrue((ipSrcImage.IsPixelDepth(8) OR
              ipSrcImage.IsPixelDepth(16) OR
              ipSrcImage.IsPixelDepth(32) OR
              ipSrcImage.IsPixelDepth(64)), 'ipSrcImage must have 8, 16, 32 or 64 bit pixel depth');

Check.IsTrue(fHeight.Value > 0, 'fHeight must be greater than 0');
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>