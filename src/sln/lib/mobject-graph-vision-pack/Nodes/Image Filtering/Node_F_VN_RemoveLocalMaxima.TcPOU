<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="Node_F_VN_RemoveLocalMaxima" Id="{d6079129-5557-0040-2f44-2ae78710f760}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Node_F_VN_RemoveLocalMaxima EXTENDS VisionNode
VAR
    ipSrcImage : _ITcVnImage;
    ipDestImage : _ITcVnImage;
    fHeight : _LREAL(1.0);
    hrPrev : _HRESULT(S_OK);
	hresult : _HRESULT(S_OK);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{8d2e1dba-3121-09f1-2503-db55074ed572}" />
    <Method Name="Clone" Id="{6df4f4d8-d408-0051-212f-544259f65b37}">
      <Declaration><![CDATA[METHOD PUBLIC  Clone : I_Node
VAR
	pNode : POINTER TO Node_F_VN_RemoveLocalMaxima;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(Node_F_VN_RemoveLocalMaxima);
Clone := pNode^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{c8403a07-e343-0151-0d04-1f5915ddda10}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddInput('ipSrcImage', ipSrcImage);
AddParameter('fHeight', fHeight);
AddInput('hrPrev', hrPrev);
AddOutput('ipDestImage', ipDestImage);
AddOutput('hresult',hresult);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{097ef83e-74d4-06ad-1b3f-867c8bcb187e}">
      <Declaration><![CDATA[METHOD PROTECTED OnExecute]]></Declaration>
      <Implementation>
        <ST><![CDATA[hresult.Value := F_VN_RemoveLocalMaxima(
    ipSrcImage := ipSrcImage.Value,
	ipDestImage := ipDestImage.Value,
    fHeight := fHeight.Value,
	hrPrev:= hrPrev.Value);
    ]]></ST>
      </Implementation>
    </Method>
    <Method Name="PreExecutionCheck" Id="{a42bd5fc-96d9-0984-259d-53b865d76ca1}">
      <Declaration><![CDATA[METHOD PUBLIC PreExecutionCheck
VAR_INPUT
	Check : I_PreExecutionChecks;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Check.IsTrue(ipSrcImage.IsValid, 'ipSrcImage must contain an image');
Check.IsTrue(ipSrcImage.HasChannelCount(1), 'ipSrcImage must have 1 channel');

Check.IsTrue((ipSrcImage.IsPixelDepth(8) OR
              ipSrcImage.IsPixelDepth(16) OR
              ipSrcImage.IsPixelDepth(32) OR
              ipSrcImage.IsPixelDepth(64)), 'ipSrcImage must have 8, 16, 32 or 64 bit pixel depth');

Check.IsTrue(fHeight.Value > 0, 'fHeight must be greater than 0');
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>