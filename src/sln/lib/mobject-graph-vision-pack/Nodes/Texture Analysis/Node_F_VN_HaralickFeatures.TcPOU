<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="Node_F_VN_HaralickFeatures" Id="{5d3cc381-d576-0939-1437-b076d9964bd7}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Node_F_VN_HaralickFeatures EXTENDS VisionNode
VAR
    ipImage : _ITcVnImage;
    ipFeatures : _ITcVnContainer;
    nDist : _UDINT(0);
    hrPrev : _HRESULT(S_OK);
	hresult : _HRESULT(S_OK);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{139393ed-4636-0bdb-0b13-2034d9514caf}" />
    <Method Name="Clone" Id="{3ae0b9b8-1dfa-00a8-041d-ba7264531cbb}">
      <Declaration><![CDATA[METHOD PUBLIC  Clone : I_Node
VAR
	pNode : POINTER TO Node_F_VN_HaralickFeatures;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(Node_F_VN_HaralickFeatures);
Clone := pNode^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{ba53602d-cfd3-0d74-2929-352f52a77614}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddInput('ipImage', ipImage);
AddParameter('nDist', nDist);
AddInput('hrPrev', hrPrev);
AddOutput('ipFeatures', ipFeatures);
AddOutput('hresult',hresult);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{b219abf4-7656-0f65-0c1b-ec59eda3f934}">
      <Declaration><![CDATA[METHOD PROTECTED OnExecute]]></Declaration>
      <Implementation>
        <ST><![CDATA[hresult.Value := F_VN_HaralickFeatures(
    ipImage := ipImage.Value,
    ipFeatures := ipFeatures.Value,
    nDist := nDist.Value,
	hrPrev:= hrPrev.Value);
    ]]></ST>
      </Implementation>
    </Method>
    <Method Name="PreExecutionCheck" Id="{92dd6327-1024-0eb2-3e67-7f741f1bdb53}">
      <Declaration><![CDATA[METHOD PUBLIC PreExecutionCheck
VAR_INPUT
	Check : I_PreExecutionChecks;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Check.IsTrue(ipImage.IsValid, 'ipImage must contain an image');
Check.IsTrue(ipImage.HasChannelCount(1), 'ipImage must have 1 channel');
Check.IsTrue(ipImage.IsPixelDepth(8), 'ipImage must have 8 bit pixel depth');
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>