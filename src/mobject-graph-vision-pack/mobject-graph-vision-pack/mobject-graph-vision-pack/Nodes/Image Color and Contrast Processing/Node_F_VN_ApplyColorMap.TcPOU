<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="Node_F_VN_ApplyColorMap" Id="{e3d5bbc4-fd7b-04b6-352d-244d460f5ea4}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Node_F_VN_ApplyColorMap EXTENDS VisionNode
VAR
	ipSrcImage : _ITcVnImage;
    ipDestImage : _ITcVnImage;
    ipColorMap : _ITcVnContainer;
    hrPrev : _HRESULT(S_OK);
	hresult : _HRESULT(S_OK);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{170d4d07-ee97-057f-0cc4-29f34a62b2d0}" />
    <Method Name="Clone" Id="{a3a3aa82-4bfa-03a1-1752-e90f281f20cc}">
      <Declaration><![CDATA[METHOD PUBLIC  Clone : I_Node
VAR
	pNode : POINTER TO Node_F_VN_ApplyColorMap;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(Node_F_VN_ApplyColorMap);
Clone := pNode^;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{997ebc6e-a046-0180-1d10-2372729ca753}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddInput('ipSrcImage', ipSrcImage);
AddInput('ipColorMap', ipColorMap);
AddInput('hrPrev', hrPrev);
AddOutput('ipDestImage', ipDestImage);
AddOutput('hresult',hresult);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{f6a9abae-97a4-0f30-3146-4c1a7d926c8f}">
      <Declaration><![CDATA[METHOD PROTECTED  OnExecute : HRESULT]]></Declaration>
      <Implementation>
        <ST><![CDATA[hresult.Value := F_VN_ApplyColorMap(
	ipSrcImage   := ipSrcImage.Value,
    ipDestImage   := ipDestImage.Value,
	ipColorMap := ipColorMap.Value,
	hrPrev := hrPrev.Value);
    ]]></ST>
      </Implementation>
    </Method>
    <Method Name="PreExecutionCheck" Id="{4d3bfcc1-cc2c-0461-0f97-700a98f505f8}">
      <Declaration><![CDATA[METHOD PUBLIC PreExecutionCheck
VAR_INPUT
	Check : I_PreExecutionChecks;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Check.IsTrue(ipSrcImage.IsValid, 'ipSrcImage must contain an image');
Check.IsTrue(ipColorMap.IsValid, 'ipColorMap must be a valid container');
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>