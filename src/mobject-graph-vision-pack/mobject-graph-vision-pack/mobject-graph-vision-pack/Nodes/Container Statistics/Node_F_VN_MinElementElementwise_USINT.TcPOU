<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="Node_F_VN_MinElementElementwise_USINT" Id="{16f0f7ba-8c85-44c5-913e-edede2628fa0}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Node_F_VN_MinElementElementwise_USINT EXTENDS VisionNode
VAR
    ipContainer : _ITcVnContainer;
    nMin : _USINT(0);
    hrPrev : _HRESULT(S_OK);
    hresult : _HRESULT(S_OK);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{baa468d1-b740-4d90-a09f-dda54c31b910}" />
    <Method Name="Clone" Id="{dd4fbcc5-63e8-4290-8df9-d6e337161c73}">
      <Declaration><![CDATA[METHOD PUBLIC  Clone : I_Node
VAR
	pNode : POINTER TO Node_F_VN_MinElementElementwise_USINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(Node_F_VN_MinElementElementwise_USINT);
Clone := pNode^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{c487ef84-89b0-4966-ab35-da87c7628b53}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddInput('ipContainer', ipContainer);
AddInput('nMin', nMin);
AddInput('hrPrev', hrPrev);
AddOutput('ipContainer', ipContainer);
AddOutput('hresult',hresult);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{3d6effaf-a6eb-4298-8345-274a7e29caa7}">
      <Declaration><![CDATA[METHOD PROTECTED OnExecute : HRESULT]]></Declaration>
      <Implementation>
        <ST><![CDATA[hresult.Value := F_VN_MinElementElementwise_USINT(
    ipContainer := ipContainer.Value,
    nMin := nMin.Value,
    hrPrev:= hrPrev.Value);
    ]]></ST>
      </Implementation>
    </Method>
    <Method Name="PreExecutionCheck" Id="{a03e4948-18ba-41bc-8c34-eeaee2738283}">
      <Declaration><![CDATA[METHOD PUBLIC PreExecutionCheck
VAR_INPUT
	Check : I_PreExecutionChecks;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Check.IsTrue(ipContainer.IsValid, 'ipContainer must be a valid container');
Check.IsTrue(ipContainer.HasType('CTcVnContainer_Vector_USINT'), 'ipContainer contains incorrect types');
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>