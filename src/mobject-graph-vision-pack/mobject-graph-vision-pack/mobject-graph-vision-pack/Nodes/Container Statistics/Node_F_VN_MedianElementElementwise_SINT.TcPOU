<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="Node_F_VN_MedianElementElementwise_SINT" Id="{52d2e324-de06-49ab-9989-1c04961fd3e5}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK Node_F_VN_MedianElementElementwise_SINT EXTENDS VisionNode
VAR
    ipContainer : _ITcVnContainer;
    nMedian : _SINT(0);
    hrPrev : _HRESULT(S_OK);
    hresult : _HRESULT(S_OK);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{127eeb46-aa90-4fdd-a91a-40f4a0154d56}" />
    <Method Name="Clone" Id="{ebb84139-2b9d-4d78-b9af-d477e3c759d1}">
      <Declaration><![CDATA[METHOD PUBLIC  Clone : I_Node
VAR
	pNode : POINTER TO Node_F_VN_MedianElementElementwise_SINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[pNode := __NEW(Node_F_VN_MedianElementElementwise_SINT);
Clone := pNode^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{c0e90acc-c089-402c-938f-d56400000201}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddInput('ipContainer', ipContainer);
AddInput('nMedian', nMedian);
AddInput('hrPrev', hrPrev);
AddOutput('ipContainer', ipContainer);
AddOutput('hresult',hresult);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnExecute" Id="{0e1c7eef-27de-4a68-8aa7-2292642b0ec9}">
      <Declaration><![CDATA[METHOD PROTECTED OnExecute : HRESULT]]></Declaration>
      <Implementation>
        <ST><![CDATA[hresult.Value := F_VN_MedianElementElementwise_SINT(
    ipContainer := ipContainer.Value,
    nMedian := nMedian.Value,
    hrPrev:= hrPrev.Value);
    ]]></ST>
      </Implementation>
    </Method>
    <Method Name="PreExecutionCheck" Id="{849d14e0-767a-43fa-8ac0-5db685ec12f6}">
      <Declaration><![CDATA[METHOD PUBLIC PreExecutionCheck
VAR_INPUT
	Check : I_PreExecutionChecks;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Check.IsTrue(ipContainer.IsValid, 'ipContainer must be a valid container');
Check.IsTrue(ipContainer.HasType('CTcVnContainer_Vector_SINT'), 'ipContainer contains incorrect types');
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>