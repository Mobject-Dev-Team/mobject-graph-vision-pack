<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="_ALIASTYP" Id="{11dfa79a-cf49-0cc9-1ff2-2a890e36ced1}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK _ALIASTYP EXTENDS AliasDatatypeBase
VAR
	localData : ALIASTYP;
	activeData : REFERENCE TO ALIASTYP REF= localData;
	aliasBaseDatatype : ALIASTYPBASE;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Core" Id="{cc189060-d94f-0946-012c-c0e35767e96e}">
      <Folder Name="Protected" Id="{62ce3d2f-1ab3-0f0b-1775-9976f8c1ba1c}" />
    </Folder>
    <Folder Name="Customize" Id="{1edd4a7a-953f-0d09-1983-04adff481ec5}">
      <Folder Name="Constructor" Id="{06f36322-8592-0889-1ecb-d2277949b744}" />
    </Folder>
    <Property Name="Address" Id="{acb4897b-300b-02f7-1574-3139e91f367e}" FolderPath="Core\">
      <Declaration><![CDATA[PROPERTY PUBLIC Address : PVOID]]></Declaration>
      <Get Name="Get" Id="{cbb3e3b2-47c8-0f8e-2c9d-13790e1b607d}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Address := ADR(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ClearReference" Id="{5bbc1ba8-8dae-0042-2e39-57f033e9b97a}" FolderPath="Core\">
      <Declaration><![CDATA[METHOD PUBLIC ClearReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= localData;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clone" Id="{382e9781-35fa-0f2d-1651-b5755299772d}" FolderPath="Customize\">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Datatype
VAR
    pClone : POINTER TO _ALIASTYP;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pClone := __NEW(_ALIASTYP);
Clone := pClone^;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{3acb41ac-850d-05c9-1152-c4f120939b48}" FolderPath="Customize\Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	//InitialValue : ALIASTYP; // if possible, not all values can be initialized
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[//localData := InitialValue; // if possible, not all values can be initialized
SetBaseDatatypeReference();
AddBaseDatatype(aliasBaseDatatype);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Identifier" Id="{318825c9-d301-0c0d-32c8-5ec92b72736c}" FolderPath="Customize\">
      <Declaration><![CDATA[PROPERTY PUBLIC Identifier : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{5e762c12-9b35-0e5c-299e-6cf69858a11e}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Identifier := 'ALIASTYP';]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="MakeReferenceTo" Id="{6259c631-a2d6-0426-1c5a-6fbc04d22a97}" FolderPath="Customize\">
      <Declaration><![CDATA[METHOD PUBLIC MakeReferenceTo
VAR_INPUT
	ReferenceTarget : REFERENCE TO ALIASTYP;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= ReferenceTarget;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetBaseDatatypeReference" Id="{3f2077cb-c414-0424-0d19-16425e29d5f4}" FolderPath="Core\Protected\">
      <Declaration><![CDATA[METHOD PROTECTED SetBaseDatatypeReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[aliasBaseDatatype.MakeReferenceTo(activeData);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{48dab08c-b54a-0b04-0498-02e2e93ee143}" FolderPath="Core\">
      <Declaration><![CDATA[PROPERTY PUBLIC Size : UDINT]]></Declaration>
      <Get Name="Get" Id="{b23df07f-b43d-0936-2742-ac673b5494dc}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := SIZEOF(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="TryMakeReferenceTo" Id="{9b24dae1-36ca-00bf-0a54-29b6900c0a33}" FolderPath="Customize\">
      <Declaration><![CDATA[METHOD TryMakeReferenceTo : BOOL
VAR_INPUT
	Target : I_Datatype;
END_VAR
VAR
	targetAsAlias : I_AliasDatatype;
	pTargetData : POINTER TO ALIASTYP;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Target.TryResolveAsAliasDatatype(targetAsAlias) THEN
	RETURN;
END_IF

IF targetAsAlias.Identifier <> Identifier THEN
	RETURN;
END_IF

pTargetData := Target.Address;
activeData REF= pTargetData^;
SetBaseDatatypeReference();
TryMakeReferenceTo := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Value" Id="{40375163-87b0-08ab-2945-36f111e497c6}" FolderPath="Customize\">
      <Declaration><![CDATA[PROPERTY PUBLIC Value : REFERENCE TO ALIASTYP]]></Declaration>
      <Get Name="Get" Id="{4a4d920f-8f94-050f-1d7d-d1d77622d645}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Value REF= activeData;]]></ST>
        </Implementation>
      </Get>
    </Property>
  </POU>
</TcPlcObject>