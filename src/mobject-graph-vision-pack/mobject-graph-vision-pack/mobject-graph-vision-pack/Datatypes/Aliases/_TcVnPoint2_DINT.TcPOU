<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="_TcVnPoint2_DINT" Id="{7727845f-bbb2-0d85-0258-b2b33c23ce87}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK _TcVnPoint2_DINT EXTENDS AliasDatatypeBase
VAR
	localData : TcVnPoint2_DINT;
	activeData : REFERENCE TO TcVnPoint2_DINT REF= localData;
	aliasBaseDatatype : _TcVnVector2_DINT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Core" Id="{f2da0f91-170e-0a12-22e2-0faa8c70a495}">
      <Folder Name="Protected" Id="{5abb0fce-0615-024d-007d-2a8e16dea453}" />
    </Folder>
    <Folder Name="Customize" Id="{47592edb-176e-0fe5-179e-b5c7efa30e39}">
      <Folder Name="Constructor" Id="{2f5e3b65-533f-0f55-194b-fb28ec42e54a}" />
    </Folder>
    <Property Name="Address" Id="{11b5d443-5fe7-0056-2359-8fcd6cf128bf}" FolderPath="Core\">
      <Declaration><![CDATA[PROPERTY PUBLIC Address : PVOID]]></Declaration>
      <Get Name="Get" Id="{3fa160e1-9ec0-0463-1c89-20301bb70181}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Address := ADR(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ClearReference" Id="{dc77f4f3-d280-00d4-1c5e-9f260bfe5259}" FolderPath="Core\">
      <Declaration><![CDATA[METHOD PUBLIC ClearReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= localData;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clone" Id="{3a2df433-fc4b-001f-0618-3ff513a250f8}" FolderPath="Customize\">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Datatype
VAR
    pClone : POINTER TO _TcVnPoint2_DINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pClone := __NEW(_TcVnPoint2_DINT);
Clone := pClone^;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{a98107e3-a870-0475-293d-f3aaf8e631a8}" FolderPath="Customize\Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	//InitialValue : <type>; // if possible, not all values can be initialized
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[//localData := InitialValue; // if possible, not all values can be initialized
SetBaseDatatypeReference();
AddBaseDatatype(aliasBaseDatatype);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Identifier" Id="{54c12dac-4863-00e3-3bc3-0cbe8942c398}" FolderPath="Customize\">
      <Declaration><![CDATA[PROPERTY PUBLIC Identifier : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{bcb300d4-40e1-0789-363a-4b8c800e84f1}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Identifier := 'TcVnPoint2_DINT';]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="MakeReferenceTo" Id="{7444f70f-7c4e-0b38-3812-c5678b13730b}" FolderPath="Customize\">
      <Declaration><![CDATA[METHOD PUBLIC MakeReferenceTo
VAR_INPUT
	ReferenceTarget : REFERENCE TO TcVnPoint2_DINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= ReferenceTarget;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetBaseDatatypeReference" Id="{09bed6dd-6297-0e32-0d8b-80358994d4c2}" FolderPath="Core\Protected\">
      <Declaration><![CDATA[METHOD PROTECTED SetBaseDatatypeReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[aliasBaseDatatype.MakeReferenceTo(activeData);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{69e36811-fed4-0e6d-3a78-e2939ea26b1f}" FolderPath="Core\">
      <Declaration><![CDATA[PROPERTY PUBLIC Size : UDINT]]></Declaration>
      <Get Name="Get" Id="{696f4d77-1eca-0d4e-1a3c-a35cbd659b1d}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := SIZEOF(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="TryMakeReferenceTo" Id="{a6ef7be4-1252-0f15-3f5c-ec4f524125cd}" FolderPath="Customize\">
      <Declaration><![CDATA[METHOD TryMakeReferenceTo : BOOL
VAR_INPUT
	Target : I_Datatype;
END_VAR
VAR
	targetAsAlias : I_AliasDatatype;
	pTargetData : POINTER TO TcVnPoint2_DINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Target.TryResolveAsAliasDatatype(targetAsAlias) THEN
	RETURN;
END_IF

IF targetAsAlias.Identifier <> Identifier THEN
	RETURN;
END_IF

pTargetData := Target.Address;
activeData REF= pTargetData^;
SetBaseDatatypeReference();
TryMakeReferenceTo := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Value" Id="{56927f30-e00f-0790-188d-17b729f18624}" FolderPath="Customize\">
      <Declaration><![CDATA[PROPERTY PUBLIC Value : REFERENCE TO TcVnPoint2_DINT]]></Declaration>
      <Get Name="Get" Id="{0ead9655-2c0d-061b-14d3-d46f4c7d33f2}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Value REF= activeData;]]></ST>
        </Implementation>
      </Get>
    </Property>
  </POU>
</TcPlcObject>