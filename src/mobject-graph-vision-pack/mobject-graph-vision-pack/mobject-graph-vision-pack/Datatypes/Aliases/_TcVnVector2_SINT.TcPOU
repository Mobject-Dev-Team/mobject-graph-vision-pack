<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="_TcVnVector2_SINT" Id="{e4847272-e7db-0757-0c9f-e6c37e250ed7}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK _TcVnVector2_SINT EXTENDS AliasDatatypeBase
VAR
	localData : TcVnVector2_SINT;
	activeData : REFERENCE TO TcVnVector2_SINT REF= localData;
	aliasBaseDatatype : _Array0to1OfSINT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Core" Id="{cfb7336b-b604-0cee-20ba-9376b9b1ef86}">
      <Folder Name="Protected" Id="{77aeef74-c0ad-034c-2cbb-9ebcd00b2ef5}" />
    </Folder>
    <Folder Name="Customize" Id="{39f437e1-7aa5-0ca3-37e8-936adc4d77a5}">
      <Folder Name="Constructor" Id="{4e747d1c-f96c-0430-1e77-1bc64cbd34e5}" />
    </Folder>
    <Property Name="Address" Id="{3b7890a8-0ecd-0413-1fa9-6508b857a482}" FolderPath="Core\">
      <Declaration><![CDATA[PROPERTY PUBLIC Address : PVOID]]></Declaration>
      <Get Name="Get" Id="{f583f115-7b81-025d-1148-ad4dc701c155}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Address := ADR(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ClearReference" Id="{22c3d05e-dcd4-0b75-3bf1-675c5a3ebd37}" FolderPath="Core\">
      <Declaration><![CDATA[METHOD PUBLIC ClearReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= localData;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clone" Id="{6923f5a6-740f-0ad0-20e5-ef5c90ef021b}" FolderPath="Customize\">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Datatype
VAR
    pClone : POINTER TO _TcVnVector2_SINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pClone := __NEW(_TcVnVector2_SINT);
Clone := pClone^;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{60fbfe5d-c8b9-05f1-2a4e-7a09c8b911a4}"
      FolderPath="Customize\Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	//InitialValue : <type>; // if possible, not all values can be initialized
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[//localData := InitialValue; // if possible, not all values can be initialized
SetBaseDatatypeReference();
AddBaseDatatype(aliasBaseDatatype);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Identifier" Id="{5a258871-f2f6-0cf7-1acb-8986ace2e902}" FolderPath="Customize\">
      <Declaration><![CDATA[PROPERTY PUBLIC Identifier : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{212df504-c277-0626-2b52-811eb3b66599}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Identifier := 'TcVnVector2_SINT';]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="MakeReferenceTo" Id="{2a49ca8d-3ae4-06c7-2de4-77c2ca0c61b2}"
      FolderPath="Customize\">
      <Declaration><![CDATA[METHOD PUBLIC MakeReferenceTo
VAR_INPUT
	ReferenceTarget : REFERENCE TO TcVnVector2_SINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= ReferenceTarget;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetBaseDatatypeReference" Id="{9484c187-18d7-0cff-11fb-7031d2708020}"
      FolderPath="Core\Protected\">
      <Declaration><![CDATA[METHOD PROTECTED SetBaseDatatypeReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[aliasBaseDatatype.MakeReferenceTo(activeData);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{8d0cae35-e5cc-0ad2-1964-4edb8fe647fa}" FolderPath="Core\">
      <Declaration><![CDATA[PROPERTY PUBLIC Size : UDINT]]></Declaration>
      <Get Name="Get" Id="{1dae8786-4691-0933-03af-0f8fdc5f1200}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := SIZEOF(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="TryMakeReferenceTo" Id="{0a7e0600-6a72-06c2-14c7-e97b22091251}"
      FolderPath="Customize\">
      <Declaration><![CDATA[METHOD TryMakeReferenceTo : BOOL
VAR_INPUT
	Target : I_Datatype;
END_VAR
VAR
	pTargetData : POINTER TO TcVnVector2_SINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT IsEquivalentTo(Target) THEN
	RETURN;
END_IF

pTargetData := Target.Address;
activeData REF= pTargetData^;
SetBaseDatatypeReference();
TryMakeReferenceTo := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Value" Id="{dcedae91-060b-0b9a-162d-b2cb8648edde}" FolderPath="Customize\">
      <Declaration><![CDATA[PROPERTY PUBLIC Value : REFERENCE TO TcVnVector2_SINT]]></Declaration>
      <Get Name="Get" Id="{02e6cc69-8d8c-0158-186a-54dfffa07818}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Value REF= activeData;]]></ST>
        </Implementation>
      </Get>
    </Property>
  </POU>
</TcPlcObject>