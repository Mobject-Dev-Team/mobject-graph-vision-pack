<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="_ETcVnPixelEncoding" Id="{6c8cd06f-3019-44c4-93c7-3ae1434aef9f}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK _ETcVnPixelEncoding EXTENDS EnumDatatypeBase
VAR
	localData : ETcVnPixelEncoding;
	activeData : REFERENCE TO ETcVnPixelEncoding;
	enumBaseDatatype : _BYTE(localData);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{c8e8eddf-89fb-4583-9083-c17631bf99dc}" />
    <Folder Name="Private" Id="{e8210ae7-9a7b-4dc4-b76d-ffe5c1e2276f}" />
    <Folder Name="Protected" Id="{d0349e2b-dc79-4906-bfd2-e5c863064813}" />
    <Method Name="AddLocalEnumeration" Id="{f33ec11f-ec91-44e7-9a3a-bd8f31c6a4ca}" FolderPath="Private\">
      <Declaration><![CDATA[METHOD PRIVATE AddLocalEnumeration
VAR_INPUT
	Enumeration : T_MAXSTRING;
	Value : ETcVnPixelEncoding;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddEnumeration(Enumeration, Value);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Address" Id="{02bb4169-1ee0-4ce3-b331-3bc8f5b688fe}">
      <Declaration><![CDATA[PROPERTY PUBLIC Address : PVOID]]></Declaration>
      <Get Name="Get" Id="{03784653-d415-487c-912a-7f9ec249465b}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Address := ADR(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ClearReference" Id="{00a985dc-a86d-4460-bc67-9508d68e7cd4}">
      <Declaration><![CDATA[METHOD PUBLIC ClearReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= localData;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clone" Id="{a910d5a1-8c7c-4aae-b123-2f5cd4d9c0b0}">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Datatype
VAR
    pClone : POINTER TO _ETcVnPixelEncoding;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pClone := __NEW(_ETcVnPixelEncoding(InitialValue := Value));
Clone := pClone^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{eac57cef-b529-423d-9df8-ea5dd4a392a5}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	InitialValue : ETcVnPixelEncoding;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[localData := InitialValue;
AddBaseDatatype(enumBaseDatatype);
ClearReference();

AddLocalEnumeration('TCVN_PE_NONE', ETcVnPixelEncoding.TCVN_PE_NONE);
AddLocalEnumeration('TCVN_PE_BAYER_GR', ETcVnPixelEncoding.TCVN_PE_BAYER_GR);
AddLocalEnumeration('TCVN_PE_BAYER_RG', ETcVnPixelEncoding.TCVN_PE_BAYER_RG);
AddLocalEnumeration('TCVN_PE_BAYER_GB', ETcVnPixelEncoding.TCVN_PE_BAYER_GB);
AddLocalEnumeration('TCVN_PE_BAYER_BG', ETcVnPixelEncoding.TCVN_PE_BAYER_BG);
AddLocalEnumeration('TCVN_PE_YUV_411_UYYVYY', ETcVnPixelEncoding.TCVN_PE_YUV_411_UYYVYY);
AddLocalEnumeration('TCVN_PE_YUV_422_UYVY', ETcVnPixelEncoding.TCVN_PE_YUV_422_UYVY);
AddLocalEnumeration('TCVN_PE_YUV_422_YUYV', ETcVnPixelEncoding.TCVN_PE_YUV_422_YUYV);
AddLocalEnumeration('TCVN_PE_YCBCR_411_CBYYCRYY', ETcVnPixelEncoding.TCVN_PE_YCBCR_411_CBYYCRYY);
AddLocalEnumeration('TCVN_PE_YCBCR_422_CBYCRY', ETcVnPixelEncoding.TCVN_PE_YCBCR_422_CBYCRY);
AddLocalEnumeration('TCVN_PE_YCBCR_422_YCBYCR', ETcVnPixelEncoding.TCVN_PE_YCBCR_422_YCBYCR);
]]></ST>
      </Implementation>
    </Method>
    <Property Name="Identifier" Id="{c68bc1b9-7569-4288-8438-d36bbbd0084c}">
      <Declaration><![CDATA[PROPERTY PUBLIC Identifier : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{2b780a1c-6780-4ba2-a717-1faf4fb6212b}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Identifier := 'ETcVnPixelEncoding';]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="IsEnumeratorValueEqual" Id="{36ff3683-1967-4f73-afb0-1d6cce9104bd}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD IsEnumeratorValueEqual : BOOL
VAR_INPUT
	Enumerator : I_KeyValueForwardEnumerator;
END_VAR
VAR
	storedValue : ETcVnPixelEncoding;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Enumerator.TryGet(storedValue) THEN
	RETURN;
END_IF

IsEnumeratorValueEqual := storedValue = activeData;]]></ST>
      </Implementation>
    </Method>
    <Method Name="MakeReferenceTo" Id="{e5af0996-d46d-410c-a803-ea3b50d7d055}">
      <Declaration><![CDATA[METHOD PUBLIC MakeReferenceTo
VAR_INPUT
	ReferenceTarget : REFERENCE TO ETcVnPixelEncoding;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= ReferenceTarget;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetBaseDatatypeReference" Id="{5dbf0ef7-805c-4296-85ab-f3020aea2118}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD PROTECTED SetBaseDatatypeReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[enumBaseDatatype.MakeReferenceTo(activeData);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{128e7c3b-60b2-4545-9b2d-82b89d89cc75}">
      <Declaration><![CDATA[PROPERTY PUBLIC Size : UDINT]]></Declaration>
      <Get Name="Get" Id="{365cb414-1338-42f5-83cf-f49096e06194}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := SIZEOF(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="TryMakeReferenceTo" Id="{b169ec70-5f01-4344-ad6c-b80d4cf861e9}">
      <Declaration><![CDATA[METHOD TryMakeReferenceTo : BOOL
VAR_INPUT
	Target : I_Datatype;
END_VAR
VAR
	targetAsEnum : I_EnumDatatype;
	pTargetData : POINTER TO ETcVnPixelEncoding;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Target.TryResolveAsEnumDatatype(targetAsEnum) THEN
	RETURN;
END_IF

IF targetAsEnum.Identifier <> Identifier THEN
	RETURN;
END_IF

pTargetData := Target.Address;
activeData REF= pTargetData^;
SetBaseDatatypeReference();
TryMakeReferenceTo := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Value" Id="{d44ae1cd-44de-4169-bd42-f82336da2541}">
      <Declaration><![CDATA[PROPERTY PUBLIC Value : ETcVnPixelEncoding]]></Declaration>
      <Get Name="Get" Id="{498beab1-5133-4351-aed2-98b0bff89702}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Value := activeData;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{9aed7ede-95a8-4338-8497-0a323fd2cb7f}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[activeData := Value;]]></ST>
        </Implementation>
      </Set>
    </Property>
  </POU>
</TcPlcObject>