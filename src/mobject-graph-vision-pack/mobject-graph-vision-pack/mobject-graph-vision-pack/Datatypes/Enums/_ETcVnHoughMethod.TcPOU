<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="_ETcVnHoughMethod" Id="{8e8e81ba-7bc2-0eb0-0aa6-b932849bfacf}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK _ETcVnHoughMethod EXTENDS EnumDatatypeBase
VAR
	localData : ETcVnHoughMethod;
	activeData : REFERENCE TO ETcVnHoughMethod;
	enumBaseDatatype : _DINT(localData);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{825a3143-73ff-0ac0-1490-f66c3f30edf0}" />
    <Folder Name="Private" Id="{2d7bfa7f-af78-0d27-2806-91775ddc4d78}" />
    <Folder Name="Protected" Id="{9b798fd3-90ae-05b0-365e-a1b98ad5af53}" />
    <Method Name="AddLocalEnumeration" Id="{d594f1db-523a-018c-35d2-fa9c98b06a13}" FolderPath="Private\">
      <Declaration><![CDATA[METHOD PRIVATE AddLocalEnumeration
VAR_INPUT
	Enumeration : T_MAXSTRING;
	Value : ETcVnHoughMethod;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddEnumeration(Enumeration, Value);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Address" Id="{3bf72501-bca5-08db-1472-f02db18d984c}">
      <Declaration><![CDATA[PROPERTY PUBLIC Address : PVOID]]></Declaration>
      <Get Name="Get" Id="{c469a997-4aa4-0b77-35cb-7e927fcfdc53}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Address := ADR(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ClearReference" Id="{cc77b2af-f324-0c11-0e11-9c0044b817eb}">
      <Declaration><![CDATA[METHOD PUBLIC ClearReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= localData;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clone" Id="{99b9c5a2-4592-00ba-38be-70f77148bf5b}">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Datatype
VAR
    pClone : POINTER TO _ETcVnHoughMethod;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pClone := __NEW(_ETcVnHoughMethod(InitialValue := Value));
Clone := pClone^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{85b8c148-50be-0f3c-04f1-9ec00b42c47f}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	InitialValue : ETcVnHoughMethod;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[localData := InitialValue;
AddBaseDatatype(enumBaseDatatype);
ClearReference();

AddLocalEnumeration('TCVN_HM_STANDARD', ETcVnHoughMethod.TCVN_HM_STANDARD);
AddLocalEnumeration('TCVN_HM_PROBABILISTIC', ETcVnHoughMethod.TCVN_HM_PROBABILISTIC);
AddLocalEnumeration('TCVN_HM_MULTI_SCALE', ETcVnHoughMethod.TCVN_HM_MULTI_SCALE);
AddLocalEnumeration('TCVN_HM_GRADIENT', ETcVnHoughMethod.TCVN_HM_GRADIENT);
AddLocalEnumeration('TCVN_HM_GRADIENT_ALT', ETcVnHoughMethod.TCVN_HM_GRADIENT_ALT);
]]></ST>
      </Implementation>
    </Method>
    <Property Name="Identifier" Id="{ef6a9525-e29a-0146-3570-b249750796a0}">
      <Declaration><![CDATA[PROPERTY PUBLIC Identifier : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{4995b785-da1d-0562-2a96-340aa0c394cf}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Identifier := 'ETcVnHoughMethod';]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="IsEnumeratorValueEqual" Id="{0ff8d33d-0455-07cd-2d8b-48bbe6103a14}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD IsEnumeratorValueEqual : BOOL
VAR_INPUT
	Enumerator : I_KeyValueForwardEnumerator;
END_VAR
VAR
	storedValue : ETcVnHoughMethod;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Enumerator.TryGet(storedValue) THEN
	RETURN;
END_IF

IsEnumeratorValueEqual := storedValue = activeData;]]></ST>
      </Implementation>
    </Method>
    <Method Name="MakeReferenceTo" Id="{61e4f5fd-7d7a-0ac8-0856-88fe62fb6b54}">
      <Declaration><![CDATA[METHOD PUBLIC MakeReferenceTo
VAR_INPUT
	ReferenceTarget : REFERENCE TO ETcVnHoughMethod;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= ReferenceTarget;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetBaseDatatypeReference" Id="{4466f6d5-3869-06cd-13c6-46cb809eb4c2}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD PROTECTED SetBaseDatatypeReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[enumBaseDatatype.MakeReferenceTo(activeData);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{aa7d1303-17ee-08da-3e5e-b6ccde068d20}">
      <Declaration><![CDATA[PROPERTY PUBLIC Size : UDINT]]></Declaration>
      <Get Name="Get" Id="{7e9e6cab-8613-0c04-06de-d9202120d4a8}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := SIZEOF(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="TryMakeReferenceTo" Id="{08816ede-525c-04d5-01e3-a256f8c9ca83}">
      <Declaration><![CDATA[METHOD TryMakeReferenceTo : BOOL
VAR_INPUT
	Target : I_Datatype;
END_VAR
VAR
	targetAsEnum : I_EnumDatatype;
	pTargetData : POINTER TO ETcVnHoughMethod;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Target.TryResolveAsEnumDatatype(targetAsEnum) THEN
	RETURN;
END_IF

IF targetAsEnum.Identifier <> Identifier THEN
	RETURN;
END_IF

pTargetData := Target.Address;
activeData REF= pTargetData^;
SetBaseDatatypeReference();
TryMakeReferenceTo := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Value" Id="{4d0326cc-7d48-044c-2c2a-505c12523b9f}">
      <Declaration><![CDATA[PROPERTY PUBLIC Value : ETcVnHoughMethod]]></Declaration>
      <Get Name="Get" Id="{376be4ff-3d15-09b4-3279-0d0e093ce550}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Value := activeData;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{f0803f8a-a67e-0d4c-0817-2ced4c3c41d7}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[activeData := Value;]]></ST>
        </Implementation>
      </Set>
    </Property>
  </POU>
</TcPlcObject>