<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="_ETcVnDiffusivityTypeKAZE" Id="{44374c61-c9bd-0cab-393d-297717105bca}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK _ETcVnDiffusivityTypeKAZE EXTENDS EnumDatatypeBase
VAR
	localData : ETcVnDiffusivityTypeKAZE;
	activeData : REFERENCE TO ETcVnDiffusivityTypeKAZE;
	enumBaseDatatype : _DINT(localData);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{4a35ecab-65c6-05f2-3990-6cd626664b1a}" />
    <Folder Name="Private" Id="{65a0f632-1e0a-0b4e-3781-5e53d2f06e3e}" />
    <Folder Name="Protected" Id="{3267a9e5-49f7-0333-3e46-0746b0a5155d}" />
    <Method Name="AddLocalEnumeration" Id="{193da0fa-b225-078e-1efa-5d446f7f2019}" FolderPath="Private\">
      <Declaration><![CDATA[METHOD PRIVATE AddLocalEnumeration
VAR_INPUT
	Enumeration : T_MAXSTRING;
	Value : ETcVnDiffusivityTypeKAZE;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddEnumeration(Enumeration, Value);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Address" Id="{af236b9c-31ce-0dfb-2971-3df47c86a59f}">
      <Declaration><![CDATA[PROPERTY PUBLIC Address : PVOID]]></Declaration>
      <Get Name="Get" Id="{83e1cdbe-fb19-0d36-1ddb-6d913bfff828}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Address := ADR(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ClearReference" Id="{85c0a452-680c-0d22-07c2-db04e15ccd05}">
      <Declaration><![CDATA[METHOD PUBLIC ClearReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= localData;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clone" Id="{e7a01f23-7495-08fd-3636-b93cedf8ea9f}">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Datatype
VAR
    pClone : POINTER TO _ETcVnDiffusivityTypeKAZE;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pClone := __NEW(_ETcVnDiffusivityTypeKAZE(InitialValue := Value));
Clone := pClone^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{b870753f-b0e0-0c96-0f16-2b9630490119}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	InitialValue : ETcVnDiffusivityTypeKAZE;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[localData := InitialValue;
AddBaseDatatype(enumBaseDatatype);
ClearReference();

AddLocalEnumeration('TCVN_DT1_KAZE_PM_G1', ETcVnDiffusivityTypeKAZE.TCVN_DT1_KAZE_PM_G1);
AddLocalEnumeration('TCVN_DT1_KAZE_PM_G2', ETcVnDiffusivityTypeKAZE.TCVN_DT1_KAZE_PM_G2);
AddLocalEnumeration('TCVN_DT1_KAZE_WEICKERT', ETcVnDiffusivityTypeKAZE.TCVN_DT1_KAZE_WEICKERT);
AddLocalEnumeration('TCVN_DT1_KAZE_CHARBONNIER', ETcVnDiffusivityTypeKAZE.TCVN_DT1_KAZE_CHARBONNIER);
]]></ST>
      </Implementation>
    </Method>
    <Property Name="Identifier" Id="{d9949398-e8f3-035c-240e-a2d0437df2b9}">
      <Declaration><![CDATA[PROPERTY PUBLIC Identifier : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{69e1f71d-a0de-0328-12ed-8735f368a6c2}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Identifier := 'ETcVnDiffusivityTypeKAZE';]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="IsEnumeratorValueEqual" Id="{36bbac34-d46f-0c38-0478-81c0a8dab38a}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD IsEnumeratorValueEqual : BOOL
VAR_INPUT
	Enumerator : I_KeyValueForwardEnumerator;
END_VAR
VAR
	storedValue : ETcVnDiffusivityTypeKAZE;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Enumerator.TryGet(storedValue) THEN
	RETURN;
END_IF

IsEnumeratorValueEqual := storedValue = activeData;]]></ST>
      </Implementation>
    </Method>
    <Method Name="MakeReferenceTo" Id="{1f477ed0-ed9e-0078-0cd3-005b789e0181}">
      <Declaration><![CDATA[METHOD PUBLIC MakeReferenceTo
VAR_INPUT
	ReferenceTarget : REFERENCE TO ETcVnDiffusivityTypeKAZE;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= ReferenceTarget;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetBaseDatatypeReference" Id="{1984692c-c2f1-0457-20c0-6f44230758a0}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD PROTECTED SetBaseDatatypeReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[enumBaseDatatype.MakeReferenceTo(activeData);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{0913c83e-d742-0625-0d6e-2fb83cad93bb}">
      <Declaration><![CDATA[PROPERTY PUBLIC Size : UDINT]]></Declaration>
      <Get Name="Get" Id="{21a9d6b5-5f16-0568-209c-31fabf6f7aa4}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := SIZEOF(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="TryMakeReferenceTo" Id="{bc679ca3-2a8e-0a38-253e-b96540c54a4c}">
      <Declaration><![CDATA[METHOD TryMakeReferenceTo : BOOL
VAR_INPUT
	Target : I_Datatype;
END_VAR
VAR
	targetAsEnum : I_EnumDatatype;
	pTargetData : POINTER TO ETcVnDiffusivityTypeKAZE;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Target.TryResolveAsEnumDatatype(targetAsEnum) THEN
	RETURN;
END_IF

IF targetAsEnum.Identifier <> Identifier THEN
	RETURN;
END_IF

pTargetData := Target.Address;
activeData REF= pTargetData^;
SetBaseDatatypeReference();
TryMakeReferenceTo := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Value" Id="{3fb21544-a445-01b2-04d7-57657683f049}">
      <Declaration><![CDATA[PROPERTY PUBLIC Value : ETcVnDiffusivityTypeKAZE]]></Declaration>
      <Get Name="Get" Id="{fa3098d9-d771-06d1-277f-a4f2aa37df7a}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Value := activeData;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{c183e105-ed4f-0d98-317c-d3e21dcc3ca0}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[activeData := Value;]]></ST>
        </Implementation>
      </Set>
    </Property>
  </POU>
</TcPlcObject>