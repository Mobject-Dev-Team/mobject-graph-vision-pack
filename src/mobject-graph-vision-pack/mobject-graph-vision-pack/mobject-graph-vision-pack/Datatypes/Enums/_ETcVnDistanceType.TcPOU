<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="_ETcVnDistanceType" Id="{2e4ff358-7934-033a-1437-30de61b51c55}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK _ETcVnDistanceType EXTENDS EnumDatatypeBase
VAR
	localData : ETcVnDistanceType;
	activeData : REFERENCE TO ETcVnDistanceType;
	enumBaseDatatype : _DINT(localData);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{405fbe48-eaaa-0b80-1a38-433bbbfa0c52}" />
    <Folder Name="Private" Id="{f8f01058-915c-04ff-2bec-d8f9f2847444}" />
    <Folder Name="Protected" Id="{a10a2415-6be2-0048-3606-47191fefcfe6}" />
    <Method Name="AddLocalEnumeration" Id="{89227239-77c5-0940-03f5-fedeb7649da7}" FolderPath="Private\">
      <Declaration><![CDATA[METHOD PRIVATE AddLocalEnumeration
VAR_INPUT
	Enumeration : T_MAXSTRING;
	Value : ETcVnDistanceType;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddEnumeration(Enumeration, Value);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Address" Id="{baaabcd0-1861-05ea-33b6-dfd25c7dddfe}">
      <Declaration><![CDATA[PROPERTY PUBLIC Address : PVOID]]></Declaration>
      <Get Name="Get" Id="{690a2207-073d-0c31-0a3b-92b5c3ab23a7}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Address := ADR(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ClearReference" Id="{e3d03059-2936-08a7-2302-47e663b3e6a7}">
      <Declaration><![CDATA[METHOD PUBLIC ClearReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= localData;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clone" Id="{21f09ad7-97e0-08a3-39aa-17f097455468}">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Datatype
VAR
    pClone : POINTER TO _ETcVnDistanceType;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pClone := __NEW(_ETcVnDistanceType(InitialValue := Value));
Clone := pClone^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{555cd26e-0b45-00ee-0938-5d14bc15af77}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	InitialValue : ETcVnDistanceType;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[localData := InitialValue;
AddBaseDatatype(enumBaseDatatype);
ClearReference();

AddLocalEnumeration('TCVN_DT_USER', ETcVnDistanceType.TCVN_DT_USER);
AddLocalEnumeration('TCVN_DT_L1', ETcVnDistanceType.TCVN_DT_L1);
AddLocalEnumeration('TCVN_DT_L2', ETcVnDistanceType.TCVN_DT_L2);
AddLocalEnumeration('TCVN_DT_C', ETcVnDistanceType.TCVN_DT_C);
AddLocalEnumeration('TCVN_DT_L12', ETcVnDistanceType.TCVN_DT_L12);
AddLocalEnumeration('TCVN_DT_FAIR', ETcVnDistanceType.TCVN_DT_FAIR);
AddLocalEnumeration('TCVN_DT_WELSCH', ETcVnDistanceType.TCVN_DT_WELSCH);
AddLocalEnumeration('TCVN_DT_HUBER ', ETcVnDistanceType.TCVN_DT_HUBER);
]]></ST>
      </Implementation>
    </Method>
    <Property Name="Identifier" Id="{c0c0b2f9-e0c3-07d1-39b7-943db26a0193}">
      <Declaration><![CDATA[PROPERTY PUBLIC Identifier : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{f9544924-0886-0499-3d05-475e63e9db68}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Identifier := 'ETcVnDistanceType';]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="IsEnumeratorValueEqual" Id="{c74fb5eb-5d6d-0b78-1134-99ad7e435d97}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD IsEnumeratorValueEqual : BOOL
VAR_INPUT
	Enumerator : I_KeyValueForwardEnumerator;
END_VAR
VAR
	storedValue : ETcVnDistanceType;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Enumerator.TryGet(storedValue) THEN
	RETURN;
END_IF

IsEnumeratorValueEqual := storedValue = activeData;]]></ST>
      </Implementation>
    </Method>
    <Method Name="MakeReferenceTo" Id="{a9f7882c-a738-01b0-33bd-d59082fae296}">
      <Declaration><![CDATA[METHOD PUBLIC MakeReferenceTo
VAR_INPUT
	ReferenceTarget : REFERENCE TO ETcVnDistanceType;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= ReferenceTarget;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetBaseDatatypeReference" Id="{96a4aece-e9b5-0c28-3030-dbc9e265e237}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD PROTECTED SetBaseDatatypeReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[enumBaseDatatype.MakeReferenceTo(activeData);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{cab40062-6d94-00a9-09a6-4fd81473971c}">
      <Declaration><![CDATA[PROPERTY PUBLIC Size : UDINT]]></Declaration>
      <Get Name="Get" Id="{389f0a8e-5705-02d9-13f8-08dbf1c651bb}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := SIZEOF(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="TryMakeReferenceTo" Id="{fe86513d-1037-052d-3e0c-27e711c504b8}">
      <Declaration><![CDATA[METHOD TryMakeReferenceTo : BOOL
VAR_INPUT
	Target : I_Datatype;
END_VAR
VAR
	targetAsEnum : I_EnumDatatype;
	pTargetData : POINTER TO ETcVnDistanceType;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Target.TryResolveAsEnumDatatype(targetAsEnum) THEN
	RETURN;
END_IF

IF targetAsEnum.Identifier <> Identifier THEN
	RETURN;
END_IF

pTargetData := Target.Address;
activeData REF= pTargetData^;
SetBaseDatatypeReference();
TryMakeReferenceTo := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Value" Id="{7c66437f-87e3-0279-3505-cda71ecea50d}">
      <Declaration><![CDATA[PROPERTY PUBLIC Value : ETcVnDistanceType]]></Declaration>
      <Get Name="Get" Id="{2ce33f8b-ac38-0c64-2576-95c3b9f170d3}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Value := activeData;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{81d4ec10-a201-0beb-16f5-b959f888e93b}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[activeData := Value;]]></ST>
        </Implementation>
      </Set>
    </Property>
  </POU>
</TcPlcObject>