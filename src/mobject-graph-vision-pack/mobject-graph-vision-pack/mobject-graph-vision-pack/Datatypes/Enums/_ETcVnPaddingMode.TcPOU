<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="_ETcVnPaddingMode" Id="{bbe1ad36-8b57-02bc-1621-e2b0acd71e20}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK _ETcVnPaddingMode EXTENDS EnumDatatypeBase
VAR
	localData : ETcVnPaddingMode;
	activeData : REFERENCE TO ETcVnPaddingMode;
	enumBaseDatatype : _DINT(localData);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Core" Id="{2ed99e2a-91da-000f-24e9-073793b5fe88}">
      <Folder Name="Protected" Id="{cc33437f-1d56-0606-17f3-a94731d6d370}" />
    </Folder>
    <Folder Name="Customize" Id="{27ab5f09-2d67-0c47-2256-a0b528669063}">
      <Folder Name="Constructor" Id="{af6f6a35-0601-0b9e-3974-c3a6e31844d6}" />
      <Folder Name="Private" Id="{c6df4e62-1d61-0986-0b5a-319dc79c6aec}" />
      <Folder Name="Protected" Id="{334c2d1d-29e0-02e2-3643-feb7b45dd40c}" />
    </Folder>
    <Method Name="AddLocalEnumeration" Id="{634c9caa-4e8d-083d-2b40-c030df59ea1c}"
      FolderPath="Customize\Private\">
      <Declaration><![CDATA[METHOD PRIVATE AddLocalEnumeration
VAR_INPUT
	Enumeration : T_MAXSTRING;
	Value : ETcVnPaddingMode;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddEnumeration(Enumeration, Value);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Address" Id="{8078aad7-f0c5-057f-018a-9cb870b16fb8}" FolderPath="Core\">
      <Declaration><![CDATA[PROPERTY PUBLIC Address : PVOID]]></Declaration>
      <Get Name="Get" Id="{b01e1835-da28-02e9-2d95-e7ae04ed30de}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Address := ADR(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ClearReference" Id="{6813acf9-6457-0a19-2f67-5c03d50086f3}" FolderPath="Core\">
      <Declaration><![CDATA[METHOD PUBLIC ClearReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= localData;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clone" Id="{4fa31f1e-601a-0f57-243d-9b3f6fc53ea0}" FolderPath="Customize\">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Datatype
VAR
    pClone : POINTER TO _ETcVnPaddingMode;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pClone := __NEW(_ETcVnPaddingMode(InitialValue := Value));
Clone := pClone^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{3ed9770d-9286-0795-0cce-1ae8a7929af7}"
      FolderPath="Customize\Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	InitialValue : ETcVnPaddingMode;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[localData := InitialValue;
AddBaseDatatype(enumBaseDatatype);
ClearReference();

AddLocalEnumeration('TCVN_PM_NONE', ETcVnPaddingMode.TCVN_PM_NONE);
AddLocalEnumeration('TCVN_PM_CROP_CENTER', ETcVnPaddingMode.TCVN_PM_CROP_CENTER);
AddLocalEnumeration('TCVN_PM_LETTERBOX', ETcVnPaddingMode.TCVN_PM_LETTERBOX);
]]></ST>
      </Implementation>
    </Method>
    <Property Name="Identifier" Id="{6366a64e-0e08-0a97-2e7e-7d3db35a073a}" FolderPath="Customize\">
      <Declaration><![CDATA[PROPERTY PUBLIC Identifier : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{dbfadd98-6e16-040f-1614-64bee2042a1c}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Identifier := 'ETcVnPaddingMode';]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="IsEnumeratorValueEqual" Id="{332d08c5-555e-0c39-3040-96311f7b944c}"
      FolderPath="Customize\Protected\">
      <Declaration><![CDATA[METHOD IsEnumeratorValueEqual : BOOL
VAR_INPUT
	Enumerator : I_KeyValueForwardEnumerator;
END_VAR
VAR
	storedValue : ETcVnPaddingMode;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Enumerator.TryGet(storedValue) THEN
	RETURN;
END_IF

IsEnumeratorValueEqual := storedValue = activeData;]]></ST>
      </Implementation>
    </Method>
    <Method Name="MakeReferenceTo" Id="{defff4a0-2b24-0342-35f8-75c5484c69cb}"
      FolderPath="Customize\">
      <Declaration><![CDATA[METHOD PUBLIC MakeReferenceTo
VAR_INPUT
	ReferenceTarget : REFERENCE TO ETcVnPaddingMode;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= ReferenceTarget;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetBaseDatatypeReference" Id="{4d99bf1a-ba32-0ef8-0d9f-88ddc4d2451f}"
      FolderPath="Core\Protected\">
      <Declaration><![CDATA[METHOD PROTECTED SetBaseDatatypeReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[enumBaseDatatype.MakeReferenceTo(activeData);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{81fab8b6-79a8-0742-1803-f014509f95cb}" FolderPath="Core\">
      <Declaration><![CDATA[PROPERTY PUBLIC Size : UDINT]]></Declaration>
      <Get Name="Get" Id="{93183db2-33b5-046a-0722-973cae55d6ce}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := SIZEOF(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="TryMakeReferenceTo" Id="{846ad209-dfc4-0303-30ac-3c483e6518eb}"
      FolderPath="Customize\">
      <Declaration><![CDATA[METHOD TryMakeReferenceTo : BOOL
VAR_INPUT
	Target : I_Datatype;
END_VAR
VAR
	pTargetData : POINTER TO ETcVnPaddingMode;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT IsEquivalentTo(Target) THEN
	RETURN;
END_IF

pTargetData := Target.Address;
activeData REF= pTargetData^;
SetBaseDatatypeReference();
TryMakeReferenceTo := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Value" Id="{3c8a1d12-8adb-065c-2b05-8456703512d1}" FolderPath="Customize\">
      <Declaration><![CDATA[PROPERTY PUBLIC Value : ETcVnPaddingMode]]></Declaration>
      <Get Name="Get" Id="{e7be3f0f-7fa0-0a22-2851-c6f307fc95e3}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Value := activeData;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{04771c5a-c636-0a02-131b-2ebe3333d8bf}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[activeData := Value;]]></ST>
        </Implementation>
      </Set>
    </Property>
  </POU>
</TcPlcObject>