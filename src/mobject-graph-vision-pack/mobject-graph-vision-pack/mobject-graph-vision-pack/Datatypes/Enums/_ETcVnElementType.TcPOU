<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="_ETcVnElementType" Id="{6a2d3efb-f8a4-0528-301c-9864143d5f76}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK _ETcVnElementType EXTENDS EnumDatatypeBase
VAR
	localData : ETcVnElementType;
	activeData : REFERENCE TO ETcVnElementType;
	enumBaseDatatype : _DINT(localData);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{c6639585-875d-0994-0693-a4a84f47564e}" />
    <Folder Name="Private" Id="{f1eb1c9c-a257-0a37-1a46-7ea815335f18}" />
    <Folder Name="Protected" Id="{af724463-ad43-0219-339a-8a3813f3e01a}" />
    <Method Name="AddLocalEnumeration" Id="{1d251c05-9caa-0d5b-224c-c77e4b15353b}" FolderPath="Private\">
      <Declaration><![CDATA[METHOD PRIVATE AddLocalEnumeration
VAR_INPUT
	Enumeration : T_MAXSTRING;
	Value : ETcVnElementType;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddEnumeration(Enumeration, Value);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Address" Id="{cf8db0c2-837c-03ca-18ba-dfaf60d71d07}">
      <Declaration><![CDATA[PROPERTY PUBLIC Address : PVOID]]></Declaration>
      <Get Name="Get" Id="{d6348cd0-ce78-00d6-18d3-2cba166e53f2}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Address := ADR(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ClearReference" Id="{2c1db5e8-92ca-001b-06e0-8b2a25ebd623}">
      <Declaration><![CDATA[METHOD PUBLIC ClearReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= localData;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clone" Id="{f37be3b4-ed20-0695-04eb-9d37d45f7f97}">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Datatype
VAR
    pClone : POINTER TO _ETcVnElementType;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pClone := __NEW(_ETcVnElementType(InitialValue := Value));
Clone := pClone^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{52d8a469-56a7-08ed-20ec-2cc70e3502d4}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	InitialValue : ETcVnElementType;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[localData := InitialValue;
AddBaseDatatype(enumBaseDatatype);
ClearReference();

AddLocalEnumeration('TCVN_ET_SAME_AS_SOURCE', ETcVnElementType.TCVN_ET_SAME_AS_SOURCE);
AddLocalEnumeration('TCVN_ET_USINT', ETcVnElementType.TCVN_ET_USINT);
AddLocalEnumeration('TCVN_ET_SINT', ETcVnElementType.TCVN_ET_SINT);
AddLocalEnumeration('TCVN_ET_UINT', ETcVnElementType.TCVN_ET_UINT);
AddLocalEnumeration('TCVN_ET_INT', ETcVnElementType.TCVN_ET_INT);
AddLocalEnumeration('TCVN_ET_DINT', ETcVnElementType.TCVN_ET_DINT);
AddLocalEnumeration('TCVN_ET_REAL', ETcVnElementType.TCVN_ET_REAL);
AddLocalEnumeration('TCVN_ET_LREAL', ETcVnElementType.TCVN_ET_LREAL);
]]></ST>
      </Implementation>
    </Method>
    <Property Name="Identifier" Id="{36872bcf-355e-0858-3d31-fc343a210a5b}">
      <Declaration><![CDATA[PROPERTY PUBLIC Identifier : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{d08ae839-28da-0ef9-154d-7260360a9631}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Identifier := 'ETcVnElementType';]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="IsEnumeratorValueEqual" Id="{99654950-0514-00d0-3c6c-1fbf9a68992c}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD IsEnumeratorValueEqual : BOOL
VAR_INPUT
	Enumerator : I_KeyValueForwardEnumerator;
END_VAR
VAR
	storedValue : ETcVnElementType;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Enumerator.TryGet(storedValue) THEN
	RETURN;
END_IF

IsEnumeratorValueEqual := storedValue = activeData;]]></ST>
      </Implementation>
    </Method>
    <Method Name="MakeReferenceTo" Id="{ec0613b9-10a2-0fe2-0311-7b4736bd7426}">
      <Declaration><![CDATA[METHOD PUBLIC MakeReferenceTo
VAR_INPUT
	ReferenceTarget : REFERENCE TO ETcVnElementType;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= ReferenceTarget;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetBaseDatatypeReference" Id="{1c274b4e-85e7-0318-11f6-445ee6e7dad0}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD PROTECTED SetBaseDatatypeReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[enumBaseDatatype.MakeReferenceTo(activeData);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{6a18f23a-85de-09f7-1bf0-f1b2f180d46f}">
      <Declaration><![CDATA[PROPERTY PUBLIC Size : UDINT]]></Declaration>
      <Get Name="Get" Id="{889b32f7-7804-0c3f-23a1-43288966b606}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := SIZEOF(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="TryMakeReferenceTo" Id="{a5f597e1-f3e0-0e5d-0ac6-4d3358061615}">
      <Declaration><![CDATA[METHOD TryMakeReferenceTo : BOOL
VAR_INPUT
	Target : I_Datatype;
END_VAR
VAR
	targetAsEnum : I_EnumDatatype;
	pTargetData : POINTER TO ETcVnElementType;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Target.TryResolveAsEnumDatatype(targetAsEnum) THEN
	RETURN;
END_IF

IF targetAsEnum.Identifier <> Identifier THEN
	RETURN;
END_IF

pTargetData := Target.Address;
activeData REF= pTargetData^;
SetBaseDatatypeReference();
TryMakeReferenceTo := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Value" Id="{e845fa0b-d9ba-063f-0807-07bb57e2f19b}">
      <Declaration><![CDATA[PROPERTY PUBLIC Value : ETcVnElementType]]></Declaration>
      <Get Name="Get" Id="{f23e0c73-7c2c-031b-3b71-535842abcd92}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Value := activeData;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{2eab2407-bccb-0e92-21ed-7591ccdc27e2}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[activeData := Value;]]></ST>
        </Implementation>
      </Set>
    </Property>
  </POU>
</TcPlcObject>