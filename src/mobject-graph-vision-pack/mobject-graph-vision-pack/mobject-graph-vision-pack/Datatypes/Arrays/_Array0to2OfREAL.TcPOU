<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="_Array0to2OfREAL" Id="{a391b679-688a-034f-2684-cda018a3fb76}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK _Array0to2OfREAL EXTENDS ArrayDatatypeBase
VAR CONSTANT
	lBound : DINT := 0;
	uBound : DINT := 2;
END_VAR
VAR
	localData : ARRAY [lBound..uBound] OF REAL;
	activeData : REFERENCE TO ARRAY [lBound..uBound] OF REAL REF= localData;
	elements : ARRAY [lBound..uBound] OF _REAL(0.0);
	baseType : _REAL(0.0);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Core " Id="{cd4ab39f-ff7f-0ca4-2277-7e245b6f1940}">
      <Folder Name="Constructor" Id="{17af39a3-04df-0fa5-3ccc-81a8829962c8}" />
      <Folder Name="Protected" Id="{a866a3e2-e2ee-0c24-228e-2b87de9431a1}" />
    </Folder>
    <Folder Name="Customize" Id="{3edc9cec-dd32-0b3e-2ce2-6478320b72f4}" />
    <Property Name="Address" Id="{4c12a039-70e0-04d1-3da6-ed33cd1ef3a2}" FolderPath="Core \">
      <Declaration><![CDATA[PROPERTY PUBLIC Address : PVOID]]></Declaration>
      <Get Name="Get" Id="{0ef85524-b157-0f61-2c36-9011ec67403a}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Address := ADR(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="BaseDatatype" Id="{f28d128b-3749-0a46-2f08-7e7d2765f45b}" FolderPath="Core \">
      <Declaration><![CDATA[PROPERTY PUBLIC BaseDatatype : I_Datatype]]></Declaration>
      <Get Name="Get" Id="{193ec1d1-3965-095c-205a-42529996d053}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[BaseDatatype := baseType;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ClearReference" Id="{3d629d6d-f767-0843-2f2c-b5f758d3c6df}" FolderPath="Core \">
      <Declaration><![CDATA[METHOD PUBLIC ClearReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= localData;
SetElementReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clone" Id="{592e5c32-d4eb-06dc-0b4e-b86651762cbb}" FolderPath="Customize\">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Datatype
VAR
    pClone : POINTER TO _Array0to2OfREAL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pClone := __NEW(_Array0to2OfREAL());
pClone^.Value := Value;
Clone := pClone^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{5f875766-40cd-0ff6-0cb6-7dfcca661619}" FolderPath="Core \Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[SetElementReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetElementAsDatatypeByIndex" Id="{d258d80c-4bf7-07a8-1b11-8dea6962dd5d}" FolderPath="Core \">
      <Declaration><![CDATA[METHOD PUBLIC GetElementAsDatatypeByIndex : I_Datatype
VAR_INPUT
	Index : DINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[GetElementAsDatatypeByIndex := elements[Index];]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetElementByIndex" Id="{0445fd29-2bf6-0083-2d26-752f43da36be}" FolderPath="Customize\">
      <Declaration><![CDATA[METHOD PUBLIC GetElementByIndex : REFERENCE TO _REAL;
VAR_INPUT
	Index : DINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[GetElementByIndex REF= elements[Index];]]></ST>
      </Implementation>
    </Method>
    <Property Name="LowerBound" Id="{94120eec-ecba-09a7-3058-b5e6f1e45a85}" FolderPath="Core \">
      <Declaration><![CDATA[PROPERTY PUBLIC LowerBound : DINT]]></Declaration>
      <Get Name="Get" Id="{4d12d5ab-137a-01ba-2db2-bd2e6f0dfc29}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[LowerBound := lBound;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="MakeReferenceTo" Id="{1fd8604b-329d-0071-12b8-02a14d5cbe1c}" FolderPath="Customize\">
      <Declaration><![CDATA[METHOD PUBLIC MakeReferenceTo
VAR_INPUT
	ReferenceTarget : REFERENCE TO ARRAY [lBound..uBound] OF REAL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= ReferenceTarget;
SetElementReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnSerializeArrayValues" Id="{a01c09b0-ed8c-02b7-12c8-10b8ad9f83e5}" FolderPath="Core \Protected\">
      <Declaration><![CDATA[METHOD PROTECTED OnSerializeArrayValues
VAR_INPUT
	Serializer : I_Serializer;
END_VAR
VAR
	i : DINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FOR i := lBound TO uBound DO
	elements[i].SerializeWith(Serializer);
END_FOR]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetElementReference" Id="{4d0f4e59-61ee-038b-375e-78f2ad664f65}" FolderPath="Core \Protected\">
      <Declaration><![CDATA[METHOD PROTECTED SetElementReference
VAR_INPUT
END_VAR
VAR
	i : DINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FOR i := lBound TO uBound DO
	elements[i].MakeReferenceTo(activeData[i]);
END_FOR]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{87e7c2f6-34f5-09e1-2818-a97447814656}" FolderPath="Core \">
      <Declaration><![CDATA[PROPERTY PUBLIC Size : UDINT]]></Declaration>
      <Get Name="Get" Id="{64c5ce93-9ca9-07f9-11ea-5c323512028f}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := SIZEOF(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="TryDeserializeArrayValues" Id="{fca0b6f5-ab70-047d-2021-4210c2420f8e}" FolderPath="Core \Protected\">
      <Declaration><![CDATA[METHOD PROTECTED TryDeserializeArrayValues : BOOL
VAR_INPUT
	Deserializer : I_Deserializer;
	Feedback : I_DeserializerFeedback;
END_VAR
VAR
	enumerator : I_DeserializerArrayForwardEnumerator;
	i : DINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[enumerator := Deserializer.GetArrayEnumerator();
i := lBound;

WHILE enumerator.MoveNext() AND i <= uBound DO
	
	IF NOT elements[i].TryDeserializeFrom(enumerator.Current, Feedback) THEN
		EXIT;
	END_IF
	i := i + 1;

END_WHILE
enumerator.Dispose();]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryMakeReferenceTo" Id="{e9260b53-a1ed-0c7e-36d4-89d6d78a43aa}" FolderPath="Customize\">
      <Declaration><![CDATA[METHOD TryMakeReferenceTo : BOOL
VAR_INPUT
	Target : I_Datatype;
END_VAR
VAR
	targetAsArray : I_ArrayDatatype;
	pTargetData : POINTER TO ARRAY [lBound..uBound] OF REAL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Target.TryResolveAsArrayDatatype(targetAsArray) THEN
	RETURN;
END_IF

IF NOT (targetAsArray.Identifier = Identifier) THEN
	RETURN;
END_IF

pTargetData := Target.Address;
activeData REF= pTargetData^;
SetElementReference();
TryMakeReferenceTo := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="UpperBound" Id="{4c718b4e-8c90-0064-086b-4c8f7c780f5a}" FolderPath="Core \">
      <Declaration><![CDATA[PROPERTY PUBLIC UpperBound : DINT]]></Declaration>
      <Get Name="Get" Id="{56a3ba65-0bf3-03d8-35a4-b353b2fb8af6}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[UpperBound := ubound;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Value" Id="{24eb7488-5809-0621-27a1-3c5c71f6f413}" FolderPath="Customize\">
      <Declaration><![CDATA[PROPERTY PUBLIC Value : REFERENCE TO ARRAY [lBound..uBound] OF REAL;]]></Declaration>
      <Get Name="Get" Id="{7a81c5ca-e7f0-0faf-095f-3941ed2a3e4d}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Value ref= activeData;]]></ST>
        </Implementation>
      </Get>
    </Property>
  </POU>
</TcPlcObject>