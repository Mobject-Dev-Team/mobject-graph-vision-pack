<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="_Array0to3OfSINT" Id="{872bbb7b-8a04-0a2b-0db3-20bc2659623d}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK _Array0to3OfSINT EXTENDS ArrayDatatypeBase
VAR CONSTANT
	lBound : DINT := 0;
	uBound : DINT := 3;
END_VAR
VAR
	localData : ARRAY [lBound..uBound] OF SINT;
	activeData : REFERENCE TO ARRAY [lBound..uBound] OF SINT REF= localData;
	elements : ARRAY [lBound..uBound] OF _SINT(0);
	baseType : _SINT(0);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Core " Id="{6bc0a223-42a9-0297-1abe-879de7ae9a86}">
      <Folder Name="Constructor" Id="{2a80def0-eb2c-0a53-2968-989ab5538022}" />
      <Folder Name="Protected" Id="{7440f325-43da-07b9-1daf-63ca90cb8f44}" />
    </Folder>
    <Folder Name="Customize" Id="{1449433a-50ba-0c1f-14d6-31e3878aaa81}" />
    <Property Name="Address" Id="{60c1b2e5-f813-0bc1-3d2d-5009a1ffc273}" FolderPath="Core \">
      <Declaration><![CDATA[PROPERTY PUBLIC Address : PVOID]]></Declaration>
      <Get Name="Get" Id="{a4f2986a-ec7d-0a80-1093-72736584bd99}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Address := ADR(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="BaseDatatype" Id="{cb519eb0-e8a8-09c3-3547-3e0a783cd922}" FolderPath="Core \">
      <Declaration><![CDATA[PROPERTY PUBLIC BaseDatatype : I_Datatype]]></Declaration>
      <Get Name="Get" Id="{34c8e575-1926-028e-1bf3-997cc778f729}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[BaseDatatype := baseType;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ClearReference" Id="{f7d9c9fa-e12f-0cfe-1e24-28501a148e46}" FolderPath="Core \">
      <Declaration><![CDATA[METHOD PUBLIC ClearReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= localData;
SetElementReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clone" Id="{dc19fcdb-ca23-076c-14d0-c54bcc61a6f0}" FolderPath="Customize\">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Datatype
VAR
    pClone : POINTER TO _Array0to3OfSINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pClone := __NEW(_Array0to3OfSINT());
pClone^.Value := Value;
Clone := pClone^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{2f8f6ff3-c273-09ed-2baa-ac57885b49f6}" FolderPath="Core \Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[SetElementReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetElementAsDatatypeByIndex" Id="{94eb4798-9bc4-0c8a-2748-4c95dfcaee52}" FolderPath="Core \">
      <Declaration><![CDATA[METHOD PUBLIC GetElementAsDatatypeByIndex : I_Datatype
VAR_INPUT
	Index : DINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[GetElementAsDatatypeByIndex := elements[Index];]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetElementByIndex" Id="{86e1955c-f49b-0c07-1cc1-7f12d6717c1f}" FolderPath="Customize\">
      <Declaration><![CDATA[METHOD PUBLIC GetElementByIndex : REFERENCE TO _SINT;
VAR_INPUT
	Index : DINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[GetElementByIndex REF= elements[Index];]]></ST>
      </Implementation>
    </Method>
    <Property Name="LowerBound" Id="{01dd9898-33ee-0f77-3fdc-54b5ffb3d699}" FolderPath="Core \">
      <Declaration><![CDATA[PROPERTY PUBLIC LowerBound : DINT]]></Declaration>
      <Get Name="Get" Id="{a9ff3ece-bafd-0e1f-2975-4c3bfbc0a562}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[LowerBound := lBound;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="MakeReferenceTo" Id="{4272f35b-3770-058e-3fdc-0c4f09105710}" FolderPath="Customize\">
      <Declaration><![CDATA[METHOD PUBLIC MakeReferenceTo
VAR_INPUT
	ReferenceTarget : REFERENCE TO ARRAY [lBound..uBound] OF SINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= ReferenceTarget;
SetElementReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnSerializeArrayValues" Id="{80439976-8abf-050d-1bc1-15fb1178d743}" FolderPath="Core \Protected\">
      <Declaration><![CDATA[METHOD PROTECTED OnSerializeArrayValues
VAR_INPUT
	Serializer : I_Serializer;
END_VAR
VAR
	i : DINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FOR i := lBound TO uBound DO
	elements[i].SerializeWith(Serializer);
END_FOR]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetElementReference" Id="{dcf01cce-650a-0c87-12df-5ecfea09267b}" FolderPath="Core \Protected\">
      <Declaration><![CDATA[METHOD PROTECTED SetElementReference
VAR_INPUT
END_VAR
VAR
	i : DINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FOR i := lBound TO uBound DO
	elements[i].MakeReferenceTo(activeData[i]);
END_FOR]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{3fbc2cb7-ba80-08db-01e6-4ac39d4bbd43}" FolderPath="Core \">
      <Declaration><![CDATA[PROPERTY PUBLIC Size : UDINT]]></Declaration>
      <Get Name="Get" Id="{6b71924a-a787-0be1-38f4-2cbf4dcce9f3}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := SIZEOF(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="TryDeserializeArrayValues" Id="{172a5e37-85e8-08b8-062c-29f6eeee1c58}" FolderPath="Core \Protected\">
      <Declaration><![CDATA[METHOD PROTECTED TryDeserializeArrayValues : BOOL
VAR_INPUT
	Deserializer : I_Deserializer;
	Feedback : I_DeserializerFeedback;
END_VAR
VAR
	enumerator : I_DeserializerArrayForwardEnumerator;
	i : DINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[enumerator := Deserializer.GetArrayEnumerator();
i := lBound;

WHILE enumerator.MoveNext() AND i <= uBound DO
	
	IF NOT elements[i].TryDeserializeFrom(enumerator.Current, Feedback) THEN
		EXIT;
	END_IF
	i := i + 1;

END_WHILE
enumerator.Dispose();]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryMakeReferenceTo" Id="{74cf5e69-17b9-0546-223d-45c29df781ed}" FolderPath="Customize\">
      <Declaration><![CDATA[METHOD TryMakeReferenceTo : BOOL
VAR_INPUT
	Target : I_Datatype;
END_VAR
VAR
	targetAsArray : I_ArrayDatatype;
	pTargetData : POINTER TO ARRAY [lBound..uBound] OF SINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Target.TryResolveAsArrayDatatype(targetAsArray) THEN
	RETURN;
END_IF

IF NOT (targetAsArray.Identifier = Identifier) THEN
	RETURN;
END_IF

pTargetData := Target.Address;
activeData REF= pTargetData^;
SetElementReference();
TryMakeReferenceTo := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="UpperBound" Id="{5428459f-c291-0e22-1070-dda240f5ef49}" FolderPath="Core \">
      <Declaration><![CDATA[PROPERTY PUBLIC UpperBound : DINT]]></Declaration>
      <Get Name="Get" Id="{7d121cd2-5e35-053e-28da-0bf75e0621a1}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[UpperBound := ubound;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Value" Id="{652e022f-b9e1-0ff6-1e10-5f110fd1c75c}" FolderPath="Customize\">
      <Declaration><![CDATA[PROPERTY PUBLIC Value : REFERENCE TO ARRAY [lBound..uBound] OF SINT;]]></Declaration>
      <Get Name="Get" Id="{5a946149-54c9-01a0-3a92-58c115d6f499}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Value ref= activeData;]]></ST>
        </Implementation>
      </Get>
    </Property>
  </POU>
</TcPlcObject>