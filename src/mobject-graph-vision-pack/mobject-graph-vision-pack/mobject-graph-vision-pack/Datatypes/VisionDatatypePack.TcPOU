<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="VisionDatatypePack" Id="{41aa96c4-4e58-0595-14c8-fb1325f46fff}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK VisionDatatypePack IMPLEMENTS I_DatatypePack
VAR
    // aliases
    _gVCP_REGISTER_ADDRESS : _GVCP_REGISTER_ADDRESS;
    _tcVnPoint : _TcVnPoint;
    _tcVnPoint2_DINT : _TcVnPoint2_DINT;
    _tcVnPoint2_LREAL : _TcVnPoint2_LREAL;
    _tcVnPoint2_REAL : _TcVnPoint2_REAL;
    _tcVnPoint3_LREAL : _TcVnPoint3_LREAL;
    _tcVnPoint3_REAL : _TcVnPoint3_REAL;
    _tcVnRectangle : _TcVnRectangle;
  
    _tcVnArray10_ITcVnImage : _TcVnArray10_ITcVnImage;
    _tcVnArray3_Point2_REAL : _TcVnArray3_Point2_REAL;
    //_tcVnArray33_UDINT : _TcVnArray33_UDINT;
    _tcVnArray4_LREAL : _TcVnArray4_LREAL;
    _tcVnArray4_Point2_REAL : _TcVnArray4_Point2_REAL;
    _tcVnArray7_LREAL : _TcVnArray7_LREAL;
    _tcVnArray8_LREAL : _TcVnArray8_LREAL;
//    _tcVnMatrix2x3_LREAL : _TcVnMatrix2x3_LREAL;
//    _tcVnMatrix3x3_LREAL : _TcVnMatrix3x3_LREAL;
    _tcVnVector2_DINT : _TcVnVector2_DINT;
    _tcVnVector2_INT : _TcVnVector2_INT;
    _tcVnVector2_LREAL : _TcVnVector2_LREAL;
    _tcVnVector2_REAL : _TcVnVector2_REAL;
    _tcVnVector2_SINT : _TcVnVector2_SINT;
    _tcVnVector2_UINT : _TcVnVector2_UINT;
    _tcVnVector2_USINT : _TcVnVector2_USINT;
    _tcVnVector3_INT : _TcVnVector3_INT;
    _tcVnVector3_LREAL : _TcVnVector3_LREAL;
    _tcVnVector3_REAL : _TcVnVector3_REAL;
    _tcVnVector3_SINT : _TcVnVector3_SINT;
    _tcVnVector3_UINT : _TcVnVector3_UINT;
    _tcVnVector3_USINT : _TcVnVector3_USINT;
    _tcVnVector4_DINT : _TcVnVector4_DINT;
    _tcVnVector4_INT : _TcVnVector4_INT;
    _tcVnVector4_LREAL : _TcVnVector4_LREAL;
    _tcVnVector4_SINT : _TcVnVector4_SINT;
    _tcVnVector4_UINT : _TcVnVector4_UINT;
    _tcVnVector4_USINT : _TcVnVector4_USINT;
 
    // constants
    
    // arrays
    _array0to1OfDINT : _Array0to1OfDINT;
    _array0to1OfINT : _Array0to1OfINT;
    _array0to1OfLREAL : _Array0to1OfLREAL;
    _array0to1OfREAL : _Array0to1OfREAL;
    _array0to1OfSINT : _Array0to1OfSINT;
    _array0to1OfUINT : _Array0to1OfUINT;
    _array0to1OfUSINT : _Array0to1OfUSINT;
    _array0to2OfINT : _Array0to2OfINT;
    _array0to2OfLREAL : _Array0to2OfLREAL;
    _array0to2OfREAL : _Array0to2OfREAL;
    _array0to2OfSINT : _Array0to2OfSINT;
    _array0to2OfUINT : _Array0to2OfUINT;
    _array0to2OfUSINT : _Array0to2OfUSINT;
    _array0to3OfDINT : _Array0to3OfDINT;
    _array0to3OfINT : _Array0to3OfINT;
	_array0to3OfLREAL : _Array0to3OfLREAL;
    _array0to6OfLREAL : _Array0to6OfLREAL;
    _array0to7OfLREAL : _Array0to7OfLREAL;
    
    // enums
	_eTcVn2dCodeSearchStrategy : _ETcVn2dCodeSearchStrategy(ETcVn2dCodeSearchStrategy.TCVN_CSS_DEFAULT);
	
    // structs
//   _gVSP_IMAGE_INFO : _GVSP_IMAGE_INFO;
//   _gVSP_LEADER_PAYLOAD_IMAGE : _GVSP_LEADER_PAYLOAD_IMAGE;
//  _gVSP_PIXEL_FORMAT : _GVSP_PIXEL_FORMAT;
//  _tcVnCameraCalibrationOptions : _TcVnCameraCalibrationOptions;
    _tcVnCircularArc : _TcVnCircularArc;
//  _tcVnCodeGrades1D : _TcVnCodeGrades1D;
//  _tcVnCodeGradesDM : _TcVnCodeGradesDM;
//  _tcVnCodeGradesQR : _TcVnCodeGradesQR;
//  _tcVnDMatch : _TcVnDMatch;
	_tcVnImageInfo : _TcVnImageInfo;
    _tcVnKeyPoint : _TcVnKeyPoint;
//  _tcVnMatrix : _TcVnMatrix;
//  _tcVnMoments : _TcVnMoments;
//  _tcVnParamsAGAST : _TcVnParamsAGAST;
//  _tcVnParamsAKAZE : _TcVnParamsAKAZE;
    _tcVnParamsBlobDetection : _TcVnParamsBlobDetection;
//  _tcVnParamsBRISK : _TcVnParamsBRISK;
//  _tcVnParamsFAST : _TcVnParamsFAST;
//  _tcVnParamsGFTT : _TcVnParamsGFTT;
//  _tcVnParamsKAZE : _TcVnParamsKAZE;
//  _tcVnParamsMSER : _TcVnParamsMSER;
//  _tcVnParamsORB : _TcVnParamsORB;
//  _tcVnParamsSB : _TcVnParamsSB;
    _tcVnPixelFormat : _TcVnPixelFormat;
	_tcVnRectangle_DINT : _TcVnRectangle_DINT;
    _tcVnRectangle_UDINT : _TcVnRectangle_UDINT;
    _tcVnRotatedRectangle : _TcVnRotatedRectangle;
    _tcVnSize2_REAL : _TcVnSize2_REAL;
	
	// interfaces
	_iTcVnImage : _ITcVnImage;
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="RegisterWithDatatypes" Id="{5bfb729e-cc5d-077c-086c-02393210cdae}">
      <Declaration><![CDATA[METHOD RegisterWithDatatypes
VAR_INPUT
	Datatypes : I_Datatypes;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// aliases
Datatypes.RegisterDatatype(_GVCP_REGISTER_ADDRESS);
Datatypes.RegisterDatatype(_tcVnPoint);
Datatypes.RegisterDatatype(_tcVnPoint2_DINT);
Datatypes.RegisterDatatype(_tcVnPoint2_LREAL);
Datatypes.RegisterDatatype(_tcVnPoint2_REAL);
Datatypes.RegisterDatatype(_tcVnPoint3_LREAL);
Datatypes.RegisterDatatype(_tcVnPoint3_REAL);
Datatypes.RegisterDatatype(_tcVnRectangle);

Datatypes.RegisterDatatype(_tcVnArray10_ITcVnImage);
Datatypes.RegisterDatatype(_tcVnArray3_Point2_REAL);
//Datatypes.RegisterDatatype(_tcVnArray33_UDINT);
Datatypes.RegisterDatatype(_tcVnArray4_LREAL);
Datatypes.RegisterDatatype(_tcVnArray4_Point2_REAL);
Datatypes.RegisterDatatype(_tcVnArray7_LREAL);
Datatypes.RegisterDatatype(_tcVnArray8_LREAL);
//Datatypes.RegisterDatatype(_tcVnMatrix2x3_LREAL);
//Datatypes.RegisterDatatype(_tcVnMatrix3x3_LREAL);
Datatypes.RegisterDatatype(_tcVnVector2_DINT);
Datatypes.RegisterDatatype(_tcVnVector2_INT);
Datatypes.RegisterDatatype(_tcVnVector2_LREAL);
Datatypes.RegisterDatatype(_tcVnVector2_REAL);
Datatypes.RegisterDatatype(_tcVnVector2_SINT);
Datatypes.RegisterDatatype(_tcVnVector2_UINT);
Datatypes.RegisterDatatype(_tcVnVector2_USINT);
Datatypes.RegisterDatatype(_tcVnVector3_INT);
Datatypes.RegisterDatatype(_tcVnVector3_LREAL);
Datatypes.RegisterDatatype(_tcVnVector3_REAL);
Datatypes.RegisterDatatype(_tcVnVector3_SINT);
Datatypes.RegisterDatatype(_tcVnVector3_UINT);
Datatypes.RegisterDatatype(_tcVnVector3_USINT);
Datatypes.RegisterDatatype(_tcVnVector4_DINT);
Datatypes.RegisterDatatype(_tcVnVector4_INT);
Datatypes.RegisterDatatype(_tcVnVector4_LREAL);
Datatypes.RegisterDatatype(_tcVnVector4_SINT);
Datatypes.RegisterDatatype(_tcVnVector4_UINT);
Datatypes.RegisterDatatype(_tcVnVector4_USINT);

// constants

// arrays
Datatypes.RegisterDatatype(_array0to1OfDINT);
Datatypes.RegisterDatatype(_array0to1OfINT);
Datatypes.RegisterDatatype(_array0to1OfLREAL);
Datatypes.RegisterDatatype(_array0to1OfREAL);
Datatypes.RegisterDatatype(_array0to1OfSINT);
Datatypes.RegisterDatatype(_array0to1OfUINT);
Datatypes.RegisterDatatype(_array0to1OfUSINT);
Datatypes.RegisterDatatype(_array0to2OfINT);
Datatypes.RegisterDatatype(_array0to2OfLREAL);
Datatypes.RegisterDatatype(_array0to2OfREAL);
Datatypes.RegisterDatatype(_array0to2OfSINT);
Datatypes.RegisterDatatype(_array0to2OfUINT);
Datatypes.RegisterDatatype(_array0to2OfUSINT);
Datatypes.RegisterDatatype(_array0to3OfDINT);
Datatypes.RegisterDatatype(_array0to3OfINT);
Datatypes.RegisterDatatype(_array0to3OfLREAL);
Datatypes.RegisterDatatype(_array0to6OfLREAL);
Datatypes.RegisterDatatype(_array0to7OfLREAL);

// enums
Datatypes.RegisterDatatype(_eTcVn2dCodeSearchStrategy);

// structs
//Datatypes.RegisterDatatype(_gVSP_IMAGE_INFO);
//Datatypes.RegisterDatatype(_gVSP_LEADER_PAYLOAD_IMAGE);
//Datatypes.RegisterDatatype(_gVSP_PIXEL_FORMAT);
//Datatypes.RegisterDatatype(_tcVnCameraCalibrationOptions);
Datatypes.RegisterDatatype(_tcVnCircularArc);
//Datatypes.RegisterDatatype(_tcVnCodeGrades1D);
//Datatypes.RegisterDatatype(_tcVnCodeGradesDM);
//Datatypes.RegisterDatatype(_tcVnCodeGradesQR);
//Datatypes.RegisterDatatype(_tcVnDMatch
Datatypes.RegisterDatatype(_tcVnImageInfo);
Datatypes.RegisterDatatype(_tcVnKeyPoint);
//Datatypes.RegisterDatatype(_tcVnMatrix);
//Datatypes.RegisterDatatype(_tcVnMoments);
//Datatypes.RegisterDatatype(_tcVnParamsAGAST);
//Datatypes.RegisterDatatype(_tcVnParamsAKAZE);
Datatypes.RegisterDatatype(_tcVnParamsBlobDetection);
//Datatypes.RegisterDatatype(_tcVnParamsBRISK);
//Datatypes.RegisterDatatype(_tcVnParamsFAST);
//Datatypes.RegisterDatatype(_tcVnParamsGFTT);
//Datatypes.RegisterDatatype(_tcVnParamsKAZE);
//Datatypes.RegisterDatatype(_tcVnParamsMSER);
//Datatypes.RegisterDatatype(_tcVnParamsORB);
//Datatypes.RegisterDatatype(_tcVnParamsSB);
Datatypes.RegisterDatatype(_tcVnPixelFormat);
Datatypes.RegisterDatatype(_tcVnRectangle_DINT);
Datatypes.RegisterDatatype(_tcVnRectangle_UDINT);
Datatypes.RegisterDatatype(_tcVnRotatedRectangle);
Datatypes.RegisterDatatype(_tcVnSize2_REAL);

// interfaces
Datatypes.RegisterDatatype(_iTcVnImage);]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>